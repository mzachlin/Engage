var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.5","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,1.273,1,1.796]],["body/modules/AppModule.html",[0,1.765,1,3.718,2,1.453,3,0.687,4,2.824,5,3.229,6,2.392,7,0.337,8,2.454,9,2.454,10,2.454,11,2.454,12,1.129,13,0.042,14,1.129,15,1.129,16,1.129,17,1.129,18,1.129,19,1.129,20,1.129,21,4.453,22,1.872,23,2.312,24,1.872,25,2.079,26,2.49,27,1.838,28,1.453,29,0.463,30,0.301,31,0.249,32,2.989,33,4.05,34,4.05,35,4.593,36,0.946,37,4.05,38,2.102,39,2.102,40,4.05,41,3.325,42,0.415,43,4.05,44,2.454,45,1.055,46,0.767,47,2.989,48,2.454,49,2.847,50,2.102,51,2.102,52,2.847,53,2.102,54,2.102,55,1.8,56,1.628,57,1.838,58,1.303,59,1.628,60,2.989,61,2.989,62,1.838,63,2.102,64,1.303,65,1.453,66,1.628,67,2.989,68,1.838,69,2.454,70,2.205,71,2.989,72,3.325,73,1.838,74,1.453,75,1.838,76,2.989,77,2.989,78,0.062,79,0.028,80,0.028]],["title/components/CalendarComponent.html",[81,0.148,82,0.598]],["body/components/CalendarComponent.html",[3,0.458,7,0.166,12,0.408,13,0.042,14,0.408,15,0.408,16,0.408,17,0.408,18,0.408,19,0.408,20,0.408,29,0.201,30,0.201,31,0.166,36,0.483,42,0.277,74,2.943,78,0.076,79,0.021,80,0.021,81,0.257,82,0.836,83,0.634,84,0.634,85,0.634,86,1.638,87,0.651,88,3.353,89,1.721,90,2.486,91,0.915,92,4.242,93,2.128,94,0.634,95,1.692,96,0.962,97,3.028,98,0.166,99,0.483,100,4.085,101,4.623,102,4.623,103,4.085,104,4.085,105,4.085,106,2.25,107,3.659,108,4.085,109,4.623,110,0.836,111,4.085,112,3.659,113,3.659,114,3.028,115,2.093,116,2.572,117,3.353,118,4.391,119,2.463,120,0.749,121,0.778,122,3.028,123,2.486,124,2.128,125,0.562,126,3.004,127,1.995,128,3.028,129,3.028,130,4.085,131,1.995,132,1.995,133,1.862,134,1.649,135,3.605,136,2.486,137,2.486,138,0.897,139,1.127,140,1.995,141,2.25,142,2.486,143,1.403,144,2.486,145,2.486,146,4.629,147,1.995,148,1.995,149,1.995,150,1.995,151,1.862,152,1.995,153,1.995,154,0.749,155,0.808,156,0.663,157,4.371,158,1.638,159,3.028,160,3.659,161,4.085,162,1.995,163,1.862,164,2.128,165,2.128,166,3.028,167,1.642,168,1.995,169,1.995,170,1.995,171,4.623,172,3.177,173,2.486,174,3.028,175,3.028,176,1.995,177,3.028,178,1.995,179,0.939,180,3.028,181,1.995,182,3.028,183,1.995,184,1.995,185,0.571,186,3.028,187,1.995,188,1.995,189,0.704,190,0.704,191,2.252,192,3.028,193,1.995,194,1.995,195,1.995,196,2.486,197,1.995,198,1.995,199,1.995,200,1.995,201,1.995,202,1.995,203,1.995,204,1.995,205,1.995,206,1.403,207,1.995,208,1.995,209,1.995,210,1.995,211,3.028,212,3.028,213,3.028,214,1.995,215,1.995,216,1.638,217,3.028,218,1.995,219,1.995,220,1.638,221,1.319,222,1.995,223,1.995,224,1.995,225,3.028,226,3.028,227,2.128,228,3.028,229,3.028,230,3.028,231,3.028,232,3.028,233,0.962,234,0.962,235,0.962,236,1.049,237,0.634,238,0.634,239,1.527,240,0.318,241,0.962,242,0.634,243,0.408,244,0.634,245,0.634,246,0.634,247,0.634,248,0.634,249,0.634,250,0.634]],["title/modules/ComponentsModule.html",[0,1.273,70,1.59]],["body/modules/ComponentsModule.html",[0,2.117,2,1.925,3,0.91,4,3.23,5,2.785,6,1.925,7,0.456,13,0.042,26,2.987,27,2.436,28,1.925,29,0.4,30,0.4,31,0.33,36,0.912,41,3.987,42,0.55,44,3.987,45,0.91,46,1.017,70,3.229,78,0.083,79,0.033,80,0.033,82,1.225,91,0.632,243,1.225,251,3.252,252,3.252,253,3.252,254,3.962,255,3.962,256,4.857,257,2.785,258,2.785,259,3.252]],["title/classes/Device.html",[78,0.061,240,0.466]],["body/classes/Device.html",[7,0.321,13,0.041,29,0.389,30,0.389,31,0.321,78,0.1,79,0.033,80,0.033,87,0.615,98,0.321,99,0.762,121,0.753,125,0.547,155,0.906,156,0.866,167,1.896,179,0.991,240,0.935,260,3.167,261,2.712,262,3.167,263,2.101,264,3.858,265,1.512,266,2.105,267,3.814,268,4.665,269,5.682,270,3.858,271,3.858,272,1.873,273,3.359,274,2.083,275,3.858,276,3.359,277,3.858,278,3.923,279,4.779,280,2.101]],["title/components/DeviceInfoPage.html",[12,0.598,81,0.148]],["body/components/DeviceInfoPage.html",[3,0.6,7,0.217,12,0.951,13,0.042,14,0.534,15,0.534,16,0.534,17,0.534,18,0.534,19,0.534,20,0.534,24,1.639,29,0.431,30,0.263,31,0.217,36,0.887,42,0.362,45,0.6,46,0.67,55,1.023,64,1.137,65,1.268,68,3.282,74,2.257,78,0.054,79,0.025,80,0.025,81,0.248,82,0.534,83,0.83,84,0.83,85,0.83,87,0.416,91,0.681,93,1.835,94,0.83,95,1.786,96,1.172,98,0.217,99,0.588,119,1.792,120,0.755,121,0.725,125,0.538,134,2.529,138,0.473,154,0.534,155,0.781,156,0.473,163,2.856,167,1.359,179,0.946,185,1.054,189,1.983,190,0.921,233,1.172,234,1.172,235,1.172,236,1.192,237,0.83,238,0.83,239,1.769,240,0.932,241,1.172,242,0.83,243,0.534,244,0.83,245,0.83,246,0.83,247,0.83,248,0.83,249,0.83,250,0.83,257,1.835,265,1.445,266,1.729,267,3.575,268,3.026,272,2.128,273,3.265,274,2.135,280,1.421,281,4.382,282,1.835,283,1.607,284,2.267,285,3.127,286,3.026,287,1.454,288,1.92,289,2.73,290,4.645,291,1.137,292,1.993,293,3.509,294,3.687,295,2.257,296,2.61,297,2.142,298,2.529,299,3.813,300,3.687,301,2.61,302,1.792,303,2.61,304,2.61,305,2.61,306,2.142,307,2.142,308,1.421,309,1.421,310,2.61,311,1.137,312,2.61,313,2.61,314,2.142,315,2.142,316,2.61,317,2.61,318,2.61,319,2.61,320,2.61,321,2.61,322,2.61,323,3.687,324,3.265,325,3.687,326,3.687,327,3.687,328,3.687]],["title/classes/Event.html",[78,0.061,91,0.466]],["body/classes/Event.html",[7,0.256,13,0.042,29,0.31,30,0.31,31,0.256,74,2.598,78,0.086,79,0.028,80,0.028,87,0.657,91,0.966,98,0.256,99,0.657,106,2.863,110,0.844,115,1.797,121,0.77,125,0.56,138,0.844,154,0.629,155,0.49,156,0.557,165,2.899,167,1.9,191,2.169,221,1.797,227,2.899,261,2.159,262,2.521,267,3.499,272,2.176,273,2.899,274,1.797,276,2.899,329,2.521,330,4.977,331,4.977,332,4.977,333,4.977,334,3.758,335,4.124,336,3.071,337,4.086,338,3.071,339,4.086,340,3.071,341,2.899,342,3.071,343,3.071,344,2.71,345,4.977,346,3.386,347,3.386,348,3.386,349,3.386,350,3.071,351,4.124,352,3.071,353,4.124,354,4.389,355,3.071,356,4.124,357,2.899,358,4.124,359,4.124,360,4.124,361,4.124,362,3.071,363,3.071,364,3.071,365,3.071,366,3.071,367,3.071,368,3.071,369,3.071,370,3.071]],["title/components/EventDatePage.html",[14,0.598,81,0.148]],["body/components/EventDatePage.html",[3,0.508,7,0.184,12,0.452,13,0.042,14,0.88,15,0.452,16,0.452,17,0.452,18,0.452,19,0.452,20,0.452,25,1.685,29,0.223,30,0.223,31,0.184,36,0.766,42,0.307,45,0.508,46,0.567,66,1.203,73,3.38,74,2.717,78,0.046,79,0.022,80,0.022,81,0.233,82,0.452,83,0.702,84,0.702,85,0.702,87,0.521,89,2,91,0.932,94,0.702,95,1.763,96,1.039,98,0.184,99,0.521,110,0.88,115,2.093,119,2.334,120,0.452,121,0.755,124,3.022,125,0.525,138,0.901,139,0.999,154,0.669,155,0.685,156,0.593,157,2.683,164,2.298,167,1.458,179,0.999,185,1.459,189,1.999,190,0.78,191,1.999,196,2.683,221,0.963,227,2.298,233,1.039,234,1.039,235,1.039,236,1.104,237,0.702,238,0.702,239,1.747,240,0.352,241,1.039,242,0.702,243,0.452,244,0.702,245,0.702,246,0.702,247,0.702,248,0.702,249,0.702,250,0.702,263,1.78,266,1.619,272,0.866,283,1.424,287,1.104,288,1.798,289,2.644,291,0.963,292,1.882,295,1.074,302,1.588,308,2.615,309,1.203,311,0.963,347,3.529,348,3.529,349,3.529,371,3.865,372,1.814,373,3.022,374,3.268,375,3.529,376,4.298,377,4.803,378,4.621,379,3.529,380,4.298,381,2.683,382,1.89,383,3.268,384,2.21,385,3.268,386,2.683,387,2.21,388,2.298,389,2.683,390,2.21,391,2.683,392,3.268,393,2.01,394,2.21,395,2.21,396,2.21,397,2.01,398,2.683,399,3.268,400,3.268,401,3.268,402,3.268,403,3.268,404,3.268,405,2.21,406,2.298,407,3.268,408,3.529,409,2.21,410,1.78,411,1.074,412,2.21,413,2.683,414,2.21,415,1.814,416,2.298,417,2.21,418,2.21,419,2.21,420,2.21,421,1.814,422,2.21,423,2.21,424,3.587,425,2.298,426,2.683,427,2.683]],["title/components/EventInfoPage.html",[15,0.598,81,0.148]],["body/components/EventInfoPage.html",[3,0.711,7,0.258,12,0.634,13,0.042,14,0.634,15,1.022,16,0.634,17,0.634,18,0.634,19,0.634,20,0.634,24,1.762,29,0.471,30,0.312,31,0.258,36,0.83,42,0.43,45,0.711,46,0.795,55,1.213,64,1.349,65,1.504,75,3.295,78,0.064,79,0.028,80,0.028,81,0.264,82,0.634,83,0.984,84,0.984,85,0.984,87,0.493,91,0.946,94,0.984,95,1.837,96,1.318,98,0.258,99,0.661,110,0.849,119,2.015,120,0.634,121,0.722,125,0.504,138,0.561,139,0.795,154,0.634,155,0.745,156,0.561,189,1.963,190,1.092,233,1.318,234,1.318,235,1.318,236,1.282,237,0.984,238,0.984,239,1.824,240,0.493,241,1.318,242,0.984,243,0.634,244,0.984,245,0.984,246,0.984,247,0.984,248,0.984,249,0.984,250,0.984,266,1.837,282,2.176,283,1.807,284,2.549,285,2.549,286,3.403,287,0.795,288,2.04,289,2.809,291,1.349,292,2.1,297,2.541,302,2.015,311,1.349,324,2.914,371,3.767,393,2.549,411,1.504,416,2.176,428,4.146,429,4.993,430,2.272,431,4.146,432,4.146,433,4.146,434,3.095,435,4.146,436,3.403]],["title/components/EventItemComponent.html",[81,0.148,243,0.598]],["body/components/EventItemComponent.html",[3,0.735,7,0.267,12,0.655,13,0.042,14,0.655,15,0.868,16,0.655,17,0.655,18,0.655,19,0.655,20,0.655,29,0.427,30,0.323,31,0.267,36,0.839,42,0.444,45,0.735,46,0.822,66,1.742,72,2.627,75,1.968,78,0.067,79,0.029,80,0.029,81,0.267,82,0.655,83,1.017,84,1.017,85,1.017,87,0.758,89,1.661,91,0.955,94,1.017,95,1.847,96,1.347,98,0.267,110,0.868,117,4.154,119,2.629,120,0.655,121,0.66,125,0.427,138,0.58,139,0.822,154,0.655,155,0.758,156,0.58,233,1.347,234,1.347,235,1.347,236,1.299,237,1.017,238,1.017,239,1.802,240,0.51,241,1.347,242,1.017,243,1.036,244,1.017,245,1.017,246,1.017,247,1.017,248,1.017,249,1.017,250,1.017,258,3.557,259,4.154,283,1.847,284,2.606,285,2.606,288,1.661,291,1.395,292,1.983,324,2.98,397,2.606,410,2.588,411,1.555,424,2.98,437,4.154,438,2.627,439,4.239,440,4.239,441,4.239,442,4.239,443,3.48,444,2.308,445,2.308,446,3.2,447,4.239,448,2.249,449,3.2,450,3.2,451,4.239,452,4.239,453,4.239,454,4.239]],["title/components/EventsPage.html",[16,0.598,81,0.148]],["body/components/EventsPage.html",[3,0.468,7,0.17,12,0.417,13,0.042,14,0.629,15,0.417,16,0.954,17,0.417,18,0.417,19,0.417,20,0.417,24,0.719,25,1.618,29,0.374,30,0.205,31,0.17,36,0.862,38,1.432,42,0.283,45,0.851,46,0.523,55,0.798,64,0.887,65,0.99,66,1.109,73,1.252,74,2.717,78,0.077,79,0.021,80,0.021,81,0.225,82,0.417,83,0.647,84,0.647,85,0.647,87,0.591,89,1.618,91,0.933,92,2.524,93,3.652,94,0.647,95,1.7,96,0.977,98,0.17,99,0.49,110,0.845,115,2.03,119,2.42,120,0.417,121,0.751,125,0.532,133,1.891,134,1.674,138,0.845,139,1.06,141,1.891,146,3.388,151,1.891,154,0.758,155,0.706,156,0.672,164,2.162,165,3.275,167,1.312,172,1.891,179,0.951,185,1.485,189,1.928,190,0.719,191,1.931,221,1.34,233,0.977,234,0.977,235,0.977,236,1.06,237,0.647,238,0.647,239,1.719,240,0.325,241,0.977,242,0.647,243,0.417,244,0.647,245,0.647,246,0.647,247,0.647,248,0.647,249,0.647,250,0.647,263,1.674,265,1.826,266,1.564,272,1.205,284,1.891,287,1.06,288,1.737,289,2.599,291,0.887,292,1.826,295,1.494,302,1.494,308,2.712,309,1.109,311,0.887,344,1.674,346,1.672,354,1.672,375,3.388,378,4.643,379,3.388,381,2.524,382,1.8,386,2.524,388,2.162,389,2.524,398,3.825,408,3.388,410,1.674,411,0.99,413,2.524,415,1.672,416,1.432,421,2.524,424,3.501,425,2.162,426,2.524,427,2.524,455,1.672,456,2.524,457,3.075,458,2.524,459,3.075,460,4.128,461,3.075,462,3.075,463,2.036,464,3.075,465,3.388,466,2.036,467,2.036,468,3.075,469,2.162,470,3.075,471,3.075,472,2.036,473,3.075,474,2.036,475,3.075,476,3.075,477,3.075,478,2.524,479,2.036,480,3.075,481,3.075,482,2.036,483,3.075,484,2.036,485,3.075,486,2.524,487,3.075,488,3.075,489,2.036,490,2.036,491,2.036,492,2.036,493,2.036,494,2.036,495,2.036,496,2.036,497,2.524,498,2.036,499,3.075,500,3.705,501,3.075,502,2.036,503,2.036,504,2.036,505,2.036,506,2.036,507,2.036,508,2.036,509,2.036,510,2.036,511,2.036,512,2.036,513,2.036,514,3.075,515,3.075]],["title/injectables/FirebaseAuthProvider.html",[22,1.031,516,0.928]],["body/injectables/FirebaseAuthProvider.html",[6,2.16,7,0.171,13,0.042,22,1.091,23,1.805,28,1.502,29,0.312,30,0.207,31,0.171,36,0.708,42,0.285,56,1.117,57,1.261,58,2.334,78,0.043,79,0.028,80,0.021,87,0.708,89,2.279,98,0.171,99,0.493,106,2.288,110,0.91,120,0.42,121,0.734,125,0.489,133,1.901,138,1.027,139,1.199,143,1.441,154,0.91,155,0.708,156,0.806,163,1.901,167,1.8,172,1.261,179,0.794,185,0.586,189,1.866,190,0.724,191,2.113,221,2.036,236,1.245,280,2.026,287,1.281,295,2.013,298,2.544,308,3.005,309,1.117,406,2.173,430,2.356,444,2.781,456,1.683,469,2.173,516,1.183,517,3.293,518,1.683,519,3.4,520,3.091,521,3.091,522,4.671,523,4.142,524,3.091,525,3.091,526,3.091,527,4.142,528,3.091,529,4.142,530,3.4,531,3.091,532,2.538,533,3.091,534,1.683,535,2.051,536,3.091,537,2.051,538,3.508,539,3.4,540,3.091,541,3.091,542,3.091,543,3.091,544,3.846,545,2.051,546,2.538,547,3.648,548,3.765,549,3.091,550,2.051,551,3.091,552,1.901,553,3.091,554,3.808,555,2.051,556,2.538,557,3.124,558,3.72,559,3.091,560,2.051,561,3.091,562,3.054,563,2.051,564,3.124,565,3.091,566,2.051,567,3.091,568,2.051,569,2.051,570,2.173,571,2.288,572,1.683,573,2.051,574,3.091,575,2.051,576,2.051,577,2.051,578,3.091,579,2.051,580,2.051,581,2.051,582,2.051,583,3.091,584,2.051,585,2.051,586,2.051,587,2.051,588,2.051,589,1.683,590,1.683,591,2.051,592,2.051,593,1.683,594,2.051,595,2.051,596,2.051,597,2.051,598,2.051,599,1.683,600,2.173,601,3.091,602,2.051,603,2.051,604,2.051,605,3.72,606,2.051,607,2.051,608,1.441,609,2.051,610,2.051,611,2.051,612,2.051,613,2.051,614,2.051,615,2.051,616,2.051,617,2.051,618,3.091,619,3.091,620,3.091,621,3.091,622,2.051,623,2.051,624,2.051,625,4.142,626,3.091,627,1.441,628,2.051,629,2.051,630,1.683,631,2.051,632,3.091,633,2.051,634,2.051,635,2.051,636,2.051]],["title/injectables/FirebaseConfigProvider.html",[23,1.273,516,0.928]],["body/injectables/FirebaseConfigProvider.html",[2,2.247,6,2.588,7,0.305,13,0.042,23,2.015,29,0.369,30,0.369,31,0.305,36,0.737,42,0.508,56,2.9,57,2.251,78,0.076,79,0.031,80,0.031,87,0.584,98,0.305,99,0.737,110,0.947,120,1.038,121,0.703,133,2.843,134,2.518,138,0.839,139,1.187,179,0.94,185,1.047,206,2.574,280,1.993,287,1.301,298,2.518,314,4.371,337,3.005,339,3.796,430,2.767,444,2.518,516,1.745,517,3.274,539,3.005,562,3.796,570,3.743,571,2.843,637,3.005,638,5.325,639,4.624,640,3.661,641,3.796,642,4.624,643,4.624,644,4.624,645,3.661,646,3.661,647,3.661,648,3.005,649,4.624,650,4.624,651,3.661,652,3.005,653,3.661,654,3.661,655,3.661,656,3.661,657,3.661,658,3.661,659,3.661,660,3.661,661,3.661,662,3.661,663,3.661,664,3.661,665,3.661,666,3.005,667,3.661]],["title/injectables/FirebaseDatabaseProvider.html",[24,1.031,516,0.928]],["body/injectables/FirebaseDatabaseProvider.html",[7,0.185,13,0.042,23,1.879,24,1.159,29,0.224,30,0.224,31,0.185,36,0.869,42,0.309,56,1.211,57,1.368,64,2.314,65,1.898,78,0.081,79,0.022,80,0.022,87,0.687,91,0.885,98,0.185,99,0.524,110,0.672,120,0.455,121,0.724,125,0.555,126,3.952,138,1.033,151,2.401,154,0.883,155,0.687,156,0.782,167,1.779,179,1.002,185,1.377,189,2.096,190,1.159,221,1.702,240,0.877,272,2.081,274,2.346,285,2.96,287,1.34,306,1.826,307,1.826,308,1.211,309,1.211,341,3.384,382,2.096,397,2.96,411,1.081,430,2.34,448,1.564,516,1.462,517,3.264,532,1.826,534,2.696,546,3.952,557,3.384,572,1.826,599,2.696,600,2.309,668,1.826,669,3.284,670,3.284,671,4.312,672,3.284,673,4.312,674,3.284,675,2.224,676,3.284,677,2.224,678,4.814,679,2.224,680,4.312,681,3.54,682,3.284,683,2.224,684,2.224,685,3.284,686,2.224,687,2.224,688,4.814,689,4.814,690,4.814,691,2.224,692,2.224,693,4.312,694,1.826,695,1.826,696,2.224,697,2.224,698,2.224,699,5.219,700,3.905,701,3.284,702,3.284,703,3.905,704,3.905,705,4.814,706,2.224,707,3.284,708,2.224,709,3.284,710,3.284,711,3.284,712,2.224,713,2.224,714,2.224,715,2.224,716,3.284,717,3.284]],["title/injectables/GeofireProvider.html",[25,1.145,516,0.928]],["body/injectables/GeofireProvider.html",[4,1.573,6,1.244,7,0.213,13,0.042,24,1.283,25,1.003,29,0.162,30,0.162,31,0.134,36,0.829,42,0.223,45,0.369,64,0.7,65,0.781,78,0.033,79,0.017,80,0.017,87,0.707,91,0.861,98,0.331,99,0.408,106,2.6,110,0.744,115,2.403,120,0.329,121,0.658,125,0.501,136,3.641,138,0.98,139,0.657,151,2.6,154,0.908,155,0.707,156,0.804,158,3.471,163,2.235,167,1.344,172,2.235,173,2.101,185,0.732,189,1.957,190,0.903,191,1.39,220,2.101,221,2.068,236,0.819,240,0.408,265,2.061,272,1.98,280,1.393,287,1.35,293,2.101,295,1.549,298,2.162,341,1.799,344,1.98,357,2.241,373,2.556,382,2.581,393,1.96,406,2.556,410,0.875,411,0.781,430,0.781,443,4.148,444,1.393,445,3.074,448,1.13,469,2.79,478,2.984,516,1.013,570,2.973,571,0.988,589,1.319,600,1.799,694,1.319,695,1.319,718,1.13,719,2.559,720,3.635,721,3.635,722,2.559,723,2.559,724,2.559,725,2.559,726,2.559,727,2.559,728,1.607,729,2.559,730,2.559,731,1.607,732,2.984,733,4.228,734,3.471,735,2.984,736,4.435,737,2.559,738,1.607,739,2.559,740,3.236,741,1.607,742,5.197,743,2.559,744,2.559,745,5.666,746,1.607,747,4.228,748,4.228,749,3.635,750,2.559,751,1.607,752,2.101,753,2.556,754,2.559,755,2.984,756,1.607,757,1.607,758,4.436,759,2.559,760,2.559,761,2.559,762,2.101,763,1.607,764,3.635,765,1.607,766,3.188,767,1.607,768,1.607,769,2.617,770,0.988,771,3.635,772,4.228,773,1.607,774,1.607,775,1.607,776,1.607,777,1.607,778,3.969,779,1.319,780,1.607,781,1.607,782,1.607,783,1.607,784,3.969,785,3.969,786,2.559,787,2.559,788,2.559,789,2.559,790,2.559,791,2.559,792,2.559,793,2.559,794,2.559,795,2.559,796,2.617,797,2.559,798,2.559,799,2.559,800,2.559,801,2.559,802,2.559,803,2.559,804,2.559,805,2.559,806,2.559,807,2.559,808,2.559,809,3.188,810,3.969,811,3.188,812,3.969,813,3.188,814,3.188,815,3.635,816,2.559,817,2.559,818,2.559,819,2.559,820,2.559,821,2.559,822,2.559,823,3.635,824,2.559,825,2.559,826,3.188,827,2.559,828,1.607,829,1.607,830,1.607,831,1.607,832,1.607,833,1.607,834,1.607,835,1.607,836,2.559,837,2.101,838,1.607,839,1.607,840,2.559,841,1.607,842,1.607,843,1.607,844,1.607,845,1.607,846,1.607,847,1.607,848,1.607,849,1.607,850,1.319,851,1.607,852,1.319,853,1.607,854,1.607,855,1.607,856,1.607,857,2.559,858,1.607,859,1.607,860,1.319,861,1.607,862,1.607]],["title/components/HomePage.html",[17,0.598,81,0.148]],["body/components/HomePage.html",[3,0.549,7,0.199,12,0.709,13,0.042,14,0.489,15,0.489,16,0.489,17,0.914,18,0.489,19,0.709,20,0.489,22,1.575,25,1.749,26,2.129,29,0.349,30,0.241,31,0.199,36,0.812,42,0.332,45,0.796,46,0.614,55,0.937,58,1.042,59,1.302,66,1.302,68,1.47,78,0.05,79,0.024,80,0.024,81,0.24,82,0.489,83,0.76,84,0.76,85,0.76,87,0.381,89,1.357,91,0.755,94,0.76,95,1.757,96,1.101,98,0.199,99,0.552,110,0.709,120,0.709,121,0.738,124,1.681,125,0.498,138,0.809,139,0.614,144,1.963,154,0.489,155,0.649,156,0.433,206,2.434,233,1.101,234,1.418,235,1.101,236,1.146,237,0.76,238,0.76,239,1.738,240,0.552,241,1.101,242,0.76,243,0.489,244,0.76,245,0.76,246,0.76,247,0.76,248,0.76,249,0.76,250,0.76,265,2.116,266,1.876,272,1.595,283,1.774,287,1.268,288,1.935,292,1.935,295,1.162,315,4.432,334,1.681,344,1.885,382,1.978,388,1.681,436,4.054,444,1.885,445,2.689,497,1.963,564,2.434,608,1.681,627,2.434,666,1.963,681,2.842,740,3.33,752,2.842,753,2.434,755,2.842,758,3.664,762,1.963,769,2.842,770,1.47,796,2.842,837,1.963,850,1.963,852,1.963,860,2.842,863,1.681,864,3.471,865,3.462,866,4.736,867,3.471,868,4.463,869,4.463,870,4.736,871,2.391,872,4.938,873,3.471,874,4.181,875,2.503,876,3.462,877,2.391,878,2.391,879,2.391,880,3.462,881,4.463,882,2.391,883,2.391,884,2.391,885,2.391,886,2.391,887,1.963,888,2.434,889,1.963,890,1.963,891,2.434,892,1.963,893,2.391,894,2.391,895,2.391,896,2.391,897,2.391,898,3.462,899,2.391,900,2.391,901,2.391,902,3.462,903,2.391,904,3.462,905,2.842,906,2.391,907,2.391,908,2.391,909,2.391,910,2.391,911,1.681,912,2.391,913,2.391,914,2.391,915,3.462,916,2.391,917,1.963,918,3.462,919,2.391,920,3.462,921,2.391,922,2.391,923,1.681,924,2.391,925,2.391,926,2.391,927,2.391,928,2.391,929,2.391,930,2.391,931,2.391,932,1.681,933,1.681,934,2.391,935,2.391,936,1.681]],["title/components/LoginModal.html",[18,0.598,81,0.148]],["body/components/LoginModal.html",[3,0.503,7,0.183,12,0.449,13,0.042,14,0.449,15,0.449,16,0.449,17,0.449,18,0.876,19,0.449,20,0.449,22,1.511,28,1.065,29,0.221,30,0.221,31,0.183,36,0.729,42,0.304,45,0.503,46,0.563,55,0.859,58,0.955,59,1.193,62,3.253,63,3.366,78,0.046,79,0.031,80,0.022,81,0.232,82,0.449,83,0.696,84,0.696,85,0.696,87,0.349,88,2.667,89,1.995,91,0.617,94,0.696,95,1.727,96,1.032,98,0.183,99,0.518,110,0.665,116,2.283,120,0.449,121,0.722,125,0.432,134,2.88,137,3.514,138,0.923,139,1.099,141,2.632,142,2.667,143,2.283,154,0.449,155,0.617,156,0.397,179,0.834,185,0.929,189,1.146,190,0.773,233,1.032,234,1.032,235,1.032,236,1.099,237,0.696,238,0.696,239,1.653,240,0.349,241,1.032,242,0.696,243,0.449,244,0.696,245,0.696,246,0.696,247,1.653,248,0.696,249,0.696,250,0.696,263,1.769,266,1.613,278,2.667,287,1.443,288,1.792,289,2.64,291,0.955,292,1.877,302,1.579,311,0.955,357,2.283,373,2.283,393,1.997,397,1.997,519,2.667,538,2.283,544,3.924,547,3.514,548,3.214,554,3.951,557,3.366,590,2.667,593,2.667,630,2.667,641,2.667,648,2.667,732,2.667,734,1.799,735,3.514,867,2.721,873,3.009,875,2.38,911,2.283,932,1.54,933,1.54,936,1.54,937,4.342,938,1.799,939,4.281,940,3.248,941,4.281,942,4.281,943,4.788,944,4.281,945,5.09,946,4.788,947,3.871,948,4.281,949,4.956,950,3.248,951,2.191,952,4.281,953,2.191,954,2.667,955,3.248,956,2.191,957,3.248,958,3.871,959,3.871,960,3.248,961,4.281,962,3.871,963,2.191,964,4.788,965,3.871,966,3.248,967,4.281,968,3.248,969,3.248,970,2.191,971,3.248,972,1.799,973,2.191,974,2.191,975,3.248,976,2.191,977,2.191,978,2.191,979,2.191,980,2.191,981,2.191,982,2.191,983,2.191,984,1.799,985,1.799,986,2.191,987,2.191,988,2.191,989,2.191,990,2.191,991,3.248,992,3.248,993,3.248,994,2.191,995,2.191]],["title/components/LoginPage.html",[19,0.598,81,0.148]],["body/components/LoginPage.html",[3,0.624,7,0.226,12,0.556,13,0.042,14,0.556,15,0.556,16,0.556,17,0.556,18,0.894,19,0.967,20,0.556,22,1.818,29,0.274,30,0.274,31,0.226,36,0.753,42,0.377,45,0.624,46,0.697,55,1.064,58,1.183,59,1.478,62,1.669,63,3.07,78,0.057,79,0.026,80,0.026,81,0.252,82,0.556,83,0.863,84,0.863,85,0.863,87,0.433,89,2.018,91,0.696,94,0.863,95,1.798,96,1.205,98,0.226,99,0.604,110,1.104,116,3.62,120,0.556,121,0.748,125,0.501,138,0.792,139,1.121,141,3.167,154,0.556,155,0.696,156,0.492,233,1.205,234,1.205,235,1.205,236,1.213,237,0.863,238,0.863,239,1.782,240,0.433,241,1.205,242,0.863,243,0.556,244,0.863,245,0.863,246,0.863,247,1.812,248,0.863,249,0.863,250,0.863,263,2.064,266,1.979,283,1.652,287,0.697,288,1.948,289,2.749,291,1.183,292,2.018,302,1.842,311,1.183,391,4.228,465,3.111,538,2.664,544,3.322,548,3.322,556,3.585,564,3.322,753,1.908,867,3.62,873,3.62,875,3.167,932,1.908,933,3.07,936,1.908,954,4.426,984,2.229,985,2.229,996,2.229,997,3.79,998,4.726,999,4.726,1000,4.726,1001,4.367,1002,4.726,1003,2.715,1004,2.715,1005,4.726,1006,4.726,1007,2.715,1008,2.715,1009,4.726,1010,2.715,1011,2.715,1012,2.715,1013,2.715,1014,2.715,1015,2.715,1016,2.715,1017,2.715,1018,2.715,1019,2.715,1020,2.715,1021,3.79]],["title/components/MyApp.html",[20,0.598,81,0.148]],["body/components/MyApp.html",[3,0.634,7,0.23,12,0.565,13,0.042,14,0.565,15,0.565,16,0.902,17,1.024,18,0.565,19,0.565,20,0.974,22,1.68,27,1.697,28,1.863,29,0.278,30,0.278,31,0.23,36,0.863,42,0.383,45,1.093,46,0.708,48,2.265,49,3.988,50,1.94,51,1.94,52,3.988,53,1.94,54,1.94,55,1.081,58,1.202,59,1.502,69,2.265,78,0.057,79,0.026,80,0.026,81,0.269,82,0.565,83,0.877,84,0.877,85,0.877,91,0.759,94,0.877,95,1.769,96,1.218,98,0.23,99,0.611,110,0.785,120,0.565,121,0.773,123,2.265,125,0.535,135,3.616,138,0.799,139,1.131,145,2.265,154,0.785,155,0.759,156,0.695,179,0.708,185,0.789,233,1.218,234,1.218,235,1.218,236,1.222,237,0.877,238,0.877,239,1.817,240,0.44,241,1.218,242,0.877,243,0.565,244,0.877,245,0.877,246,0.877,247,0.877,248,0.877,249,0.877,250,0.877,265,1.081,266,1.911,283,1.202,287,0.708,298,1.502,311,1.202,334,2.695,458,2.265,486,3.147,530,3.907,554,2.695,571,1.697,608,1.94,652,3.147,770,1.697,864,1.94,874,4.657,875,2.708,911,1.94,923,1.94,1022,2.265,1023,3.833,1024,5.497,1025,4.759,1026,4.759,1027,3.833,1028,2.759,1029,3.833,1030,2.759,1031,3.833,1032,2.759,1033,2.759,1034,2.759,1035,3.833,1036,2.759,1037,4.405,1038,2.759,1039,2.759,1040,2.759,1041,2.759,1042,2.759,1043,2.759,1044,2.759,1045,2.759,1046,2.759,1047,2.759,1048,2.759,1049,2.759,1050,2.759,1051,2.759,1052,2.759,1053,2.759,1054,2.759,1055,2.759,1056,2.759,1057,2.759,1058,2.759,1059,2.759,1060,2.759,1061,2.759,1062,2.759,1063,3.833]],["title/classes/Organization.html",[78,0.061,274,1.273]],["body/classes/Organization.html",[7,0.351,13,0.041,29,0.425,30,0.425,31,0.351,78,0.112,79,0.034,80,0.034,87,0.672,98,0.351,99,0.804,121,0.7,125,0.509,155,0.925,167,1.845,179,1.082,261,2.964,274,2.557,276,3.546,864,4.08,1064,3.461,1065,4.216,1066,5.044,1067,4.216,1068,4.216,1069,4.216]],["title/coverage.html",[1070,3.272]],["body/coverage.html",[12,0.762,13,0.041,14,0.762,15,0.762,16,0.762,17,0.762,18,0.762,19,0.762,20,0.762,22,1.314,23,1.623,24,1.314,25,1.46,31,0.31,56,2.028,58,1.623,62,2.29,64,1.623,68,2.29,73,2.29,75,2.29,78,0.106,79,0.032,80,0.032,81,0.298,82,0.762,86,3.057,91,0.594,125,0.376,191,1.623,216,3.057,240,0.594,243,0.762,258,2.618,260,3.057,274,1.623,281,3.057,282,3.286,299,3.057,329,3.057,371,3.286,372,3.057,437,3.057,438,3.057,455,3.057,516,1.703,517,3.141,518,3.057,552,2.874,637,3.057,668,3.057,718,2.618,863,3.592,888,2.618,891,2.618,905,3.057,937,3.057,938,3.057,996,3.057,1022,3.057,1064,3.057,1070,3.057,1071,3.724,1072,3.724,1073,3.724,1074,3.724,1075,3.724,1076,4.675,1077,4.675,1078,5.52,1079,3.724,1080,3.724,1081,3.724,1082,3.724,1083,3.724,1084,3.724,1085,3.724,1086,3.724,1087,3.724,1088,3.724,1089,3.724,1090,3.724,1091,4.675,1092,3.724,1093,3.724,1094,3.724,1095,3.724,1096,3.724,1097,3.724,1098,3.724,1099,3.724,1100,3.724,1101,3.724,1102,3.724,1103,3.724]],["title/dependencies.html",[2,1.707,1104,2.439]],["body/dependencies.html",[2,1.848,13,0.042,38,3.329,39,3.626,42,0.528,45,1.319,46,0.976,49,2.673,50,2.673,51,2.673,52,2.673,53,2.673,54,2.673,79,0.032,80,0.032,240,0.606,257,2.673,265,1.49,382,1.848,430,1.848,740,2.673,770,2.338,923,4.037,972,3.121,1105,3.802,1106,5.853,1107,4.736,1108,3.802,1109,3.802,1110,3.802,1111,3.802,1112,5.157,1113,3.802,1114,3.802,1115,4.736,1116,5.892,1117,3.802,1118,3.802,1119,3.802,1120,3.802,1121,3.802,1122,3.802,1123,3.802,1124,3.802,1125,3.802,1126,3.802,1127,3.802,1128,3.802,1129,3.802,1130,3.802,1131,3.802,1132,3.802,1133,3.802,1134,3.802,1135,3.802,1136,3.802,1137,3.802,1138,3.802,1139,3.802,1140,3.802,1141,3.802,1142,3.802]],["title/index.html",[98,0.243,1143,2.397]],["body/index.html",[0,2.049,1,3.766,2,1.827,3,0.864,4,2.312,5,2.643,6,1.827,7,0.313,8,3.087,9,3.087,10,3.087,11,3.087,12,1.05,13,0.041,14,1.05,15,1.05,16,1.05,17,1.05,18,1.05,19,1.05,20,1.05,21,4.414,22,1.811,23,2.236,24,1.811,25,2.011,26,2.891,27,2.312,28,1.827,70,3.154,78,0.078,79,0.032,80,0.032,81,0.191,82,1.173,243,1.173,251,3.087,252,3.087,253,3.087,425,2.643,516,1.195,917,3.087,1143,3.087,1144,3.76,1145,3.76]],["title/modules.html",[0,1.737]],["body/modules.html",[0,2.033,1,2.869,13,0.036,39,3.762,70,2.541,79,0.036,80,0.036,90,4.394,1146,5.352,1147,5.352]],["title/miscellaneous/typealiases.html",[1148,1.499,1149,3.512]],["body/miscellaneous/typealiases.html",[13,0.036,79,0.036,80,0.036,98,0.383,115,2.439,125,0.464,410,3.048,445,3.133,718,3.235,779,3.778,1148,2.83,1150,4.602,1151,5.31]],["title/miscellaneous/variables.html",[552,2.16,1148,1.499]],["body/miscellaneous/variables.html",[13,0.04,79,0.036,80,0.036,98,0.372,115,2.273,125,0.45,179,1.339,185,1.492,265,2.044,344,2.84,445,2.84,552,2.744,627,3.667,863,3.137,887,3.664,888,3.886,889,3.664,890,3.664,891,3.886,892,3.664,1148,2.744,1152,5.216]]],"invertedIndex":[["",{"_index":13,"title":{},"body":{"modules/AppModule.html":{},"components/CalendarComponent.html":{},"modules/ComponentsModule.html":{},"classes/Device.html":{},"components/DeviceInfoPage.html":{},"classes/Event.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseConfigProvider.html":{},"injectables/FirebaseDatabaseProvider.html":{},"injectables/GeofireProvider.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MyApp.html":{},"classes/Organization.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":216,"title":{},"body":{"components/CalendarComponent.html":{},"coverage.html":{}}}],["0.8.26",{"_index":1142,"title":{},"body":{"dependencies.html":{}}}],["0/11",{"_index":1073,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":220,"title":{},"body":{"components/CalendarComponent.html":{},"injectables/GeofireProvider.html":{}}}],["1).getday",{"_index":214,"title":{},"body":{"components/CalendarComponent.html":{}}}],["1.3.3",{"_index":1130,"title":{},"body":{"dependencies.html":{}}}],["1.6",{"_index":452,"title":{},"body":{"components/EventItemComponent.html":{}}}],["1.61",{"_index":808,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["1/1",{"_index":1091,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":425,"title":{},"body":{"components/EventDatePage.html":{},"components/EventsPage.html":{},"index.html":{}}}],["10/13",{"_index":1085,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1078,"title":{},"body":{"coverage.html":{}}}],["11/14",{"_index":1089,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":903,"title":{},"body":{"components/HomePage.html":{}}}],["17",{"_index":921,"title":{},"body":{"components/HomePage.html":{}}}],["18/19",{"_index":1075,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":917,"title":{},"body":{"components/HomePage.html":{},"index.html":{}}}],["2.0.2",{"_index":1122,"title":{},"body":{"dependencies.html":{}}}],["2.1.3",{"_index":1125,"title":{},"body":{"dependencies.html":{}}}],["2.2.0",{"_index":1115,"title":{},"body":{"dependencies.html":{}}}],["2.4.2",{"_index":1128,"title":{},"body":{"dependencies.html":{}}}],["2.4.6",{"_index":1123,"title":{},"body":{"dependencies.html":{}}}],["2/6",{"_index":1087,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":426,"title":{},"body":{"components/EventDatePage.html":{},"components/EventsPage.html":{}}}],["2000",{"_index":986,"title":{},"body":{"components/LoginModal.html":{}}}],["3",{"_index":1145,"title":{},"body":{"index.html":{}}}],["3.0.0",{"_index":1135,"title":{},"body":{"dependencies.html":{}}}],["3.6.0",{"_index":1140,"title":{},"body":{"dependencies.html":{}}}],["3.9.2",{"_index":1133,"title":{},"body":{"dependencies.html":{}}}],["3/10",{"_index":1090,"title":{},"body":{"coverage.html":{}}}],["3/3",{"_index":1081,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":1077,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":905,"title":{},"body":{"components/HomePage.html":{},"coverage.html":{}}}],["3000",{"_index":1016,"title":{},"body":{"components/LoginPage.html":{}}}],["33",{"_index":1086,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":1144,"title":{},"body":{"index.html":{}}}],["4.1.2",{"_index":1132,"title":{},"body":{"dependencies.html":{}}}],["4.14.0",{"_index":1113,"title":{},"body":{"dependencies.html":{}}}],["4.15.0",{"_index":1112,"title":{},"body":{"dependencies.html":{}}}],["4.5.5",{"_index":1121,"title":{},"body":{"dependencies.html":{}}}],["4/10",{"_index":1099,"title":{},"body":{"coverage.html":{}}}],["4/9",{"_index":1095,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":1098,"title":{},"body":{"coverage.html":{}}}],["41.7002",{"_index":892,"title":{},"body":{"components/HomePage.html":{},"miscellaneous/variables.html":{}}}],["44",{"_index":1094,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":408,"title":{},"body":{"components/EventDatePage.html":{},"components/EventsPage.html":{}}}],["5.0.2",{"_index":1127,"title":{},"body":{"dependencies.html":{}}}],["5.0.4",{"_index":1119,"title":{},"body":{"dependencies.html":{}}}],["5.2.11",{"_index":1106,"title":{},"body":{"dependencies.html":{}}}],["5.5.11",{"_index":1137,"title":{},"body":{"dependencies.html":{}}}],["5.5.4",{"_index":1131,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":1079,"title":{},"body":{"coverage.html":{}}}],["5/8",{"_index":1083,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":427,"title":{},"body":{"components/EventDatePage.html":{},"components/EventsPage.html":{}}}],["62",{"_index":1082,"title":{},"body":{"coverage.html":{}}}],["7.0.0",{"_index":1118,"title":{},"body":{"dependencies.html":{}}}],["7/10",{"_index":1093,"title":{},"body":{"coverage.html":{}}}],["70",{"_index":1092,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":1076,"title":{},"body":{"coverage.html":{}}}],["76",{"_index":1084,"title":{},"body":{"coverage.html":{}}}],["78",{"_index":1088,"title":{},"body":{"coverage.html":{}}}],["81",{"_index":1096,"title":{},"body":{"coverage.html":{}}}],["86.2379",{"_index":889,"title":{},"body":{"components/HomePage.html":{},"miscellaneous/variables.html":{}}}],["9",{"_index":348,"title":{},"body":{"classes/Event.html":{},"components/EventDatePage.html":{}}}],["9/10",{"_index":1101,"title":{},"body":{"coverage.html":{}}}],["9/11",{"_index":1097,"title":{},"body":{"coverage.html":{}}}],["9/9",{"_index":1080,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":1100,"title":{},"body":{"coverage.html":{}}}],["94",{"_index":1074,"title":{},"body":{"coverage.html":{}}}],["_createngprob",{"_index":494,"title":{},"body":{"components/EventsPage.html":{}}}],["_rang",{"_index":375,"title":{},"body":{"components/EventDatePage.html":{},"components/EventsPage.html":{}}}],["_user",{"_index":522,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["abstractcontrol",{"_index":958,"title":{},"body":{"components/LoginModal.html":{}}}],["acc",{"_index":825,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["acc[value[0",{"_index":823,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["access",{"_index":600,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseDatabaseProvider.html":{},"injectables/GeofireProvider.html":{}}}],["accessor",{"_index":531,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["account",{"_index":547,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{},"components/LoginModal.html":{}}}],["action",{"_index":143,"title":{},"body":{"components/CalendarComponent.html":{},"injectables/FirebaseAuthProvider.html":{},"components/LoginModal.html":{}}}],["actual_compon",{"_index":250,"title":{},"body":{"components/CalendarComponent.html":{},"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MyApp.html":{}}}],["add",{"_index":837,"title":{},"body":{"injectables/GeofireProvider.html":{},"components/HomePage.html":{}}}],["address",{"_index":631,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["agenda",{"_index":514,"title":{},"body":{"components/EventsPage.html":{}}}],["alert",{"_index":928,"title":{},"body":{"components/HomePage.html":{}}}],["alias",{"_index":1150,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allow",{"_index":88,"title":{},"body":{"components/CalendarComponent.html":{},"components/LoginModal.html":{}}}],["along",{"_index":477,"title":{},"body":{"components/EventsPage.html":{}}}],["alreadi",{"_index":993,"title":{},"body":{"components/LoginModal.html":{}}}],["amazon",{"_index":1068,"title":{},"body":{"classes/Organization.html":{}}}],["amazon.com",{"_index":1069,"title":{},"body":{"classes/Organization.html":{}}}],["android",{"_index":1117,"title":{},"body":{"dependencies.html":{}}}],["angular",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"modules/ComponentsModule.html":{},"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MyApp.html":{},"dependencies.html":{}}}],["angular/anim",{"_index":1105,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":257,"title":{},"body":{"modules/ComponentsModule.html":{},"components/DeviceInfoPage.html":{},"dependencies.html":{}}}],["angular/compil",{"_index":1107,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"components/CalendarComponent.html":{},"modules/ComponentsModule.html":{},"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseConfigProvider.html":{},"injectables/FirebaseDatabaseProvider.html":{},"injectables/GeofireProvider.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MyApp.html":{},"dependencies.html":{}}}],["angular/form",{"_index":972,"title":{},"body":{"components/LoginModal.html":{},"dependencies.html":{}}}],["angular/http",{"_index":1109,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"components/EventsPage.html":{},"dependencies.html":{}}}],["anim",{"_index":918,"title":{},"body":{"components/HomePage.html":{}}}],["anonym",{"_index":556,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{},"components/LoginPage.html":{}}}],["api",{"_index":602,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["api_key_for_browser_debug",{"_index":1055,"title":{},"body":{"components/MyApp.html":{}}}],["api_key_for_browser_releas",{"_index":1054,"title":{},"body":{"components/MyApp.html":{}}}],["apikey",{"_index":651,"title":{},"body":{"injectables/FirebaseConfigProvider.html":{}}}],["app.compon",{"_index":47,"title":{},"body":{"modules/AppModule.html":{}}}],["app.html",{"_index":1023,"title":{},"body":{"components/MyApp.html":{}}}],["appmodul",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"index.html":{},"modules.html":{}}}],["approach",{"_index":793,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["appropi",{"_index":955,"title":{},"body":{"components/LoginModal.html":{}}}],["around",{"_index":764,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["arr",{"_index":500,"title":{},"body":{"components/EventsPage.html":{}}}],["arr.push(ev",{"_index":509,"title":{},"body":{"components/EventsPage.html":{}}}],["arr.push(events[key",{"_index":502,"title":{},"body":{"components/EventsPage.html":{}}}],["arr.sort((on",{"_index":510,"title":{},"body":{"components/EventsPage.html":{}}}],["array",{"_index":135,"title":{},"body":{"components/CalendarComponent.html":{},"components/MyApp.html":{}}}],["associ",{"_index":480,"title":{},"body":{"components/EventsPage.html":{}}}],["async",{"_index":436,"title":{},"body":{"components/EventInfoPage.html":{},"components/HomePage.html":{}}}],["async).titl",{"_index":435,"title":{},"body":{"components/EventInfoPage.html":{}}}],["auth",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MyApp.html":{}}}],["auth.t",{"_index":518,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{},"coverage.html":{}}}],["auth.ts:101",{"_index":550,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["auth.ts:110",{"_index":560,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["auth.ts:125",{"_index":545,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["auth.ts:141",{"_index":537,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["auth.ts:15",{"_index":533,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["auth.ts:159",{"_index":566,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["auth.ts:24",{"_index":569,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["auth.ts:39",{"_index":555,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["auth.ts:56",{"_index":563,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["auth.ts:66",{"_index":535,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["auth/firebas",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"injectables/FirebaseAuthProvider.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MyApp.html":{},"coverage.html":{}}}],["auth/invalid",{"_index":629,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["auth/us",{"_index":626,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["auth/wrong",{"_index":633,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["authdomain",{"_index":653,"title":{},"body":{"injectables/FirebaseConfigProvider.html":{}}}],["avail",{"_index":1048,"title":{},"body":{"components/MyApp.html":{}}}],["await",{"_index":898,"title":{},"body":{"components/HomePage.html":{}}}],["away",{"_index":454,"title":{},"body":{"components/EventItemComponent.html":{}}}],["awesom",{"_index":924,"title":{},"body":{"components/HomePage.html":{}}}],["back",{"_index":145,"title":{},"body":{"components/CalendarComponent.html":{},"components/MyApp.html":{}}}],["backend",{"_index":1005,"title":{},"body":{"components/LoginPage.html":{}}}],["bar",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"components/MyApp.html":{},"dependencies.html":{}}}],["base",{"_index":136,"title":{},"body":{"components/CalendarComponent.html":{},"injectables/GeofireProvider.html":{}}}],["based",{"_index":208,"title":{},"body":{"components/CalendarComponent.html":{}}}],["be",{"_index":643,"title":{},"body":{"injectables/FirebaseConfigProvider.html":{}}}],["befor",{"_index":388,"title":{},"body":{"components/EventDatePage.html":{},"components/EventsPage.html":{},"components/HomePage.html":{}}}],["between",{"_index":732,"title":{},"body":{"injectables/GeofireProvider.html":{},"components/LoginModal.html":{}}}],["bit",{"_index":440,"title":{},"body":{"components/EventItemComponent.html":{}}}],["boolean",{"_index":159,"title":{},"body":{"components/CalendarComponent.html":{}}}],["bootstrap",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"modules/ComponentsModule.html":{},"index.html":{}}}],["bottom",{"_index":935,"title":{},"body":{"components/HomePage.html":{}}}],["bound",{"_index":468,"title":{},"body":{"components/EventsPage.html":{}}}],["brief",{"_index":439,"title":{},"body":{"components/EventItemComponent.html":{}}}],["brows",{"_index":90,"title":{},"body":{"components/CalendarComponent.html":{},"modules.html":{}}}],["browser",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/src/dom/debug/ng_prob",{"_index":495,"title":{},"body":{"components/EventsPage.html":{}}}],["browsermodul",{"_index":37,"title":{},"body":{"modules/AppModule.html":{}}}],["button",{"_index":1059,"title":{},"body":{"components/MyApp.html":{}}}],["calendar",{"_index":92,"title":{},"body":{"components/CalendarComponent.html":{},"components/EventsPage.html":{}}}],["calendar'},{'nam",{"_index":238,"title":{},"body":{"components/CalendarComponent.html":{},"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MyApp.html":{}}}],["calendar.html",{"_index":97,"title":{},"body":{"components/CalendarComponent.html":{}}}],["calendar/calendar",{"_index":255,"title":{},"body":{"modules/ComponentsModule.html":{}}}],["calendarcompon",{"_index":82,"title":{"components/CalendarComponent.html":{}},"body":{"components/CalendarComponent.html":{},"modules/ComponentsModule.html":{},"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MyApp.html":{},"coverage.html":{},"index.html":{}}}],["calendarcomponent.monthnames[this.date.getmonth",{"_index":203,"title":{},"body":{"components/CalendarComponent.html":{}}}],["calendarday",{"_index":100,"title":{},"body":{"components/CalendarComponent.html":{}}}],["call",{"_index":391,"title":{},"body":{"components/EventDatePage.html":{},"components/LoginPage.html":{}}}],["callback",{"_index":699,"title":{},"body":{"injectables/FirebaseDatabaseProvider.html":{}}}],["camera",{"_index":860,"title":{},"body":{"injectables/GeofireProvider.html":{},"components/HomePage.html":{}}}],["case",{"_index":625,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["catch((error",{"_index":605,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["catch(err",{"_index":931,"title":{},"body":{"components/HomePage.html":{}}}],["center",{"_index":796,"title":{},"body":{"injectables/GeofireProvider.html":{},"components/HomePage.html":{}}}],["centeronus",{"_index":868,"title":{},"body":{"components/HomePage.html":{}}}],["chang",{"_index":393,"title":{},"body":{"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"injectables/GeofireProvider.html":{},"components/LoginModal.html":{}}}],["check",{"_index":590,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{},"components/LoginModal.html":{}}}],["checkpassword",{"_index":941,"title":{},"body":{"components/LoginModal.html":{}}}],["checksignedin",{"_index":523,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["class",{"_index":78,"title":{"classes/Device.html":{},"classes/Event.html":{},"classes/Organization.html":{}},"body":{"modules/AppModule.html":{},"components/CalendarComponent.html":{},"modules/ComponentsModule.html":{},"classes/Device.html":{},"components/DeviceInfoPage.html":{},"classes/Event.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseConfigProvider.html":{},"injectables/FirebaseDatabaseProvider.html":{},"injectables/GeofireProvider.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MyApp.html":{},"classes/Organization.html":{},"coverage.html":{},"index.html":{}}}],["clear",{"_index":386,"title":{},"body":{"components/EventDatePage.html":{},"components/EventsPage.html":{}}}],["cli",{"_index":1108,"title":{},"body":{"dependencies.html":{}}}],["click",{"_index":762,"title":{},"body":{"injectables/GeofireProvider.html":{},"components/HomePage.html":{}}}],["close",{"_index":952,"title":{},"body":{"components/LoginModal.html":{}}}],["closemod",{"_index":944,"title":{},"body":{"components/LoginModal.html":{}}}],["cluster_appmodul",{"_index":8,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_bootstrap",{"_index":10,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_declar",{"_index":9,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_provid",{"_index":11,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_componentsmodul",{"_index":251,"title":{},"body":{"modules/ComponentsModule.html":{},"index.html":{}}}],["cluster_componentsmodule_declar",{"_index":252,"title":{},"body":{"modules/ComponentsModule.html":{},"index.html":{}}}],["cluster_componentsmodule_export",{"_index":253,"title":{},"body":{"modules/ComponentsModule.html":{},"index.html":{}}}],["code",{"_index":539,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseConfigProvider.html":{}}}],["combinelatest",{"_index":786,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["commonmodul",{"_index":256,"title":{},"body":{"modules/ComponentsModule.html":{}}}],["compar",{"_index":335,"title":{},"body":{"classes/Event.html":{}}}],["compare(on",{"_index":353,"title":{},"body":{"classes/Event.html":{}}}],["comparison",{"_index":356,"title":{},"body":{"classes/Event.html":{}}}],["complet",{"_index":635,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["compon",{"_index":81,"title":{"components/CalendarComponent.html":{},"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MyApp.html":{}},"body":{"components/CalendarComponent.html":{},"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MyApp.html":{},"coverage.html":{},"index.html":{}}}],["component_templ",{"_index":237,"title":{},"body":{"components/CalendarComponent.html":{},"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MyApp.html":{}}}],["components/components.modul",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["componentsmodul",{"_index":70,"title":{"modules/ComponentsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ComponentsModule.html":{},"index.html":{},"modules.html":{}}}],["config",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseConfigProvider.html":{},"injectables/FirebaseDatabaseProvider.html":{}}}],["config.t",{"_index":637,"title":{},"body":{"injectables/FirebaseConfigProvider.html":{},"coverage.html":{}}}],["config.ts:13",{"_index":639,"title":{},"body":{"injectables/FirebaseConfigProvider.html":{}}}],["config.ts:21",{"_index":640,"title":{},"body":{"injectables/FirebaseConfigProvider.html":{}}}],["config/firebas",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseConfigProvider.html":{},"injectables/FirebaseDatabaseProvider.html":{},"coverage.html":{}}}],["confirm",{"_index":964,"title":{},"body":{"components/LoginModal.html":{}}}],["consid",{"_index":578,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["console.error(error",{"_index":607,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["console.log(\"hello",{"_index":606,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["console.log(json.stringify(loc",{"_index":916,"title":{},"body":{"components/HomePage.html":{}}}],["console.log(result",{"_index":597,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["const",{"_index":206,"title":{},"body":{"components/CalendarComponent.html":{},"injectables/FirebaseConfigProvider.html":{},"components/HomePage.html":{}}}],["constructor",{"_index":120,"title":{},"body":{"components/CalendarComponent.html":{},"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseConfigProvider.html":{},"injectables/FirebaseDatabaseProvider.html":{},"injectables/GeofireProvider.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MyApp.html":{}}}],["constructor(firebaseconfig",{"_index":532,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseDatabaseProvider.html":{}}}],["constructor(firebasedatabas",{"_index":728,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["constructor(loadingctrl",{"_index":871,"title":{},"body":{"components/HomePage.html":{}}}],["constructor(navctrl",{"_index":291,"title":{},"body":{"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{}}}],["constructor(platform",{"_index":1028,"title":{},"body":{"components/MyApp.html":{}}}],["constructor(priv",{"_index":448,"title":{},"body":{"components/EventItemComponent.html":{},"injectables/FirebaseDatabaseProvider.html":{},"injectables/GeofireProvider.html":{}}}],["constructor(publ",{"_index":311,"title":{},"body":{"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventsPage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MyApp.html":{}}}],["contain",{"_index":397,"title":{},"body":{"components/EventDatePage.html":{},"components/EventItemComponent.html":{},"injectables/FirebaseDatabaseProvider.html":{},"components/LoginModal.html":{}}}],["content",{"_index":911,"title":{},"body":{"components/HomePage.html":{},"components/LoginModal.html":{},"components/MyApp.html":{}}}],["control",{"_index":957,"title":{},"body":{"components/LoginModal.html":{}}}],["control.valu",{"_index":960,"title":{},"body":{"components/LoginModal.html":{}}}],["convert",{"_index":406,"title":{},"body":{"components/EventDatePage.html":{},"injectables/FirebaseAuthProvider.html":{},"injectables/GeofireProvider.html":{}}}],["converterrorcod",{"_index":524,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["converterrorcode(error",{"_index":536,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["converttoobj",{"_index":722,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["converttoobj(loc",{"_index":730,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["converttotupl",{"_index":723,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["converttotuple(loc",{"_index":737,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["cooki",{"_index":591,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["cordova",{"_index":1116,"title":{},"body":{"dependencies.html":{}}}],["coverag",{"_index":1070,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":546,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseDatabaseProvider.html":{}}}],["cred",{"_index":650,"title":{},"body":{"injectables/FirebaseConfigProvider.html":{}}}],["credenti",{"_index":562,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseConfigProvider.html":{}}}],["current",{"_index":172,"title":{},"body":{"components/CalendarComponent.html":{},"components/EventsPage.html":{},"injectables/FirebaseAuthProvider.html":{},"injectables/GeofireProvider.html":{}}}],["currentmonth",{"_index":101,"title":{},"body":{"components/CalendarComponent.html":{}}}],["currentyear",{"_index":102,"title":{},"body":{"components/CalendarComponent.html":{}}}],["custom",{"_index":665,"title":{},"body":{"injectables/FirebaseConfigProvider.html":{}}}],["custom_elements_schema",{"_index":35,"title":{},"body":{"modules/AppModule.html":{}}}],["databas",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"components/DeviceInfoPage.html":{},"components/EventInfoPage.html":{},"components/EventsPage.html":{},"injectables/FirebaseDatabaseProvider.html":{},"injectables/GeofireProvider.html":{}}}],["database.datasnapshot",{"_index":700,"title":{},"body":{"injectables/FirebaseDatabaseProvider.html":{}}}],["database.refer",{"_index":680,"title":{},"body":{"injectables/FirebaseDatabaseProvider.html":{}}}],["database.t",{"_index":668,"title":{},"body":{"injectables/FirebaseDatabaseProvider.html":{},"coverage.html":{}}}],["database.ts:115",{"_index":675,"title":{},"body":{"injectables/FirebaseDatabaseProvider.html":{}}}],["database.ts:23",{"_index":679,"title":{},"body":{"injectables/FirebaseDatabaseProvider.html":{}}}],["database.ts:30",{"_index":684,"title":{},"body":{"injectables/FirebaseDatabaseProvider.html":{}}}],["database.ts:37",{"_index":687,"title":{},"body":{"injectables/FirebaseDatabaseProvider.html":{}}}],["database.ts:44",{"_index":677,"title":{},"body":{"injectables/FirebaseDatabaseProvider.html":{}}}],["database.ts:64",{"_index":692,"title":{},"body":{"injectables/FirebaseDatabaseProvider.html":{}}}],["database.ts:71",{"_index":686,"title":{},"body":{"injectables/FirebaseDatabaseProvider.html":{}}}],["database.ts:91",{"_index":691,"title":{},"body":{"injectables/FirebaseDatabaseProvider.html":{}}}],["database.ts:98",{"_index":683,"title":{},"body":{"injectables/FirebaseDatabaseProvider.html":{}}}],["database/firebas",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"components/DeviceInfoPage.html":{},"components/EventInfoPage.html":{},"components/EventsPage.html":{},"injectables/FirebaseDatabaseProvider.html":{},"injectables/GeofireProvider.html":{},"coverage.html":{}}}],["databaseurl",{"_index":655,"title":{},"body":{"injectables/FirebaseConfigProvider.html":{}}}],["date",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"components/CalendarComponent.html":{},"components/DeviceInfoPage.html":{},"classes/Event.html":{},"components/EventDatePage.html":{},"components/EventsPage.html":{}}}],["date'},{'nam",{"_index":242,"title":{},"body":{"components/CalendarComponent.html":{},"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MyApp.html":{}}}],["date(based",{"_index":209,"title":{},"body":{"components/CalendarComponent.html":{}}}],["date(event[0].startd",{"_index":507,"title":{},"body":{"components/EventsPage.html":{}}}],["date(one.endd",{"_index":367,"title":{},"body":{"classes/Event.html":{}}}],["date(one.startd",{"_index":362,"title":{},"body":{"classes/Event.html":{}}}],["date(this.date.getfullyear",{"_index":212,"title":{},"body":{"components/CalendarComponent.html":{}}}],["date(this.today",{"_index":197,"title":{},"body":{"components/CalendarComponent.html":{}}}],["date(this.today.getfullyear",{"_index":193,"title":{},"body":{"components/CalendarComponent.html":{}}}],["date(two.endd",{"_index":369,"title":{},"body":{"classes/Event.html":{}}}],["date(two.startd",{"_index":364,"title":{},"body":{"classes/Event.html":{}}}],["date.html",{"_index":374,"title":{},"body":{"components/EventDatePage.html":{}}}],["date.t",{"_index":372,"title":{},"body":{"components/EventDatePage.html":{},"coverage.html":{}}}],["date.todatestr",{"_index":346,"title":{},"body":{"classes/Event.html":{},"components/EventsPage.html":{}}}],["date.totimestr",{"_index":351,"title":{},"body":{"classes/Event.html":{}}}],["date.ts:21",{"_index":395,"title":{},"body":{"components/EventDatePage.html":{}}}],["date.ts:26",{"_index":409,"title":{},"body":{"components/EventDatePage.html":{}}}],["date.ts:31",{"_index":394,"title":{},"body":{"components/EventDatePage.html":{}}}],["date.ts:36",{"_index":396,"title":{},"body":{"components/EventDatePage.html":{}}}],["date.ts:41",{"_index":383,"title":{},"body":{"components/EventDatePage.html":{}}}],["date.ts:43",{"_index":407,"title":{},"body":{"components/EventDatePage.html":{}}}],["date.ts:52",{"_index":390,"title":{},"body":{"components/EventDatePage.html":{}}}],["date.ts:60",{"_index":387,"title":{},"body":{"components/EventDatePage.html":{}}}],["date.ts:76",{"_index":384,"title":{},"body":{"components/EventDatePage.html":{}}}],["date.ts:84",{"_index":405,"title":{},"body":{"components/EventDatePage.html":{}}}],["date/ev",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"components/EventDatePage.html":{},"components/EventsPage.html":{},"coverage.html":{}}}],["dates.push(events[key",{"_index":423,"title":{},"body":{"components/EventDatePage.html":{}}}],["dates[events[key].startd",{"_index":501,"title":{},"body":{"components/EventsPage.html":{}}}],["day",{"_index":157,"title":{},"body":{"components/CalendarComponent.html":{},"components/EventDatePage.html":{}}}],["day.getd",{"_index":232,"title":{},"body":{"components/CalendarComponent.html":{}}}],["day.setdate(d",{"_index":210,"title":{},"body":{"components/CalendarComponent.html":{}}}],["daysinlastmonth",{"_index":103,"title":{},"body":{"components/CalendarComponent.html":{}}}],["daysinnextmonth",{"_index":104,"title":{},"body":{"components/CalendarComponent.html":{}}}],["daysinthismonth",{"_index":105,"title":{},"body":{"components/CalendarComponent.html":{}}}],["declar",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"modules/ComponentsModule.html":{},"injectables/GeofireProvider.html":{},"index.html":{}}}],["decor",{"_index":1034,"title":{},"body":{"components/MyApp.html":{}}}],["default",{"_index":179,"title":{},"body":{"components/CalendarComponent.html":{},"classes/Device.html":{},"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventsPage.html":{},"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseConfigProvider.html":{},"injectables/FirebaseDatabaseProvider.html":{},"components/LoginModal.html":{},"components/MyApp.html":{},"classes/Organization.html":{},"miscellaneous/variables.html":{}}}],["defaultradiu",{"_index":747,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["defin",{"_index":121,"title":{},"body":{"components/CalendarComponent.html":{},"classes/Device.html":{},"components/DeviceInfoPage.html":{},"classes/Event.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseConfigProvider.html":{},"injectables/FirebaseDatabaseProvider.html":{},"injectables/GeofireProvider.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MyApp.html":{},"classes/Organization.html":{}}}],["delet",{"_index":815,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["depend",{"_index":2,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/ComponentsModule.html":{},"injectables/FirebaseConfigProvider.html":{},"dependencies.html":{},"index.html":{}}}],["deprec",{"_index":589,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{},"injectables/GeofireProvider.html":{}}}],["descript",{"_index":87,"title":{},"body":{"components/CalendarComponent.html":{},"classes/Device.html":{},"components/DeviceInfoPage.html":{},"classes/Event.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseConfigProvider.html":{},"injectables/FirebaseDatabaseProvider.html":{},"injectables/GeofireProvider.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"classes/Organization.html":{}}}],["detail",{"_index":428,"title":{},"body":{"components/EventInfoPage.html":{}}}],["devic",{"_index":240,"title":{"classes/Device.html":{}},"body":{"components/CalendarComponent.html":{},"classes/Device.html":{},"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"injectables/FirebaseDatabaseProvider.html":{},"injectables/GeofireProvider.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MyApp.html":{},"coverage.html":{},"dependencies.html":{}}}],["device.nam",{"_index":325,"title":{},"body":{"components/DeviceInfoPage.html":{}}}],["device.owner).distinctuntilchanged().concatmap((key",{"_index":320,"title":{},"body":{"components/DeviceInfoPage.html":{}}}],["device.purpos",{"_index":327,"title":{},"body":{"components/DeviceInfoPage.html":{}}}],["device.typ",{"_index":326,"title":{},"body":{"components/DeviceInfoPage.html":{}}}],["deviceinfo",{"_index":323,"title":{},"body":{"components/DeviceInfoPage.html":{}}}],["deviceinfopag",{"_index":12,"title":{"components/DeviceInfoPage.html":{}},"body":{"modules/AppModule.html":{},"components/CalendarComponent.html":{},"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MyApp.html":{},"coverage.html":{},"index.html":{}}}],["devicereadi",{"_index":894,"title":{},"body":{"components/HomePage.html":{}}}],["devicesgeofir",{"_index":720,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["dialog",{"_index":880,"title":{},"body":{"components/HomePage.html":{}}}],["diamet",{"_index":857,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["dict",{"_index":838,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["diff",{"_index":361,"title":{},"body":{"classes/Event.html":{}}}],["direct",{"_index":235,"title":{},"body":{"components/CalendarComponent.html":{},"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MyApp.html":{}}}],["disabl",{"_index":632,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["display",{"_index":124,"title":{},"body":{"components/CalendarComponent.html":{},"components/EventDatePage.html":{},"components/HomePage.html":{}}}],["distanc",{"_index":443,"title":{},"body":{"components/EventItemComponent.html":{},"injectables/GeofireProvider.html":{}}}],["distinctuntilchang",{"_index":801,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["do",{"_index":800,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["document",{"_index":1071,"title":{},"body":{"coverage.html":{}}}],["doesn't",{"_index":803,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["dom",{"_index":84,"title":{},"body":{"components/CalendarComponent.html":{},"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MyApp.html":{}}}],["don\\\\'t",{"_index":994,"title":{},"body":{"components/LoginModal.html":{}}}],["don\\\\\\'t",{"_index":995,"title":{},"body":{"components/LoginModal.html":{}}}],["driven",{"_index":142,"title":{},"body":{"components/CalendarComponent.html":{},"components/LoginModal.html":{}}}],["dropdown",{"_index":485,"title":{},"body":{"components/EventsPage.html":{}}}],["durat",{"_index":985,"title":{},"body":{"components/LoginModal.html":{},"components/LoginPage.html":{}}}],["dynam",{"_index":1110,"title":{},"body":{"dependencies.html":{}}}],["e.g",{"_index":276,"title":{},"body":{"classes/Device.html":{},"classes/Event.html":{},"classes/Organization.html":{}}}],["edit",{"_index":802,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["element",{"_index":234,"title":{},"body":{"components/CalendarComponent.html":{},"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MyApp.html":{}}}],["email",{"_index":548,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{}}}],["end",{"_index":337,"title":{},"body":{"classes/Event.html":{},"injectables/FirebaseConfigProvider.html":{}}}],["enddat",{"_index":330,"title":{},"body":{"classes/Event.html":{}}}],["endtim",{"_index":331,"title":{},"body":{"classes/Event.html":{}}}],["entrycompon",{"_index":33,"title":{},"body":{"modules/AppModule.html":{}}}],["environ",{"_index":1040,"title":{},"body":{"components/MyApp.html":{}}}],["environment.setenv",{"_index":1053,"title":{},"body":{"components/MyApp.html":{}}}],["err.error_messag",{"_index":934,"title":{},"body":{"components/HomePage.html":{}}}],["error",{"_index":538,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{}}}],["error.cod",{"_index":610,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["error.credenti",{"_index":615,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["error.email",{"_index":613,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["error.messag",{"_index":612,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["errorcod",{"_index":609,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["errorhandl",{"_index":40,"title":{},"body":{"modules/AppModule.html":{}}}],["errormessag",{"_index":611,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["event",{"_index":91,"title":{"classes/Event.html":{}},"body":{"components/CalendarComponent.html":{},"modules/ComponentsModule.html":{},"components/DeviceInfoPage.html":{},"classes/Event.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"injectables/FirebaseDatabaseProvider.html":{},"injectables/GeofireProvider.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MyApp.html":{},"coverage.html":{}}}],["event.compare(one[0",{"_index":511,"title":{},"body":{"components/EventsPage.html":{}}}],["event.key",{"_index":714,"title":{},"body":{"injectables/FirebaseDatabaseProvider.html":{}}}],["event[0].starttim",{"_index":508,"title":{},"body":{"components/EventsPage.html":{}}}],["event[0].titl",{"_index":451,"title":{},"body":{"components/EventItemComponent.html":{}}}],["event[2",{"_index":453,"title":{},"body":{"components/EventItemComponent.html":{}}}],["eventdatepag",{"_index":14,"title":{"components/EventDatePage.html":{}},"body":{"modules/AppModule.html":{},"components/CalendarComponent.html":{},"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MyApp.html":{},"coverage.html":{},"index.html":{}}}],["eventemitt",{"_index":130,"title":{},"body":{"components/CalendarComponent.html":{}}}],["eventinfopag",{"_index":15,"title":{"components/EventInfoPage.html":{}},"body":{"modules/AppModule.html":{},"components/CalendarComponent.html":{},"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MyApp.html":{},"coverage.html":{},"index.html":{}}}],["eventitemcompon",{"_index":243,"title":{"components/EventItemComponent.html":{}},"body":{"components/CalendarComponent.html":{},"modules/ComponentsModule.html":{},"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MyApp.html":{},"coverage.html":{},"index.html":{}}}],["events'},{'nam",{"_index":245,"title":{},"body":{"components/CalendarComponent.html":{},"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MyApp.html":{}}}],["events.html",{"_index":459,"title":{},"body":{"components/EventsPage.html":{}}}],["events[date.todatestr",{"_index":223,"title":{},"body":{"components/CalendarComponent.html":{}}}],["events[date.todatestring()].length",{"_index":224,"title":{},"body":{"components/CalendarComponent.html":{}}}],["events[key",{"_index":505,"title":{},"body":{"components/EventsPage.html":{}}}],["eventsgeofir",{"_index":721,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["eventspag",{"_index":16,"title":{"components/EventsPage.html":{}},"body":{"modules/AppModule.html":{},"components/CalendarComponent.html":{},"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MyApp.html":{},"coverage.html":{},"index.html":{}}}],["eventu",{"_index":787,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["exampl",{"_index":1042,"title":{},"body":{"components/MyApp.html":{}}}],["execut",{"_index":893,"title":{},"body":{"components/HomePage.html":{}}}],["exist",{"_index":628,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["expect",{"_index":592,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["export",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"components/CalendarComponent.html":{},"modules/ComponentsModule.html":{},"classes/Device.html":{},"components/DeviceInfoPage.html":{},"classes/Event.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseConfigProvider.html":{},"injectables/FirebaseDatabaseProvider.html":{},"injectables/GeofireProvider.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MyApp.html":{},"classes/Organization.html":{},"index.html":{}}}],["express",{"_index":475,"title":{},"body":{"components/EventsPage.html":{}}}],["fail",{"_index":1015,"title":{},"body":{"components/LoginPage.html":{}}}],["fals",{"_index":641,"title":{},"body":{"injectables/FirebaseConfigProvider.html":{},"components/LoginModal.html":{}}}],["fb",{"_index":649,"title":{},"body":{"injectables/FirebaseConfigProvider.html":{}}}],["field",{"_index":137,"title":{},"body":{"components/CalendarComponent.html":{},"components/LoginModal.html":{}}}],["file",{"_index":31,"title":{},"body":{"modules/AppModule.html":{},"components/CalendarComponent.html":{},"modules/ComponentsModule.html":{},"classes/Device.html":{},"components/DeviceInfoPage.html":{},"classes/Event.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseConfigProvider.html":{},"injectables/FirebaseDatabaseProvider.html":{},"injectables/GeofireProvider.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MyApp.html":{},"classes/Organization.html":{},"coverage.html":{}}}],["filter",{"_index":376,"title":{},"body":{"components/EventDatePage.html":{}}}],["fine",{"_index":580,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["firebas",{"_index":430,"title":{},"body":{"components/EventInfoPage.html":{},"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseConfigProvider.html":{},"injectables/FirebaseDatabaseProvider.html":{},"injectables/GeofireProvider.html":{},"dependencies.html":{}}}],["firebase.auth().createuserwithemailandpassword(email",{"_index":622,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["firebase.auth().getredirectresult().then((result",{"_index":595,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["firebase.auth().onauthstatechanged((us",{"_index":576,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["firebase.auth().signinanonymously().catch((error",{"_index":581,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["firebase.auth().signinwithemailandpassword(email",{"_index":617,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["firebase.auth().signinwithredirect(provid",{"_index":588,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["firebase.auth().signout",{"_index":636,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["firebase.auth.authcredenti",{"_index":614,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["firebase.auth.googleauthprovid",{"_index":587,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["firebase.database().ref('/devices/loc",{"_index":696,"title":{},"body":{"injectables/FirebaseDatabaseProvider.html":{}}}],["firebase.database().ref('/devices/metadata",{"_index":702,"title":{},"body":{"injectables/FirebaseDatabaseProvider.html":{}}}],["firebase.database().ref('/events/loc",{"_index":697,"title":{},"body":{"injectables/FirebaseDatabaseProvider.html":{}}}],["firebase.database().ref('/events/metadata",{"_index":716,"title":{},"body":{"injectables/FirebaseDatabaseProvider.html":{}}}],["firebase.database().ref('/organ",{"_index":709,"title":{},"body":{"injectables/FirebaseDatabaseProvider.html":{}}}],["firebase.getevent(navparams.get('ev",{"_index":434,"title":{},"body":{"components/EventInfoPage.html":{}}}],["firebase.initializeapp(config",{"_index":667,"title":{},"body":{"injectables/FirebaseConfigProvider.html":{}}}],["firebase/app",{"_index":645,"title":{},"body":{"injectables/FirebaseConfigProvider.html":{}}}],["firebaseauth",{"_index":875,"title":{},"body":{"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MyApp.html":{}}}],["firebaseauth.user.subscribe((us",{"_index":1010,"title":{},"body":{"components/LoginPage.html":{}}}],["firebaseauthprovid",{"_index":22,"title":{"injectables/FirebaseAuthProvider.html":{}},"body":{"modules/AppModule.html":{},"injectables/FirebaseAuthProvider.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MyApp.html":{},"coverage.html":{},"index.html":{}}}],["firebaseconfig",{"_index":534,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseDatabaseProvider.html":{}}}],["firebaseconfig.init",{"_index":572,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseDatabaseProvider.html":{}}}],["firebaseconfigprovid",{"_index":23,"title":{"injectables/FirebaseConfigProvider.html":{}},"body":{"modules/AppModule.html":{},"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseConfigProvider.html":{},"injectables/FirebaseDatabaseProvider.html":{},"coverage.html":{},"index.html":{}}}],["firebasedatabas",{"_index":293,"title":{},"body":{"components/DeviceInfoPage.html":{},"injectables/GeofireProvider.html":{}}}],["firebasedatabaseprovid",{"_index":24,"title":{"injectables/FirebaseDatabaseProvider.html":{}},"body":{"modules/AppModule.html":{},"components/DeviceInfoPage.html":{},"components/EventInfoPage.html":{},"components/EventsPage.html":{},"injectables/FirebaseDatabaseProvider.html":{},"injectables/GeofireProvider.html":{},"coverage.html":{},"index.html":{}}}],["first",{"_index":359,"title":{},"body":{"classes/Event.html":{}}}],["firstweekdaythismonth",{"_index":211,"title":{},"body":{"components/CalendarComponent.html":{}}}],["fit",{"_index":171,"title":{},"body":{"components/CalendarComponent.html":{}}}],["flag",{"_index":987,"title":{},"body":{"components/LoginModal.html":{}}}],["flatmap",{"_index":789,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["for(const",{"_index":421,"title":{},"body":{"components/EventDatePage.html":{},"components/EventsPage.html":{}}}],["for(let",{"_index":219,"title":{},"body":{"components/CalendarComponent.html":{}}}],["form",{"_index":735,"title":{},"body":{"injectables/GeofireProvider.html":{},"components/LoginModal.html":{}}}],["format",{"_index":152,"title":{},"body":{"components/CalendarComponent.html":{}}}],["formbuild",{"_index":949,"title":{},"body":{"components/LoginModal.html":{}}}],["formgroup",{"_index":967,"title":{},"body":{"components/LoginModal.html":{}}}],["found",{"_index":627,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{},"components/HomePage.html":{},"miscellaneous/variables.html":{}}}],["fri",{"_index":230,"title":{},"body":{"components/CalendarComponent.html":{}}}],["frontend",{"_index":392,"title":{},"body":{"components/EventDatePage.html":{}}}],["function",{"_index":357,"title":{},"body":{"classes/Event.html":{},"injectables/GeofireProvider.html":{},"components/LoginModal.html":{}}}],["funni",{"_index":798,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["g_api_key",{"_index":652,"title":{},"body":{"injectables/FirebaseConfigProvider.html":{},"components/MyApp.html":{}}}],["g_auth_domain",{"_index":654,"title":{},"body":{"injectables/FirebaseConfigProvider.html":{}}}],["g_database_url",{"_index":656,"title":{},"body":{"injectables/FirebaseConfigProvider.html":{}}}],["g_messaging_sender_id",{"_index":662,"title":{},"body":{"injectables/FirebaseConfigProvider.html":{}}}],["g_project_id",{"_index":658,"title":{},"body":{"injectables/FirebaseConfigProvider.html":{}}}],["g_project_id.appspot.com",{"_index":660,"title":{},"body":{"injectables/FirebaseConfigProvider.html":{}}}],["gener",{"_index":151,"title":{},"body":{"components/CalendarComponent.html":{},"components/EventsPage.html":{},"injectables/FirebaseDatabaseProvider.html":{},"injectables/GeofireProvider.html":{}}}],["generatequeri",{"_index":724,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["generatequery(map",{"_index":739,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["geocallbackregistr",{"_index":772,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["geofir",{"_index":382,"title":{},"body":{"components/EventDatePage.html":{},"components/EventsPage.html":{},"injectables/FirebaseDatabaseProvider.html":{},"injectables/GeofireProvider.html":{},"components/HomePage.html":{},"dependencies.html":{}}}],["geofire(firebasedatabase.getdevicesloc",{"_index":781,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["geofire(firebasedatabase.geteventsloc",{"_index":783,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["geofire.querycriteria",{"_index":743,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["geofireprovid",{"_index":25,"title":{"injectables/GeofireProvider.html":{}},"body":{"modules/AppModule.html":{},"components/EventDatePage.html":{},"components/EventsPage.html":{},"injectables/GeofireProvider.html":{},"components/HomePage.html":{},"coverage.html":{},"index.html":{}}}],["geofireprovider.converttoobj(loc",{"_index":833,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["geofireprovider.converttotuple(camera",{"_index":862,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["geofireprovider.converttotuple(mylocation.latlng",{"_index":797,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["geoitem",{"_index":410,"title":{},"body":{"components/EventDatePage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"injectables/GeofireProvider.html":{},"miscellaneous/typealiases.html":{}}}],["geoqueri",{"_index":771,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["get",{"_index":163,"title":{},"body":{"components/CalendarComponent.html":{},"components/DeviceInfoPage.html":{},"injectables/FirebaseAuthProvider.html":{},"injectables/GeofireProvider.html":{}}}],["getdaysofmonth",{"_index":111,"title":{},"body":{"components/CalendarComponent.html":{}}}],["getdevic",{"_index":670,"title":{},"body":{"injectables/FirebaseDatabaseProvider.html":{}}}],["getdevice(key",{"_index":676,"title":{},"body":{"injectables/FirebaseDatabaseProvider.html":{}}}],["getdevicesloc",{"_index":671,"title":{},"body":{"injectables/FirebaseDatabaseProvider.html":{}}}],["getev",{"_index":672,"title":{},"body":{"injectables/FirebaseDatabaseProvider.html":{}}}],["getevent(key",{"_index":682,"title":{},"body":{"injectables/FirebaseDatabaseProvider.html":{}}}],["geteventsloc",{"_index":673,"title":{},"body":{"injectables/FirebaseDatabaseProvider.html":{}}}],["getformattedd",{"_index":377,"title":{},"body":{"components/EventDatePage.html":{}}}],["getnearbyev",{"_index":725,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["getnearbyevents(defaultradiu",{"_index":744,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["getnearbygeoev",{"_index":726,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["getnearbygeoevents(defaultradiu",{"_index":750,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["getorgan",{"_index":674,"title":{},"body":{"injectables/FirebaseDatabaseProvider.html":{}}}],["getorganization(key",{"_index":685,"title":{},"body":{"injectables/FirebaseDatabaseProvider.html":{}}}],["getus",{"_index":568,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["give",{"_index":599,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseDatabaseProvider.html":{}}}],["given",{"_index":373,"title":{},"body":{"components/EventDatePage.html":{},"injectables/GeofireProvider.html":{},"components/LoginModal.html":{}}}],["googl",{"_index":564,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{},"components/HomePage.html":{},"components/LoginPage.html":{}}}],["googlemap",{"_index":740,"title":{},"body":{"injectables/GeofireProvider.html":{},"components/HomePage.html":{},"dependencies.html":{}}}],["googlemaps.create('map_canva",{"_index":901,"title":{},"body":{"components/HomePage.html":{}}}],["googlemapsanimation.bounc",{"_index":925,"title":{},"body":{"components/HomePage.html":{}}}],["googlemapsev",{"_index":765,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["gotolastmonth",{"_index":112,"title":{},"body":{"components/CalendarComponent.html":{}}}],["gotonextmonth",{"_index":113,"title":{},"body":{"components/CalendarComponent.html":{}}}],["group",{"_index":968,"title":{},"body":{"components/LoginModal.html":{}}}],["handl",{"_index":519,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{},"components/LoginModal.html":{}}}],["happen",{"_index":401,"title":{},"body":{"components/EventDatePage.html":{}}}],["here",{"_index":608,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{},"components/HomePage.html":{},"components/MyApp.html":{}}}],["higher",{"_index":1049,"title":{},"body":{"components/MyApp.html":{}}}],["home",{"_index":864,"title":{},"body":{"components/HomePage.html":{},"components/MyApp.html":{},"classes/Organization.html":{}}}],["home'},{'nam",{"_index":246,"title":{},"body":{"components/CalendarComponent.html":{},"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MyApp.html":{}}}],["home.html",{"_index":865,"title":{},"body":{"components/HomePage.html":{}}}],["homepag",{"_index":17,"title":{"components/HomePage.html":{}},"body":{"modules/AppModule.html":{},"components/CalendarComponent.html":{},"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MyApp.html":{},"coverage.html":{},"index.html":{}}}],["html",{"_index":233,"title":{},"body":{"components/CalendarComponent.html":{},"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MyApp.html":{}}}],["https://ionicframework.com/docs/components/#navig",{"_index":457,"title":{},"body":{"components/EventsPage.html":{}}}],["human",{"_index":541,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["icon",{"_index":846,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["id",{"_index":341,"title":{},"body":{"classes/Event.html":{},"injectables/FirebaseDatabaseProvider.html":{},"injectables/GeofireProvider.html":{}}}],["identifi",{"_index":299,"title":{},"body":{"components/DeviceInfoPage.html":{},"coverage.html":{}}}],["if(!diff",{"_index":366,"title":{},"body":{"classes/Event.html":{}}}],["if(!this.devices[key",{"_index":698,"title":{},"body":{"injectables/FirebaseDatabaseProvider.html":{}}}],["if(!this.events[key",{"_index":712,"title":{},"body":{"injectables/FirebaseDatabaseProvider.html":{}}}],["if(!this.organizations[key",{"_index":708,"title":{},"body":{"injectables/FirebaseDatabaseProvider.html":{}}}],["if(!us",{"_index":896,"title":{},"body":{"components/HomePage.html":{}}}],["if(ev",{"_index":222,"title":{},"body":{"components/CalendarComponent.html":{}}}],["if(events[key][0].startd",{"_index":422,"title":{},"body":{"components/EventDatePage.html":{}}}],["if(new",{"_index":506,"title":{},"body":{"components/EventsPage.html":{}}}],["if(onkeyenteredregistr",{"_index":816,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["if(onkeyexitedregistr",{"_index":818,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["if(onkeymovedregistr",{"_index":828,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["if(radiu",{"_index":806,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["if(result",{"_index":596,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["if(success",{"_index":1014,"title":{},"body":{"components/LoginPage.html":{}}}],["if(this._us",{"_index":573,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["if(this.isinit",{"_index":646,"title":{},"body":{"injectables/FirebaseConfigProvider.html":{}}}],["if(this.loginform.statu",{"_index":980,"title":{},"body":{"components/LoginModal.html":{}}}],["if(this.needaccount",{"_index":959,"title":{},"body":{"components/LoginModal.html":{}}}],["if(us",{"_index":1011,"title":{},"body":{"components/LoginPage.html":{}}}],["if(value[1",{"_index":822,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["if(window.localstorage.getitem(\"auth",{"_index":594,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["ilatlng",{"_index":736,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["immedi",{"_index":749,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["import",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"components/CalendarComponent.html":{},"modules/ComponentsModule.html":{},"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseConfigProvider.html":{},"injectables/FirebaseDatabaseProvider.html":{},"injectables/GeofireProvider.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MyApp.html":{}}}],["includ",{"_index":752,"title":{},"body":{"injectables/GeofireProvider.html":{},"components/HomePage.html":{}}}],["index",{"_index":98,"title":{"index.html":{}},"body":{"components/CalendarComponent.html":{},"classes/Device.html":{},"components/DeviceInfoPage.html":{},"classes/Event.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseConfigProvider.html":{},"injectables/FirebaseDatabaseProvider.html":{},"injectables/GeofireProvider.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MyApp.html":{},"classes/Organization.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":29,"title":{},"body":{"modules/AppModule.html":{},"components/CalendarComponent.html":{},"modules/ComponentsModule.html":{},"classes/Device.html":{},"components/DeviceInfoPage.html":{},"classes/Event.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseConfigProvider.html":{},"injectables/FirebaseDatabaseProvider.html":{},"injectables/GeofireProvider.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MyApp.html":{},"classes/Organization.html":{}}}],["info'},{'nam",{"_index":241,"title":{},"body":{"components/CalendarComponent.html":{},"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MyApp.html":{}}}],["info.html",{"_index":286,"title":{},"body":{"components/DeviceInfoPage.html":{},"components/EventInfoPage.html":{}}}],["info.t",{"_index":282,"title":{},"body":{"components/DeviceInfoPage.html":{},"components/EventInfoPage.html":{},"coverage.html":{}}}],["info.ts:20",{"_index":431,"title":{},"body":{"components/EventInfoPage.html":{}}}],["info.ts:22",{"_index":433,"title":{},"body":{"components/EventInfoPage.html":{}}}],["info.ts:26",{"_index":297,"title":{},"body":{"components/DeviceInfoPage.html":{},"components/EventInfoPage.html":{}}}],["info.ts:31",{"_index":301,"title":{},"body":{"components/DeviceInfoPage.html":{}}}],["info.ts:36",{"_index":296,"title":{},"body":{"components/DeviceInfoPage.html":{}}}],["info.ts:41",{"_index":294,"title":{},"body":{"components/DeviceInfoPage.html":{}}}],["info.ts:44",{"_index":300,"title":{},"body":{"components/DeviceInfoPage.html":{}}}],["info/devic",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"components/DeviceInfoPage.html":{},"components/HomePage.html":{},"coverage.html":{}}}],["info/ev",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"coverage.html":{}}}],["inform",{"_index":285,"title":{},"body":{"components/DeviceInfoPage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"injectables/FirebaseDatabaseProvider.html":{}}}],["infowindow",{"_index":926,"title":{},"body":{"components/HomePage.html":{}}}],["init",{"_index":314,"title":{},"body":{"components/DeviceInfoPage.html":{},"injectables/FirebaseConfigProvider.html":{}}}],["initi",{"_index":570,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseConfigProvider.html":{},"injectables/GeofireProvider.html":{}}}],["initializeapp",{"_index":1026,"title":{},"body":{"components/MyApp.html":{}}}],["initializemap",{"_index":727,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["initializemap(map",{"_index":754,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["inject",{"_index":516,"title":{"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseConfigProvider.html":{},"injectables/FirebaseDatabaseProvider.html":{},"injectables/GeofireProvider.html":{}},"body":{"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseConfigProvider.html":{},"injectables/FirebaseDatabaseProvider.html":{},"injectables/GeofireProvider.html":{},"coverage.html":{},"index.html":{}}}],["input",{"_index":117,"title":{},"body":{"components/CalendarComponent.html":{},"components/EventItemComponent.html":{}}}],["instead",{"_index":792,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["intern",{"_index":688,"title":{},"body":{"injectables/FirebaseDatabaseProvider.html":{}}}],["invalid",{"_index":992,"title":{},"body":{"components/LoginModal.html":{}}}],["io",{"_index":1120,"title":{},"body":{"dependencies.html":{}}}],["ionic",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/ComponentsModule.html":{},"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"injectables/GeofireProvider.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MyApp.html":{},"dependencies.html":{}}}],["ionic/storag",{"_index":1114,"title":{},"body":{"dependencies.html":{}}}],["ionicapp",{"_index":21,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["ionicerrorhandl",{"_index":43,"title":{},"body":{"modules/AppModule.html":{}}}],["ionicmodul",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/ComponentsModule.html":{}}}],["ionicmodule.forroot(myapp",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["ionicon",{"_index":1134,"title":{},"body":{"dependencies.html":{}}}],["ionicpag",{"_index":302,"title":{},"body":{"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventsPage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{}}}],["ionviewdidload",{"_index":429,"title":{},"body":{"components/EventInfoPage.html":{}}}],["ionviewwillent",{"_index":460,"title":{},"body":{"components/EventsPage.html":{}}}],["ionviewwillleav",{"_index":379,"title":{},"body":{"components/EventDatePage.html":{},"components/EventsPage.html":{}}}],["ionviewwillload",{"_index":380,"title":{},"body":{"components/EventDatePage.html":{}}}],["isinit",{"_index":638,"title":{},"body":{"injectables/FirebaseConfigProvider.html":{}}}],["item",{"_index":259,"title":{},"body":{"modules/ComponentsModule.html":{},"components/EventItemComponent.html":{}}}],["item'},{'nam",{"_index":244,"title":{},"body":{"components/CalendarComponent.html":{},"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MyApp.html":{}}}],["item.html",{"_index":441,"title":{},"body":{"components/EventItemComponent.html":{}}}],["item.t",{"_index":438,"title":{},"body":{"components/EventItemComponent.html":{},"coverage.html":{}}}],["item.ts:18",{"_index":442,"title":{},"body":{"components/EventItemComponent.html":{}}}],["item.ts:26",{"_index":446,"title":{},"body":{"components/EventItemComponent.html":{}}}],["item/ev",{"_index":258,"title":{},"body":{"modules/ComponentsModule.html":{},"components/EventItemComponent.html":{},"coverage.html":{}}}],["january','february','march','april','may','june','july','august','september','october','november','decemb",{"_index":186,"title":{},"body":{"components/CalendarComponent.html":{}}}],["join",{"_index":174,"title":{},"body":{"components/CalendarComponent.html":{}}}],["json",{"_index":324,"title":{},"body":{"components/DeviceInfoPage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{}}}],["key",{"_index":272,"title":{},"body":{"classes/Device.html":{},"components/DeviceInfoPage.html":{},"classes/Event.html":{},"components/EventDatePage.html":{},"components/EventsPage.html":{},"injectables/FirebaseDatabaseProvider.html":{},"injectables/GeofireProvider.html":{},"components/HomePage.html":{}}}],["key).off('valu",{"_index":704,"title":{},"body":{"injectables/FirebaseDatabaseProvider.html":{}}}],["key).on('valu",{"_index":703,"title":{},"body":{"injectables/FirebaseDatabaseProvider.html":{}}}],["key/id",{"_index":481,"title":{},"body":{"components/EventsPage.html":{}}}],["keyboard",{"_index":1124,"title":{},"body":{"dependencies.html":{}}}],["last",{"_index":158,"title":{},"body":{"components/CalendarComponent.html":{},"injectables/GeofireProvider.html":{}}}],["lastmonth",{"_index":215,"title":{},"body":{"components/CalendarComponent.html":{}}}],["lastmonth.getd",{"_index":218,"title":{},"body":{"components/CalendarComponent.html":{}}}],["lat",{"_index":852,"title":{},"body":{"injectables/GeofireProvider.html":{},"components/HomePage.html":{}}}],["latitud",{"_index":890,"title":{},"body":{"components/HomePage.html":{},"miscellaneous/variables.html":{}}}],["launch",{"_index":447,"title":{},"body":{"components/EventItemComponent.html":{}}}],["leav",{"_index":385,"title":{},"body":{"components/EventDatePage.html":{}}}],["legend",{"_index":3,"title":{},"body":{"modules/AppModule.html":{},"components/CalendarComponent.html":{},"modules/ComponentsModule.html":{},"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MyApp.html":{},"index.html":{}}}],["level",{"_index":1050,"title":{},"body":{"components/MyApp.html":{}}}],["limit",{"_index":399,"title":{},"body":{"components/EventDatePage.html":{}}}],["link",{"_index":279,"title":{},"body":{"classes/Device.html":{}}}],["list",{"_index":164,"title":{},"body":{"components/CalendarComponent.html":{},"components/EventDatePage.html":{},"components/EventsPage.html":{}}}],["liter",{"_index":126,"title":{},"body":{"components/CalendarComponent.html":{},"injectables/FirebaseDatabaseProvider.html":{}}}],["lng",{"_index":850,"title":{},"body":{"injectables/GeofireProvider.html":{},"components/HomePage.html":{}}}],["load",{"_index":315,"title":{},"body":{"components/DeviceInfoPage.html":{},"components/HomePage.html":{}}}],["loadingcontrol",{"_index":872,"title":{},"body":{"components/HomePage.html":{}}}],["loadingctrl",{"_index":866,"title":{},"body":{"components/HomePage.html":{}}}],["loadmap",{"_index":869,"title":{},"body":{"components/HomePage.html":{}}}],["locat",{"_index":445,"title":{},"body":{"components/EventItemComponent.html":{},"injectables/GeofireProvider.html":{},"components/HomePage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["location.lat",{"_index":854,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["location.latlng",{"_index":920,"title":{},"body":{"components/HomePage.html":{}}}],["location.lng",{"_index":855,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["location[0",{"_index":853,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["location[1",{"_index":851,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["locationservic",{"_index":768,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["locationservice.getmylocation().then((myloc",{"_index":794,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["log",{"_index":954,"title":{},"body":{"components/LoginModal.html":{},"components/LoginPage.html":{}}}],["loggin",{"_index":966,"title":{},"body":{"components/LoginModal.html":{}}}],["logic",{"_index":520,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["login",{"_index":247,"title":{},"body":{"components/CalendarComponent.html":{},"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MyApp.html":{}}}],["login'},{'nam",{"_index":249,"title":{},"body":{"components/CalendarComponent.html":{},"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MyApp.html":{}}}],["login.html",{"_index":997,"title":{},"body":{"components/LoginPage.html":{}}}],["login/login",{"_index":886,"title":{},"body":{"components/HomePage.html":{}}}],["loginanonym",{"_index":998,"title":{},"body":{"components/LoginPage.html":{}}}],["loginemailpassword",{"_index":999,"title":{},"body":{"components/LoginPage.html":{}}}],["loginform",{"_index":942,"title":{},"body":{"components/LoginModal.html":{}}}],["logingoogl",{"_index":1000,"title":{},"body":{"components/LoginPage.html":{}}}],["loginmod",{"_index":18,"title":{"components/LoginModal.html":{}},"body":{"modules/AppModule.html":{},"components/CalendarComponent.html":{},"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MyApp.html":{},"coverage.html":{},"index.html":{}}}],["loginmodal.pres",{"_index":1020,"title":{},"body":{"components/LoginPage.html":{}}}],["loginpag",{"_index":19,"title":{"components/LoginPage.html":{}},"body":{"modules/AppModule.html":{},"components/CalendarComponent.html":{},"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MyApp.html":{},"coverage.html":{},"index.html":{}}}],["longitud",{"_index":887,"title":{},"body":{"components/HomePage.html":{},"miscellaneous/variables.html":{}}}],["main",{"_index":264,"title":{},"body":{"classes/Device.html":{}}}],["maked",{"_index":207,"title":{},"body":{"components/CalendarComponent.html":{}}}],["map",{"_index":265,"title":{},"body":{"classes/Device.html":{},"components/DeviceInfoPage.html":{},"components/EventsPage.html":{},"injectables/GeofireProvider.html":{},"components/HomePage.html":{},"components/MyApp.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["map.addeventlistener(googlemapsevent.camera_move_end).subscrib",{"_index":848,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["map.addeventlistener(googlemapsevent.map_ready).subscrib",{"_index":830,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["map.addmark",{"_index":832,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["map.getcameraposition().target",{"_index":861,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["map.getvisibleregion",{"_index":856,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["marker",{"_index":758,"title":{},"body":{"injectables/GeofireProvider.html":{},"components/HomePage.html":{}}}],["marker.on(googlemapsevent.marker_click).subscrib",{"_index":929,"title":{},"body":{"components/HomePage.html":{}}}],["marker.on(googlemapsevent.marker_click).subscribe(onclickgenerator(key",{"_index":835,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["marker.remov",{"_index":841,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["marker.setposition(geofireprovider.converttoobj(loc",{"_index":843,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["marker.showinfowindow",{"_index":927,"title":{},"body":{"components/HomePage.html":{}}}],["markers.delete(key",{"_index":842,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["markers[key",{"_index":836,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["markers[key].then((mark",{"_index":840,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["match",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"components/CalendarComponent.html":{},"modules/ComponentsModule.html":{},"classes/Device.html":{},"components/DeviceInfoPage.html":{},"classes/Event.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseConfigProvider.html":{},"injectables/FirebaseDatabaseProvider.html":{},"injectables/GeofireProvider.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MyApp.html":{},"classes/Organization.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["menu",{"_index":486,"title":{},"body":{"components/EventsPage.html":{},"components/MyApp.html":{}}}],["merg",{"_index":791,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["messag",{"_index":933,"title":{},"body":{"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{}}}],["messagingsenderid",{"_index":661,"title":{},"body":{"injectables/FirebaseConfigProvider.html":{}}}],["metadata",{"_index":94,"title":{},"body":{"components/CalendarComponent.html":{},"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MyApp.html":{}}}],["method",{"_index":110,"title":{},"body":{"components/CalendarComponent.html":{},"classes/Event.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseConfigProvider.html":{},"injectables/FirebaseDatabaseProvider.html":{},"injectables/GeofireProvider.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MyApp.html":{}}}],["mile",{"_index":424,"title":{},"body":{"components/EventDatePage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{}}}],["miscellan",{"_index":1148,"title":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mismatch",{"_index":962,"title":{},"body":{"components/LoginModal.html":{}}}],["modal",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{}}}],["modal'},{'nam",{"_index":248,"title":{},"body":{"components/CalendarComponent.html":{},"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MyApp.html":{}}}],["modal.html",{"_index":940,"title":{},"body":{"components/LoginModal.html":{}}}],["modal.t",{"_index":938,"title":{},"body":{"components/LoginModal.html":{},"coverage.html":{}}}],["modal.ts:19",{"_index":970,"title":{},"body":{"components/LoginModal.html":{}}}],["modal.ts:24",{"_index":950,"title":{},"body":{"components/LoginModal.html":{}}}],["modal.ts:26",{"_index":969,"title":{},"body":{"components/LoginModal.html":{}}}],["modal.ts:37",{"_index":953,"title":{},"body":{"components/LoginModal.html":{}}}],["modal.ts:60",{"_index":963,"title":{},"body":{"components/LoginModal.html":{}}}],["modal.ts:70",{"_index":951,"title":{},"body":{"components/LoginModal.html":{}}}],["modal.ts:77",{"_index":956,"title":{},"body":{"components/LoginModal.html":{}}}],["modal/login",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"coverage.html":{}}}],["modalcontrol",{"_index":1002,"title":{},"body":{"components/LoginPage.html":{}}}],["modalctrl",{"_index":1001,"title":{},"body":{"components/LoginPage.html":{}}}],["model",{"_index":261,"title":{},"body":{"classes/Device.html":{},"classes/Event.html":{},"classes/Organization.html":{}}}],["models/devic",{"_index":307,"title":{},"body":{"components/DeviceInfoPage.html":{},"injectables/FirebaseDatabaseProvider.html":{}}}],["models/ev",{"_index":411,"title":{},"body":{"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"injectables/FirebaseDatabaseProvider.html":{},"injectables/GeofireProvider.html":{}}}],["models/organ",{"_index":306,"title":{},"body":{"components/DeviceInfoPage.html":{},"injectables/FirebaseDatabaseProvider.html":{}}}],["modul",{"_index":0,"title":{"modules/AppModule.html":{},"modules/ComponentsModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/ComponentsModule.html":{},"index.html":{},"modules.html":{}}}],["moment",{"_index":487,"title":{},"body":{"components/EventsPage.html":{}}}],["mon",{"_index":226,"title":{},"body":{"components/CalendarComponent.html":{}}}],["month",{"_index":146,"title":{},"body":{"components/CalendarComponent.html":{},"components/EventsPage.html":{}}}],["monthclass",{"_index":114,"title":{},"body":{"components/CalendarComponent.html":{}}}],["monthclasses(day",{"_index":148,"title":{},"body":{"components/CalendarComponent.html":{}}}],["monthnam",{"_index":108,"title":{},"body":{"components/CalendarComponent.html":{}}}],["more",{"_index":284,"title":{},"body":{"components/DeviceInfoPage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{}}}],["move",{"_index":144,"title":{},"body":{"components/CalendarComponent.html":{},"components/HomePage.html":{}}}],["multipl",{"_index":644,"title":{},"body":{"injectables/FirebaseConfigProvider.html":{}}}],["myapp",{"_index":20,"title":{"components/MyApp.html":{}},"body":{"modules/AppModule.html":{},"components/CalendarComponent.html":{},"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MyApp.html":{},"coverage.html":{},"index.html":{}}}],["myloc",{"_index":769,"title":{},"body":{"injectables/GeofireProvider.html":{},"components/HomePage.html":{}}}],["name",{"_index":155,"title":{},"body":{"components/CalendarComponent.html":{},"classes/Device.html":{},"components/DeviceInfoPage.html":{},"classes/Event.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseDatabaseProvider.html":{},"injectables/GeofireProvider.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MyApp.html":{},"classes/Organization.html":{}}}],["nativ",{"_index":1051,"title":{},"body":{"components/MyApp.html":{}}}],["native/cor",{"_index":1111,"title":{},"body":{"dependencies.html":{}}}],["native/googl",{"_index":770,"title":{},"body":{"injectables/GeofireProvider.html":{},"components/HomePage.html":{},"components/MyApp.html":{},"dependencies.html":{}}}],["native/splash",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"components/MyApp.html":{},"dependencies.html":{}}}],["native/statu",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"components/MyApp.html":{},"dependencies.html":{}}}],["nav",{"_index":1024,"title":{},"body":{"components/MyApp.html":{}}}],["navcontrol",{"_index":292,"title":{},"body":{"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{}}}],["navctrl",{"_index":288,"title":{},"body":{"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{}}}],["navctrl.pop",{"_index":1012,"title":{},"body":{"components/LoginPage.html":{}}}],["navig",{"_index":458,"title":{},"body":{"components/EventsPage.html":{},"components/MyApp.html":{}}}],["navparam",{"_index":289,"title":{},"body":{"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventsPage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{}}}],["navparams.get(\"key",{"_index":313,"title":{},"body":{"components/DeviceInfoPage.html":{}}}],["navparams.get('d",{"_index":412,"title":{},"body":{"components/EventDatePage.html":{}}}],["navparams.get('rang",{"_index":414,"title":{},"body":{"components/EventDatePage.html":{}}}],["near",{"_index":515,"title":{},"body":{"components/EventsPage.html":{}}}],["nearbi",{"_index":478,"title":{},"body":{"components/EventsPage.html":{},"injectables/GeofireProvider.html":{}}}],["need",{"_index":571,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseConfigProvider.html":{},"injectables/GeofireProvider.html":{},"components/MyApp.html":{}}}],["needaccount",{"_index":943,"title":{},"body":{"components/LoginModal.html":{}}}],["new",{"_index":191,"title":{},"body":{"components/CalendarComponent.html":{},"classes/Event.html":{},"components/EventDatePage.html":{},"components/EventsPage.html":{},"injectables/FirebaseAuthProvider.html":{},"injectables/GeofireProvider.html":{},"coverage.html":{}}}],["newaccount",{"_index":525,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["newaccount(email",{"_index":543,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["newobserv",{"_index":705,"title":{},"body":{"injectables/FirebaseDatabaseProvider.html":{}}}],["next",{"_index":160,"title":{},"body":{"components/CalendarComponent.html":{}}}],["ngfor",{"_index":1043,"title":{},"body":{"components/MyApp.html":{}}}],["ngmodul",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"modules/ComponentsModule.html":{}}}],["ngoninit",{"_index":870,"title":{},"body":{"components/HomePage.html":{}}}],["nice",{"_index":540,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["noth",{"_index":989,"title":{},"body":{"components/LoginModal.html":{}}}],["nov",{"_index":347,"title":{},"body":{"classes/Event.html":{},"components/EventDatePage.html":{}}}],["null",{"_index":295,"title":{},"body":{"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventsPage.html":{},"injectables/FirebaseAuthProvider.html":{},"injectables/GeofireProvider.html":{},"components/HomePage.html":{}}}],["number",{"_index":115,"title":{},"body":{"components/CalendarComponent.html":{},"classes/Event.html":{},"components/EventDatePage.html":{},"components/EventsPage.html":{},"injectables/GeofireProvider.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["number(ev",{"_index":161,"title":{},"body":{"components/CalendarComponent.html":{}}}],["object",{"_index":734,"title":{},"body":{"injectables/GeofireProvider.html":{},"components/LoginModal.html":{}}}],["observ",{"_index":189,"title":{},"body":{"components/CalendarComponent.html":{},"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventsPage.html":{},"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseDatabaseProvider.html":{},"injectables/GeofireProvider.html":{},"components/LoginModal.html":{}}}],["observable.create(gener",{"_index":820,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["observable.create(generator).shar",{"_index":706,"title":{},"body":{"injectables/FirebaseDatabaseProvider.html":{}}}],["observable.create(generator).sharereplay(1",{"_index":710,"title":{},"body":{"injectables/FirebaseDatabaseProvider.html":{}}}],["observer.asobserv",{"_index":621,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["observer.complet",{"_index":623,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["observer.error(firebaseauthprovider.converterrorcode(error",{"_index":620,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["observer.next([key",{"_index":812,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["observer.next(ev",{"_index":715,"title":{},"body":{"injectables/FirebaseDatabaseProvider.html":{}}}],["observer.next(result",{"_index":619,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["observer.next(value.v",{"_index":701,"title":{},"body":{"injectables/FirebaseDatabaseProvider.html":{}}}],["obtain",{"_index":345,"title":{},"body":{"classes/Event.html":{}}}],["offer",{"_index":719,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["offset",{"_index":180,"title":{},"body":{"components/CalendarComponent.html":{}}}],["okay",{"_index":1046,"title":{},"body":{"components/MyApp.html":{}}}],["old",{"_index":845,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["on",{"_index":358,"title":{},"body":{"classes/Event.html":{}}}],["onclickgener",{"_index":755,"title":{},"body":{"injectables/GeofireProvider.html":{},"components/HomePage.html":{}}}],["one.endtime).valueof",{"_index":368,"title":{},"body":{"classes/Event.html":{}}}],["one.starttime).valueof",{"_index":363,"title":{},"body":{"classes/Event.html":{}}}],["onkeyenteredregistr",{"_index":784,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["onkeyenteredregistration.cancel",{"_index":817,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["onkeyexitedregistr",{"_index":785,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["onkeyexitedregistration.cancel",{"_index":819,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["onkeymovedregistr",{"_index":826,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["onkeymovedregistration.cancel",{"_index":829,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["onto",{"_index":760,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["open",{"_index":473,"title":{},"body":{"components/EventsPage.html":{}}}],["openpag",{"_index":1027,"title":{},"body":{"components/MyApp.html":{}}}],["openpage(pag",{"_index":1031,"title":{},"body":{"components/MyApp.html":{}}}],["option",{"_index":156,"title":{},"body":{"components/CalendarComponent.html":{},"classes/Device.html":{},"components/DeviceInfoPage.html":{},"classes/Event.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseDatabaseProvider.html":{},"injectables/GeofireProvider.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MyApp.html":{}}}],["order",{"_index":488,"title":{},"body":{"components/EventsPage.html":{}}}],["organ",{"_index":274,"title":{"classes/Organization.html":{}},"body":{"classes/Device.html":{},"components/DeviceInfoPage.html":{},"classes/Event.html":{},"injectables/FirebaseDatabaseProvider.html":{},"classes/Organization.html":{},"coverage.html":{}}}],["otherwis",{"_index":988,"title":{},"body":{"components/LoginModal.html":{}}}],["out",{"_index":28,"title":{},"body":{"modules/AppModule.html":{},"modules/ComponentsModule.html":{},"injectables/FirebaseAuthProvider.html":{},"components/LoginModal.html":{},"components/MyApp.html":{},"index.html":{}}}],["output",{"_index":118,"title":{},"body":{"components/CalendarComponent.html":{}}}],["overview",{"_index":1143,"title":{"index.html":{}},"body":{"index.html":{}}}],["own",{"_index":273,"title":{},"body":{"classes/Device.html":{},"components/DeviceInfoPage.html":{},"classes/Event.html":{}}}],["owner",{"_index":267,"title":{},"body":{"classes/Device.html":{},"components/DeviceInfoPage.html":{},"classes/Event.html":{}}}],["owner.nam",{"_index":328,"title":{},"body":{"components/DeviceInfoPage.html":{}}}],["owner_key",{"_index":290,"title":{},"body":{"components/DeviceInfoPage.html":{}}}],["p.titl",{"_index":1063,"title":{},"body":{"components/MyApp.html":{}}}],["packag",{"_index":1104,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":239,"title":{},"body":{"components/CalendarComponent.html":{},"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MyApp.html":{}}}],["pages/devic",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["pages/ev",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"components/EventItemComponent.html":{}}}],["pages/events/ev",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"components/MyApp.html":{}}}],["pages/home/hom",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"components/MyApp.html":{}}}],["pages/login",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["pages/login/login",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["param",{"_index":221,"title":{},"body":{"components/CalendarComponent.html":{},"classes/Event.html":{},"components/EventDatePage.html":{},"components/EventsPage.html":{},"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseDatabaseProvider.html":{},"injectables/GeofireProvider.html":{}}}],["paramet",{"_index":154,"title":{},"body":{"components/CalendarComponent.html":{},"components/DeviceInfoPage.html":{},"classes/Event.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseDatabaseProvider.html":{},"injectables/GeofireProvider.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MyApp.html":{}}}],["parent",{"_index":128,"title":{},"body":{"components/CalendarComponent.html":{}}}],["particular",{"_index":690,"title":{},"body":{"injectables/FirebaseDatabaseProvider.html":{}}}],["pass",{"_index":476,"title":{},"body":{"components/EventsPage.html":{}}}],["password",{"_index":544,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{}}}],["password).then((result",{"_index":618,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["passwordcheck",{"_index":978,"title":{},"body":{"components/LoginModal.html":{}}}],["platform",{"_index":874,"title":{},"body":{"components/HomePage.html":{},"components/MyApp.html":{}}}],["pleas",{"_index":912,"title":{},"body":{"components/HomePage.html":{}}}],["plugin",{"_index":923,"title":{},"body":{"components/HomePage.html":{},"components/MyApp.html":{},"dependencies.html":{}}}],["posit",{"_index":753,"title":{},"body":{"injectables/GeofireProvider.html":{},"components/HomePage.html":{},"components/LoginPage.html":{}}}],["potenti",{"_index":278,"title":{},"body":{"classes/Device.html":{},"components/LoginModal.html":{}}}],["prepar",{"_index":464,"title":{},"body":{"components/EventsPage.html":{}}}],["present",{"_index":936,"title":{},"body":{"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{}}}],["prevent",{"_index":642,"title":{},"body":{"injectables/FirebaseConfigProvider.html":{}}}],["previou",{"_index":182,"title":{},"body":{"components/CalendarComponent.html":{}}}],["prevnumofday",{"_index":217,"title":{},"body":{"components/CalendarComponent.html":{}}}],["privat",{"_index":287,"title":{},"body":{"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventsPage.html":{},"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseConfigProvider.html":{},"injectables/FirebaseDatabaseProvider.html":{},"injectables/GeofireProvider.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MyApp.html":{}}}],["project'",{"_index":664,"title":{},"body":{"injectables/FirebaseConfigProvider.html":{}}}],["projectid",{"_index":657,"title":{},"body":{"injectables/FirebaseConfigProvider.html":{}}}],["promis",{"_index":579,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["properti",{"_index":99,"title":{},"body":{"components/CalendarComponent.html":{},"classes/Device.html":{},"components/DeviceInfoPage.html":{},"classes/Event.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventsPage.html":{},"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseConfigProvider.html":{},"injectables/FirebaseDatabaseProvider.html":{},"injectables/GeofireProvider.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MyApp.html":{},"classes/Organization.html":{}}}],["provid",{"_index":6,"title":{},"body":{"modules/AppModule.html":{},"modules/ComponentsModule.html":{},"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseConfigProvider.html":{},"injectables/GeofireProvider.html":{},"index.html":{}}}],["providers/firebas",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"components/DeviceInfoPage.html":{},"components/EventInfoPage.html":{},"components/EventsPage.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MyApp.html":{}}}],["providers/geofire/geofir",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"components/EventDatePage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"components/HomePage.html":{}}}],["public",{"_index":266,"title":{},"body":{"classes/Device.html":{},"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventsPage.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MyApp.html":{}}}],["pull",{"_index":748,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["purpos",{"_index":268,"title":{},"body":{"classes/Device.html":{},"components/DeviceInfoPage.html":{}}}],["put",{"_index":759,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["queri",{"_index":742,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["query.on(\"key_ent",{"_index":809,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["query.on(\"key_exit",{"_index":813,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["query.on(\"key_mov",{"_index":827,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["query.updatecriteria(this.generatequery(map",{"_index":849,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["query.updatecriteria({radiu",{"_index":807,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["radiu",{"_index":745,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["radius.subscribe((radiu",{"_index":805,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["rang",{"_index":378,"title":{},"body":{"components/EventDatePage.html":{},"components/EventsPage.html":{}}}],["rangechang",{"_index":381,"title":{},"body":{"components/EventDatePage.html":{},"components/EventsPage.html":{}}}],["rangechange(valu",{"_index":389,"title":{},"body":{"components/EventDatePage.html":{},"components/EventsPage.html":{}}}],["react",{"_index":129,"title":{},"body":{"components/CalendarComponent.html":{}}}],["readabl",{"_index":542,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["readi",{"_index":1047,"title":{},"body":{"components/MyApp.html":{}}}],["readonli",{"_index":107,"title":{},"body":{"components/CalendarComponent.html":{}}}],["realtim",{"_index":669,"title":{},"body":{"injectables/FirebaseDatabaseProvider.html":{}}}],["recent",{"_index":678,"title":{},"body":{"injectables/FirebaseDatabaseProvider.html":{}}}],["redirect",{"_index":565,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["refer",{"_index":681,"title":{},"body":{"injectables/FirebaseDatabaseProvider.html":{},"components/HomePage.html":{}}}],["regard",{"_index":153,"title":{},"body":{"components/CalendarComponent.html":{}}}],["relev",{"_index":465,"title":{},"body":{"components/EventsPage.html":{},"components/LoginPage.html":{}}}],["remov",{"_index":839,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["replac",{"_index":663,"title":{},"body":{"injectables/FirebaseConfigProvider.html":{}}}],["repres",{"_index":262,"title":{},"body":{"classes/Device.html":{},"classes/Event.html":{}}}],["reset",{"_index":27,"title":{},"body":{"modules/AppModule.html":{},"modules/ComponentsModule.html":{},"components/MyApp.html":{},"index.html":{}}}],["respons",{"_index":593,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{},"components/LoginModal.html":{}}}],["result",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"components/CalendarComponent.html":{},"modules/ComponentsModule.html":{},"classes/Device.html":{},"components/DeviceInfoPage.html":{},"classes/Event.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseConfigProvider.html":{},"injectables/FirebaseDatabaseProvider.html":{},"injectables/GeofireProvider.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MyApp.html":{},"classes/Organization.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["result.credenti",{"_index":598,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["result.credential.accesstoken",{"_index":603,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["result.subscribe((result",{"_index":983,"title":{},"body":{"components/LoginModal.html":{}}}],["result.us",{"_index":604,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["return",{"_index":138,"title":{},"body":{"components/CalendarComponent.html":{},"components/DeviceInfoPage.html":{},"classes/Event.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseConfigProvider.html":{},"injectables/FirebaseDatabaseProvider.html":{},"injectables/GeofireProvider.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MyApp.html":{}}}],["rootpag",{"_index":1025,"title":{},"body":{"components/MyApp.html":{}}}],["rotat",{"_index":847,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["run",{"_index":761,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["rxj",{"_index":1136,"title":{},"body":{"dependencies.html":{}}}],["rxjs/add/observable/def",{"_index":490,"title":{},"body":{"components/EventsPage.html":{}}}],["rxjs/add/observable/of",{"_index":777,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["rxjs/add/operator/combinelatest",{"_index":773,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["rxjs/add/operator/concatmap",{"_index":303,"title":{},"body":{"components/DeviceInfoPage.html":{}}}],["rxjs/add/operator/delay",{"_index":491,"title":{},"body":{"components/EventsPage.html":{}}}],["rxjs/add/operator/distinctuntilchang",{"_index":305,"title":{},"body":{"components/DeviceInfoPage.html":{}}}],["rxjs/add/operator/do",{"_index":775,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["rxjs/add/operator/map",{"_index":304,"title":{},"body":{"components/DeviceInfoPage.html":{}}}],["rxjs/add/operator/mergemap",{"_index":776,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["rxjs/add/operator/scan",{"_index":774,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["rxjs/add/operator/shar",{"_index":492,"title":{},"body":{"components/EventsPage.html":{}}}],["rxjs/add/operator/sharereplay",{"_index":695,"title":{},"body":{"injectables/FirebaseDatabaseProvider.html":{},"injectables/GeofireProvider.html":{}}}],["rxjs/add/operator/switchmap",{"_index":493,"title":{},"body":{"components/EventsPage.html":{}}}],["rxjs/observ",{"_index":190,"title":{},"body":{"components/CalendarComponent.html":{},"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventsPage.html":{},"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseDatabaseProvider.html":{},"injectables/GeofireProvider.html":{},"components/LoginModal.html":{}}}],["rxjs/subject",{"_index":309,"title":{},"body":{"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventsPage.html":{},"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseDatabaseProvider.html":{}}}],["rxjs/subscript",{"_index":694,"title":{},"body":{"injectables/FirebaseDatabaseProvider.html":{},"injectables/GeofireProvider.html":{}}}],["same",{"_index":402,"title":{},"body":{"components/EventDatePage.html":{}}}],["sat",{"_index":231,"title":{},"body":{"components/CalendarComponent.html":{}}}],["save",{"_index":553,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["scan",{"_index":790,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["scan((acc",{"_index":821,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["scenario",{"_index":1060,"title":{},"body":{"components/MyApp.html":{}}}],["schema",{"_index":34,"title":{},"body":{"modules/AppModule.html":{}}}],["screen",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"components/MyApp.html":{},"dependencies.html":{}}}],["search",{"_index":166,"title":{},"body":{"components/CalendarComponent.html":{}}}],["second",{"_index":360,"title":{},"body":{"classes/Event.html":{}}}],["see",{"_index":456,"title":{},"body":{"components/EventsPage.html":{},"injectables/FirebaseAuthProvider.html":{}}}],["seem",{"_index":804,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["select",{"_index":119,"title":{},"body":{"components/CalendarComponent.html":{},"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{}}}],["selectedd",{"_index":461,"title":{},"body":{"components/EventsPage.html":{}}}],["selecteddate(d",{"_index":471,"title":{},"body":{"components/EventsPage.html":{}}}],["selector",{"_index":95,"title":{},"body":{"components/CalendarComponent.html":{},"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MyApp.html":{}}}],["servic",{"_index":1006,"title":{},"body":{"components/LoginPage.html":{}}}],["session",{"_index":551,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["set",{"_index":133,"title":{},"body":{"components/CalendarComponent.html":{},"components/EventsPage.html":{},"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseConfigProvider.html":{}}}],["setsignedin",{"_index":526,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["setsignedin(method",{"_index":549,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["show",{"_index":283,"title":{},"body":{"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MyApp.html":{}}}],["shown",{"_index":263,"title":{},"body":{"classes/Device.html":{},"components/EventDatePage.html":{},"components/EventsPage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{}}}],["sign",{"_index":554,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{},"components/LoginModal.html":{},"components/MyApp.html":{}}}],["signinanonym",{"_index":527,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["signinwithcr",{"_index":528,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["signinwithcreds(email",{"_index":559,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["signinwithgoogl",{"_index":529,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["signout",{"_index":530,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{},"components/MyApp.html":{}}}],["snippet",{"_index":666,"title":{},"body":{"injectables/FirebaseConfigProvider.html":{},"components/HomePage.html":{}}}],["someth",{"_index":788,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["sort",{"_index":165,"title":{},"body":{"components/CalendarComponent.html":{},"classes/Event.html":{},"components/EventsPage.html":{}}}],["sourc",{"_index":30,"title":{},"body":{"modules/AppModule.html":{},"components/CalendarComponent.html":{},"modules/ComponentsModule.html":{},"classes/Device.html":{},"components/DeviceInfoPage.html":{},"classes/Event.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseConfigProvider.html":{},"injectables/FirebaseDatabaseProvider.html":{},"injectables/GeofireProvider.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MyApp.html":{},"classes/Organization.html":{}}}],["specifi",{"_index":561,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["spheric",{"_index":767,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["spherical.computedistancebetween(visibleregion.northeast",{"_index":858,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["spherical.computehead",{"_index":844,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["splashscreen",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"components/MyApp.html":{},"dependencies.html":{}}}],["splice(1).join",{"_index":404,"title":{},"body":{"components/EventDatePage.html":{}}}],["src/.../geofire.t",{"_index":1151,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../home.t",{"_index":1152,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.t",{"_index":1022,"title":{},"body":{"components/MyApp.html":{},"coverage.html":{}}}],["src/app/app.component.ts:15",{"_index":1036,"title":{},"body":{"components/MyApp.html":{}}}],["src/app/app.component.ts:17",{"_index":1038,"title":{},"body":{"components/MyApp.html":{}}}],["src/app/app.component.ts:19",{"_index":1029,"title":{},"body":{"components/MyApp.html":{}}}],["src/app/app.component.ts:21",{"_index":1037,"title":{},"body":{"components/MyApp.html":{}}}],["src/app/app.component.ts:32",{"_index":1030,"title":{},"body":{"components/MyApp.html":{}}}],["src/app/app.component.ts:45",{"_index":1032,"title":{},"body":{"components/MyApp.html":{}}}],["src/app/app.component.ts:51",{"_index":1033,"title":{},"body":{"components/MyApp.html":{}}}],["src/app/app.module.t",{"_index":32,"title":{},"body":{"modules/AppModule.html":{}}}],["src/components/calendar/calendar.t",{"_index":86,"title":{},"body":{"components/CalendarComponent.html":{},"coverage.html":{}}}],["src/components/calendar/calendar.ts:121",{"_index":140,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/components/calendar/calendar.ts:129",{"_index":147,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/components/calendar/calendar.ts:138",{"_index":169,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/components/calendar/calendar.ts:146",{"_index":149,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/components/calendar/calendar.ts:159",{"_index":162,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/components/calendar/calendar.ts:16",{"_index":127,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/components/calendar/calendar.ts:21",{"_index":131,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/components/calendar/calendar.ts:27",{"_index":188,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/components/calendar/calendar.ts:32",{"_index":178,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/components/calendar/calendar.ts:37",{"_index":184,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/components/calendar/calendar.ts:42",{"_index":181,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/components/calendar/calendar.ts:47",{"_index":183,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/components/calendar/calendar.ts:52",{"_index":170,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/components/calendar/calendar.ts:57",{"_index":187,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/components/calendar/calendar.ts:62",{"_index":176,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/components/calendar/calendar.ts:67",{"_index":122,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/components/calendar/calendar.ts:79",{"_index":132,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/components/components.module.t",{"_index":254,"title":{},"body":{"modules/ComponentsModule.html":{}}}],["src/components/ev",{"_index":437,"title":{},"body":{"components/EventItemComponent.html":{},"coverage.html":{}}}],["src/models/device.t",{"_index":260,"title":{},"body":{"classes/Device.html":{},"coverage.html":{}}}],["src/models/device.ts:14",{"_index":271,"title":{},"body":{"classes/Device.html":{}}}],["src/models/device.ts:19",{"_index":275,"title":{},"body":{"classes/Device.html":{}}}],["src/models/device.ts:25",{"_index":277,"title":{},"body":{"classes/Device.html":{}}}],["src/models/device.ts:9",{"_index":270,"title":{},"body":{"classes/Device.html":{}}}],["src/models/event.t",{"_index":329,"title":{},"body":{"classes/Event.html":{},"coverage.html":{}}}],["src/models/event.ts:13",{"_index":352,"title":{},"body":{"classes/Event.html":{}}}],["src/models/event.ts:18",{"_index":342,"title":{},"body":{"classes/Event.html":{}}}],["src/models/event.ts:23",{"_index":343,"title":{},"body":{"classes/Event.html":{}}}],["src/models/event.ts:28",{"_index":350,"title":{},"body":{"classes/Event.html":{}}}],["src/models/event.ts:33",{"_index":336,"title":{},"body":{"classes/Event.html":{}}}],["src/models/event.ts:38",{"_index":338,"title":{},"body":{"classes/Event.html":{}}}],["src/models/event.ts:45",{"_index":355,"title":{},"body":{"classes/Event.html":{}}}],["src/models/event.ts:8",{"_index":340,"title":{},"body":{"classes/Event.html":{}}}],["src/models/organization.t",{"_index":1064,"title":{},"body":{"classes/Organization.html":{},"coverage.html":{}}}],["src/models/organization.ts:14",{"_index":1065,"title":{},"body":{"classes/Organization.html":{}}}],["src/models/organization.ts:9",{"_index":1067,"title":{},"body":{"classes/Organization.html":{}}}],["src/pages/devic",{"_index":281,"title":{},"body":{"components/DeviceInfoPage.html":{},"coverage.html":{}}}],["src/pages/ev",{"_index":371,"title":{},"body":{"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"coverage.html":{}}}],["src/pages/events/events.t",{"_index":455,"title":{},"body":{"components/EventsPage.html":{},"coverage.html":{}}}],["src/pages/events/events.ts:101",{"_index":466,"title":{},"body":{"components/EventsPage.html":{}}}],["src/pages/events/events.ts:110",{"_index":472,"title":{},"body":{"components/EventsPage.html":{}}}],["src/pages/events/events.ts:33",{"_index":484,"title":{},"body":{"components/EventsPage.html":{}}}],["src/pages/events/events.ts:38",{"_index":474,"title":{},"body":{"components/EventsPage.html":{}}}],["src/pages/events/events.ts:43",{"_index":489,"title":{},"body":{"components/EventsPage.html":{}}}],["src/pages/events/events.ts:48",{"_index":479,"title":{},"body":{"components/EventsPage.html":{}}}],["src/pages/events/events.ts:53",{"_index":482,"title":{},"body":{"components/EventsPage.html":{}}}],["src/pages/events/events.ts:58",{"_index":462,"title":{},"body":{"components/EventsPage.html":{}}}],["src/pages/events/events.ts:60",{"_index":483,"title":{},"body":{"components/EventsPage.html":{}}}],["src/pages/events/events.ts:68",{"_index":467,"title":{},"body":{"components/EventsPage.html":{}}}],["src/pages/events/events.ts:76",{"_index":463,"title":{},"body":{"components/EventsPage.html":{}}}],["src/pages/home/home.t",{"_index":863,"title":{},"body":{"components/HomePage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/pages/home/home.ts:35",{"_index":883,"title":{},"body":{"components/HomePage.html":{}}}],["src/pages/home/home.ts:40",{"_index":876,"title":{},"body":{"components/HomePage.html":{}}}],["src/pages/home/home.ts:43",{"_index":882,"title":{},"body":{"components/HomePage.html":{}}}],["src/pages/home/home.ts:44",{"_index":884,"title":{},"body":{"components/HomePage.html":{}}}],["src/pages/home/home.ts:45",{"_index":885,"title":{},"body":{"components/HomePage.html":{}}}],["src/pages/home/home.ts:52",{"_index":879,"title":{},"body":{"components/HomePage.html":{}}}],["src/pages/home/home.ts:64",{"_index":878,"title":{},"body":{"components/HomePage.html":{}}}],["src/pages/home/home.ts:83",{"_index":877,"title":{},"body":{"components/HomePage.html":{}}}],["src/pages/login",{"_index":937,"title":{},"body":{"components/LoginModal.html":{},"coverage.html":{}}}],["src/pages/login/login.t",{"_index":996,"title":{},"body":{"components/LoginPage.html":{},"coverage.html":{}}}],["src/pages/login/login.ts:14",{"_index":1003,"title":{},"body":{"components/LoginPage.html":{}}}],["src/pages/login/login.ts:16",{"_index":1009,"title":{},"body":{"components/LoginPage.html":{}}}],["src/pages/login/login.ts:27",{"_index":1004,"title":{},"body":{"components/LoginPage.html":{}}}],["src/pages/login/login.ts:44",{"_index":1008,"title":{},"body":{"components/LoginPage.html":{}}}],["src/pages/login/login.ts:51",{"_index":1007,"title":{},"body":{"components/LoginPage.html":{}}}],["src/providers/firebas",{"_index":517,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseConfigProvider.html":{},"injectables/FirebaseDatabaseProvider.html":{},"coverage.html":{}}}],["src/providers/geofire/geofire.t",{"_index":718,"title":{},"body":{"injectables/GeofireProvider.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/providers/geofire/geofire.ts:157",{"_index":757,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["src/providers/geofire/geofire.ts:202",{"_index":731,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["src/providers/geofire/geofire.ts:213",{"_index":738,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["src/providers/geofire/geofire.ts:221",{"_index":741,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["src/providers/geofire/geofire.ts:28",{"_index":763,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["src/providers/geofire/geofire.ts:33",{"_index":729,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["src/providers/geofire/geofire.ts:45",{"_index":746,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["src/providers/geofire/geofire.ts:97",{"_index":751,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["start",{"_index":344,"title":{},"body":{"classes/Event.html":{},"components/EventsPage.html":{},"injectables/GeofireProvider.html":{},"components/HomePage.html":{},"miscellaneous/variables.html":{}}}],["startdat",{"_index":332,"title":{},"body":{"classes/Event.html":{}}}],["startlat",{"_index":891,"title":{},"body":{"components/HomePage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["startlong",{"_index":888,"title":{},"body":{"components/HomePage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["starttim",{"_index":333,"title":{},"body":{"classes/Event.html":{}}}],["statement",{"_index":1072,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":106,"title":{},"body":{"components/CalendarComponent.html":{},"classes/Event.html":{},"injectables/FirebaseAuthProvider.html":{},"injectables/GeofireProvider.html":{}}}],["statusbar",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"components/MyApp.html":{},"dependencies.html":{}}}],["storagebucket",{"_index":659,"title":{},"body":{"injectables/FirebaseConfigProvider.html":{}}}],["string",{"_index":167,"title":{},"body":{"components/CalendarComponent.html":{},"classes/Device.html":{},"components/DeviceInfoPage.html":{},"classes/Event.html":{},"components/EventDatePage.html":{},"components/EventsPage.html":{},"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseDatabaseProvider.html":{},"injectables/GeofireProvider.html":{},"classes/Organization.html":{}}}],["subject",{"_index":308,"title":{},"body":{"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventsPage.html":{},"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseDatabaseProvider.html":{}}}],["submit",{"_index":945,"title":{},"body":{"components/LoginModal.html":{}}}],["subscrib",{"_index":567,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["subscript",{"_index":778,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["subscriptions[key",{"_index":810,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["subscriptions[key].unsubscrib",{"_index":814,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["success",{"_index":558,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["success.asobserv",{"_index":585,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["success.complet",{"_index":583,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["success.next(fals",{"_index":582,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["success.next(tru",{"_index":584,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["sun",{"_index":225,"title":{},"body":{"components/CalendarComponent.html":{}}}],["support",{"_index":1146,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1147,"title":{},"body":{"modules.html":{}}}],["sw",{"_index":1138,"title":{},"body":{"dependencies.html":{}}}],["switch",{"_index":971,"title":{},"body":{"components/LoginModal.html":{}}}],["switch(error.errorcod",{"_index":624,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["sync",{"_index":965,"title":{},"body":{"components/LoginModal.html":{}}}],["t",{"_index":779,"title":{},"body":{"injectables/GeofireProvider.html":{},"miscellaneous/typealiases.html":{}}}],["tabl",{"_index":1103,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":1102,"title":{},"body":{"coverage.html":{}}}],["target",{"_index":902,"title":{},"body":{"components/HomePage.html":{}}}],["teardownlog",{"_index":693,"title":{},"body":{"injectables/FirebaseDatabaseProvider.html":{}}}],["templat",{"_index":83,"title":{},"body":{"components/CalendarComponent.html":{},"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MyApp.html":{}}}],["templateurl",{"_index":96,"title":{},"body":{"components/CalendarComponent.html":{},"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MyApp.html":{}}}],["then((mark",{"_index":834,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["thing",{"_index":1052,"title":{},"body":{"components/MyApp.html":{}}}],["this._rang",{"_index":418,"title":{},"body":{"components/EventDatePage.html":{}}}],["this._range).map((ev",{"_index":499,"title":{},"body":{"components/EventsPage.html":{}}}],["this._range.next(this.rang",{"_index":496,"title":{},"body":{"components/EventsPage.html":{}}}],["this._range.next(valu",{"_index":415,"title":{},"body":{"components/EventDatePage.html":{},"components/EventsPage.html":{}}}],["this._us",{"_index":574,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["this._user.next(firebase.auth().currentus",{"_index":575,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["this._user.next(us",{"_index":577,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["this.checkpassword",{"_index":979,"title":{},"body":{"components/LoginModal.html":{}}}],["this.currentmonth",{"_index":202,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.currentyear",{"_index":204,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.dat",{"_index":196,"title":{},"body":{"components/CalendarComponent.html":{},"components/EventDatePage.html":{}}}],["this.date.getfullyear",{"_index":205,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.date.getmonth",{"_index":213,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.date.split",{"_index":403,"title":{},"body":{"components/EventDatePage.html":{}}}],["this.daysinlastmonth",{"_index":200,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.daysinnextmonth",{"_index":201,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.daysinthismonth",{"_index":199,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.devic",{"_index":316,"title":{},"body":{"components/DeviceInfoPage.html":{}}}],["this.device$.map((devic",{"_index":319,"title":{},"body":{"components/DeviceInfoPage.html":{}}}],["this.devices[key",{"_index":707,"title":{},"body":{"injectables/FirebaseDatabaseProvider.html":{}}}],["this.devicesgeofir",{"_index":780,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["this.devicesgeofire.query(this.generatequery(map",{"_index":831,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["this.ev",{"_index":416,"title":{},"body":{"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventsPage.html":{}}}],["this.event[0].key",{"_index":450,"title":{},"body":{"components/EventItemComponent.html":{}}}],["this.events.map((ev",{"_index":420,"title":{},"body":{"components/EventDatePage.html":{}}}],["this.events[key",{"_index":717,"title":{},"body":{"injectables/FirebaseDatabaseProvider.html":{}}}],["this.eventsgeofir",{"_index":782,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["this.eventsgeofire.queri",{"_index":795,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["this.filt",{"_index":419,"title":{},"body":{"components/EventDatePage.html":{}}}],["this.firebaseauth.newaccount(this.loginform.controls.email.valu",{"_index":981,"title":{},"body":{"components/LoginModal.html":{}}}],["this.firebaseauth.signinanonymously().subscribe((success",{"_index":1013,"title":{},"body":{"components/LoginPage.html":{}}}],["this.firebaseauth.signinwithcreds(this.loginform.controls.email.valu",{"_index":982,"title":{},"body":{"components/LoginModal.html":{}}}],["this.firebaseauth.signinwithgoogl",{"_index":1018,"title":{},"body":{"components/LoginPage.html":{}}}],["this.firebaseauth.signout",{"_index":1062,"title":{},"body":{"components/MyApp.html":{}}}],["this.firebaseauth.user.subscribe((us",{"_index":895,"title":{},"body":{"components/HomePage.html":{}}}],["this.firebasedatabase.getdevice(this.key",{"_index":317,"title":{},"body":{"components/DeviceInfoPage.html":{}}}],["this.firebasedatabase.getevent(key).subscribe(ev",{"_index":811,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["this.firebasedatabase.getorganization(key",{"_index":322,"title":{},"body":{"components/DeviceInfoPage.html":{}}}],["this.formbuilder.group",{"_index":974,"title":{},"body":{"components/LoginModal.html":{}}}],["this.geofire.getnearbyevents(+this.rang",{"_index":498,"title":{},"body":{"components/EventsPage.html":{}}}],["this.geofire.getnearbygeoevents(+this.rang",{"_index":504,"title":{},"body":{"components/EventsPage.html":{}}}],["this.geofire.getnearbygeoevents(this.rang",{"_index":417,"title":{},"body":{"components/EventDatePage.html":{}}}],["this.geofire.initializemap(this.map",{"_index":907,"title":{},"body":{"components/HomePage.html":{}}}],["this.getdaysofmonth",{"_index":198,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.initializeapp",{"_index":1041,"title":{},"body":{"components/MyApp.html":{}}}],["this.isinit",{"_index":647,"title":{},"body":{"injectables/FirebaseConfigProvider.html":{}}}],["this.key",{"_index":312,"title":{},"body":{"components/DeviceInfoPage.html":{}}}],["this.load",{"_index":909,"title":{},"body":{"components/HomePage.html":{}}}],["this.loading.dismiss",{"_index":915,"title":{},"body":{"components/HomePage.html":{}}}],["this.loading.pres",{"_index":913,"title":{},"body":{"components/HomePage.html":{}}}],["this.loadingctrl.cr",{"_index":910,"title":{},"body":{"components/HomePage.html":{}}}],["this.loadmap",{"_index":900,"title":{},"body":{"components/HomePage.html":{}}}],["this.loginform",{"_index":973,"title":{},"body":{"components/LoginModal.html":{}}}],["this.loginform.controls.password.valu",{"_index":961,"title":{},"body":{"components/LoginModal.html":{}}}],["this.map",{"_index":497,"title":{},"body":{"components/EventsPage.html":{},"components/HomePage.html":{}}}],["this.map.addmarkersync",{"_index":922,"title":{},"body":{"components/HomePage.html":{}}}],["this.map.animatecamera",{"_index":919,"title":{},"body":{"components/HomePage.html":{}}}],["this.map.clear",{"_index":908,"title":{},"body":{"components/HomePage.html":{}}}],["this.map.getmylocation().then((loc",{"_index":914,"title":{},"body":{"components/HomePage.html":{}}}],["this.modalctrl.create(loginmod",{"_index":1019,"title":{},"body":{"components/LoginPage.html":{}}}],["this.nav.setroot(page.compon",{"_index":1061,"title":{},"body":{"components/MyApp.html":{}}}],["this.navctrl.pop",{"_index":984,"title":{},"body":{"components/LoginModal.html":{},"components/LoginPage.html":{}}}],["this.navctrl.push(deviceinfopag",{"_index":906,"title":{},"body":{"components/HomePage.html":{}}}],["this.navctrl.push(eventdatepag",{"_index":513,"title":{},"body":{"components/EventsPage.html":{}}}],["this.navctrl.push(eventinfopag",{"_index":449,"title":{},"body":{"components/EventItemComponent.html":{}}}],["this.navctrl.push(loginpag",{"_index":897,"title":{},"body":{"components/HomePage.html":{}}}],["this.needaccount",{"_index":991,"title":{},"body":{"components/LoginModal.html":{}}}],["this.organizations[key",{"_index":711,"title":{},"body":{"injectables/FirebaseDatabaseProvider.html":{}}}],["this.own",{"_index":318,"title":{},"body":{"components/DeviceInfoPage.html":{}}}],["this.owner_key",{"_index":321,"title":{},"body":{"components/DeviceInfoPage.html":{}}}],["this.pag",{"_index":1044,"title":{},"body":{"components/MyApp.html":{}}}],["this.platform.readi",{"_index":899,"title":{},"body":{"components/HomePage.html":{}}}],["this.platform.ready().then",{"_index":1045,"title":{},"body":{"components/MyApp.html":{}}}],["this.rang",{"_index":413,"title":{},"body":{"components/EventDatePage.html":{},"components/EventsPage.html":{}}}],["this.setsignedin(\"googl",{"_index":586,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["this.showtoast('click",{"_index":930,"title":{},"body":{"components/HomePage.html":{}}}],["this.sort",{"_index":503,"title":{},"body":{"components/EventsPage.html":{}}}],["this.splashscreen.hid",{"_index":1057,"title":{},"body":{"components/MyApp.html":{}}}],["this.statusbar.styledefault",{"_index":1056,"title":{},"body":{"components/MyApp.html":{}}}],["this.toastctrl.cr",{"_index":932,"title":{},"body":{"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{}}}],["this.today",{"_index":192,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.today.getd",{"_index":195,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.today.getmonth",{"_index":194,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.viewctrl.dismiss",{"_index":990,"title":{},"body":{"components/LoginModal.html":{}}}],["those",{"_index":400,"title":{},"body":{"components/EventDatePage.html":{}}}],["through",{"_index":521,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["thu",{"_index":229,"title":{},"body":{"components/CalendarComponent.html":{}}}],["thumbnail",{"_index":269,"title":{},"body":{"classes/Device.html":{}}}],["tilt",{"_index":904,"title":{},"body":{"components/HomePage.html":{}}}],["time",{"_index":339,"title":{},"body":{"classes/Event.html":{},"injectables/FirebaseConfigProvider.html":{}}}],["titl",{"_index":334,"title":{},"body":{"classes/Event.html":{},"components/HomePage.html":{},"components/MyApp.html":{}}}],["titlecasepip",{"_index":310,"title":{},"body":{"components/DeviceInfoPage.html":{}}}],["toastcontrol",{"_index":873,"title":{},"body":{"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{}}}],["toastctrl",{"_index":867,"title":{},"body":{"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{}}}],["today",{"_index":109,"title":{},"body":{"components/CalendarComponent.html":{}}}],["todo",{"_index":280,"title":{},"body":{"classes/Device.html":{},"components/DeviceInfoPage.html":{},"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseConfigProvider.html":{},"injectables/GeofireProvider.html":{}}}],["togeth",{"_index":175,"title":{},"body":{"components/CalendarComponent.html":{}}}],["toggl",{"_index":946,"title":{},"body":{"components/LoginModal.html":{}}}],["token",{"_index":601,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["toolbox",{"_index":1139,"title":{},"body":{"dependencies.html":{}}}],["top",{"_index":1017,"title":{},"body":{"components/LoginPage.html":{}}}],["track",{"_index":432,"title":{},"body":{"components/EventInfoPage.html":{}}}],["tracker",{"_index":689,"title":{},"body":{"injectables/FirebaseDatabaseProvider.html":{}}}],["tree",{"_index":85,"title":{},"body":{"components/CalendarComponent.html":{},"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MyApp.html":{}}}],["trigger",{"_index":116,"title":{},"body":{"components/CalendarComponent.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{}}}],["trigger(day",{"_index":168,"title":{},"body":{"components/CalendarComponent.html":{}}}],["true",{"_index":648,"title":{},"body":{"injectables/FirebaseConfigProvider.html":{},"components/LoginModal.html":{}}}],["tue",{"_index":227,"title":{},"body":{"components/CalendarComponent.html":{},"classes/Event.html":{},"components/EventDatePage.html":{}}}],["tupl",{"_index":733,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["two",{"_index":354,"title":{},"body":{"classes/Event.html":{},"components/EventsPage.html":{}}}],["two.endtime).valueof",{"_index":370,"title":{},"body":{"classes/Event.html":{}}}],["two.starttime).valueof",{"_index":365,"title":{},"body":{"classes/Event.html":{}}}],["two[0",{"_index":512,"title":{},"body":{"components/EventsPage.html":{}}}],["type",{"_index":125,"title":{},"body":{"components/CalendarComponent.html":{},"classes/Device.html":{},"components/DeviceInfoPage.html":{},"classes/Event.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseDatabaseProvider.html":{},"injectables/GeofireProvider.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MyApp.html":{},"classes/Organization.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealias",{"_index":1149,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["ui",{"_index":141,"title":{},"body":{"components/CalendarComponent.html":{},"components/EventsPage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{}}}],["undefin",{"_index":756,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["up",{"_index":134,"title":{},"body":{"components/CalendarComponent.html":{},"components/DeviceInfoPage.html":{},"components/EventsPage.html":{},"injectables/FirebaseConfigProvider.html":{},"components/LoginModal.html":{}}}],["updat",{"_index":469,"title":{},"body":{"components/EventsPage.html":{},"injectables/FirebaseAuthProvider.html":{},"injectables/GeofireProvider.html":{}}}],["url",{"_index":1066,"title":{},"body":{"classes/Organization.html":{}}}],["us",{"_index":298,"title":{},"body":{"components/DeviceInfoPage.html":{},"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseConfigProvider.html":{},"injectables/GeofireProvider.html":{},"components/MyApp.html":{}}}],["useclass",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":89,"title":{},"body":{"components/CalendarComponent.html":{},"components/EventDatePage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"injectables/FirebaseAuthProvider.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{}}}],["user'",{"_index":444,"title":{},"body":{"components/EventItemComponent.html":{},"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseConfigProvider.html":{},"injectables/GeofireProvider.html":{},"components/HomePage.html":{}}}],["usernam",{"_index":939,"title":{},"body":{"components/LoginModal.html":{}}}],["util",{"_index":150,"title":{},"body":{"components/CalendarComponent.html":{}}}],["valid",{"_index":630,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{},"components/LoginModal.html":{}}}],["validators.compose([validators.requir",{"_index":975,"title":{},"body":{"components/LoginModal.html":{}}}],["validators.email",{"_index":976,"title":{},"body":{"components/LoginModal.html":{}}}],["validators.minlength(8",{"_index":977,"title":{},"body":{"components/LoginModal.html":{}}}],["valu",{"_index":185,"title":{},"body":{"components/CalendarComponent.html":{},"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventsPage.html":{},"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseConfigProvider.html":{},"injectables/FirebaseDatabaseProvider.html":{},"injectables/GeofireProvider.html":{},"components/LoginModal.html":{},"components/MyApp.html":{},"miscellaneous/variables.html":{}}}],["value.v",{"_index":713,"title":{},"body":{"injectables/FirebaseDatabaseProvider.html":{}}}],["value[1",{"_index":824,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["var",{"_index":236,"title":{},"body":{"components/CalendarComponent.html":{},"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"injectables/FirebaseAuthProvider.html":{},"injectables/GeofireProvider.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MyApp.html":{}}}],["variabl",{"_index":552,"title":{"miscellaneous/variables.html":{}},"body":{"injectables/FirebaseAuthProvider.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["via",{"_index":1021,"title":{},"body":{"components/LoginPage.html":{}}}],["view",{"_index":93,"title":{},"body":{"components/CalendarComponent.html":{},"components/DeviceInfoPage.html":{},"components/EventsPage.html":{}}}],["viewchild",{"_index":1039,"title":{},"body":{"components/MyApp.html":{}}}],["viewchild(nav",{"_index":1035,"title":{},"body":{"components/MyApp.html":{}}}],["viewcontrol",{"_index":948,"title":{},"body":{"components/LoginModal.html":{}}}],["viewctrl",{"_index":947,"title":{},"body":{"components/LoginModal.html":{}}}],["visibleregion",{"_index":766,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["visibleregion.southwest",{"_index":859,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["void",{"_index":139,"title":{},"body":{"components/CalendarComponent.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseConfigProvider.html":{},"injectables/GeofireProvider.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MyApp.html":{}}}],["wait",{"_index":881,"title":{},"body":{"components/HomePage.html":{}}}],["want",{"_index":123,"title":{},"body":{"components/CalendarComponent.html":{},"components/MyApp.html":{}}}],["way",{"_index":799,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["webview",{"_index":1126,"title":{},"body":{"dependencies.html":{}}}],["wed",{"_index":228,"title":{},"body":{"components/CalendarComponent.html":{}}}],["whenev",{"_index":470,"title":{},"body":{"components/EventsPage.html":{}}}],["whether",{"_index":557,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseDatabaseProvider.html":{},"components/LoginModal.html":{}}}],["whitelist",{"_index":1129,"title":{},"body":{"dependencies.html":{}}}],["window",{"_index":173,"title":{},"body":{"components/CalendarComponent.html":{},"injectables/GeofireProvider.html":{}}}],["window.localstorage.setitem(\"auth",{"_index":616,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["within",{"_index":398,"title":{},"body":{"components/EventDatePage.html":{},"components/EventsPage.html":{}}}],["wouldn't",{"_index":1058,"title":{},"body":{"components/MyApp.html":{}}}],["wrong",{"_index":634,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["xxxx",{"_index":349,"title":{},"body":{"classes/Event.html":{},"components/EventDatePage.html":{}}}],["year",{"_index":177,"title":{},"body":{"components/CalendarComponent.html":{}}}],["zone.j",{"_index":1141,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":26,"title":{},"body":{"modules/AppModule.html":{},"modules/ComponentsModule.html":{},"components/HomePage.html":{},"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nDeviceInfoPage\n\nDeviceInfoPage\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nDeviceInfoPage->AppModule\n\n\n\n\n\nEventDatePage\n\nEventDatePage\n\nAppModule -->\n\nEventDatePage->AppModule\n\n\n\n\n\nEventInfoPage\n\nEventInfoPage\n\nAppModule -->\n\nEventInfoPage->AppModule\n\n\n\n\n\nEventsPage\n\nEventsPage\n\nAppModule -->\n\nEventsPage->AppModule\n\n\n\n\n\nHomePage\n\nHomePage\n\nAppModule -->\n\nHomePage->AppModule\n\n\n\n\n\nLoginModal\n\nLoginModal\n\nAppModule -->\n\nLoginModal->AppModule\n\n\n\n\n\nLoginPage\n\nLoginPage\n\nAppModule -->\n\nLoginPage->AppModule\n\n\n\n\n\nMyApp\n\nMyApp\n\nAppModule -->\n\nMyApp->AppModule\n\n\n\n\n\nIonicApp \n\nIonicApp \n\nIonicApp  -->\n\nAppModule->IonicApp \n\n\n\n\n\nFirebaseAuthProvider\n\nFirebaseAuthProvider\n\nAppModule -->\n\nFirebaseAuthProvider->AppModule\n\n\n\n\n\nFirebaseConfigProvider\n\nFirebaseConfigProvider\n\nAppModule -->\n\nFirebaseConfigProvider->AppModule\n\n\n\n\n\nFirebaseDatabaseProvider\n\nFirebaseDatabaseProvider\n\nAppModule -->\n\nFirebaseDatabaseProvider->AppModule\n\n\n\n\n\nGeofireProvider\n\nGeofireProvider\n\nAppModule -->\n\nGeofireProvider->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DeviceInfoPage\n                        \n                        \n                            EventDatePage\n                        \n                        \n                            EventInfoPage\n                        \n                        \n                            EventsPage\n                        \n                        \n                            HomePage\n                        \n                        \n                            LoginModal\n                        \n                        \n                            LoginPage\n                        \n                        \n                            MyApp\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            DeviceInfoPage\n                        \n                        \n                            EventDatePage\n                        \n                        \n                            EventInfoPage\n                        \n                        \n                            EventsPage\n                        \n                        \n                            HomePage\n                        \n                        \n                            LoginModal\n                        \n                        \n                            LoginPage\n                        \n                        \n                            MyApp\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            FirebaseAuthProvider\n                        \n                        \n                            FirebaseConfigProvider\n                        \n                        \n                            FirebaseDatabaseProvider\n                        \n                        \n                            GeofireProvider\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            IonicApp\n                        \n                    \n                \n                \n                    Schemas\n                    \n                        \n                            CUSTOM_ELEMENTS_SCHEMA\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { ErrorHandler, NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { IonicApp, IonicErrorHandler, IonicModule } from 'ionic-angular';\n\nimport { MyApp } from './app.component';\nimport { HomePage } from '../pages/home/home';\n\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { FirebaseConfigProvider } from '../providers/firebase-config/firebase-config';\nimport { FirebaseAuthProvider } from '../providers/firebase-auth/firebase-auth';\nimport { LoginPage } from '../pages/login/login';\nimport { LoginModal } from '../pages/login-modal/login-modal';\nimport { FirebaseDatabaseProvider } from '../providers/firebase-database/firebase-database';\nimport { GeofireProvider } from '../providers/geofire/geofire';\nimport { DeviceInfoPage } from '../pages/device-info/device-info';\nimport { EventsPage } from '../pages/events/events';\nimport { ComponentsModule } from '../components/components.module';\nimport { EventDatePage } from '../pages/event-date/event-date';\nimport { EventInfoPage } from '../pages/event-info/event-info';\n\n@NgModule({\n  declarations: [\n    MyApp,\n    HomePage,\n    EventsPage,\n    EventDatePage,\n    EventInfoPage,\n    LoginPage,\n    LoginModal,\n    DeviceInfoPage\n  ],\n  imports: [\n    BrowserModule,\n    IonicModule.forRoot(MyApp),\n    ComponentsModule\n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    MyApp,\n    HomePage,\n    EventsPage,\n    EventDatePage,\n    EventInfoPage,\n    LoginPage,\n    LoginModal,\n    DeviceInfoPage\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    {provide: ErrorHandler, useClass: IonicErrorHandler},\n    FirebaseConfigProvider,\n    FirebaseAuthProvider,\n    FirebaseDatabaseProvider,\n    GeofireProvider\n  ],\n  schemas: [\n    CUSTOM_ELEMENTS_SCHEMA\n  ]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CalendarComponent.html":{"url":"components/CalendarComponent.html","title":"component - CalendarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CalendarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/components/calendar/calendar.ts\n\n\n    \n        Description\n    \n    \n        A component that allows a user to browse events in a calendar view\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                calendar\n            \n\n\n\n\n            \n                templateUrl\n                calendar.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                calendarDays\n                            \n                            \n                                currentMonth\n                            \n                            \n                                currentYear\n                            \n                            \n                                date\n                            \n                            \n                                daysInLastMonth\n                            \n                            \n                                daysInNextMonth\n                            \n                            \n                                daysInThisMonth\n                            \n                            \n                                    Static\n                                    Readonly\n                                monthNames\n                            \n                            \n                                today\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDaysOfMonth\n                            \n                            \n                                goToLastMonth\n                            \n                            \n                                goToNextMonth\n                            \n                            \n                                monthClasses\n                            \n                            \n                                number\n                            \n                            \n                                trigger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                events\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                select\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/components/calendar/calendar.ts:67\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        events\n                    \n                    \n                        All the events that you want to display\n\n                            \n                            Type :    literal type\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/components/calendar/calendar.ts:16\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        select\n                    \n                    \n                        Allows a parent component to react when a date is selected\n\n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/components/calendar/calendar.ts:21\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getDaysOfMonth\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetDaysOfMonth()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/calendar/calendar.ts:79\n                            \n                        \n\n\n                \n                    \n                            Sets up all the date arrays based on the date field\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            goToLastMonth\n                            \n                            \n                        \n                    \n                \n                \n                    \ngoToLastMonth()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/calendar/calendar.ts:121\n                            \n                        \n\n\n                \n                    \n                            UI driven action moving the user back a month\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            goToNextMonth\n                            \n                            \n                        \n                    \n                \n                \n                    \ngoToNextMonth()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/calendar/calendar.ts:129\n                            \n                        \n\n\n                \n                    \n                            UI driven method moving the user back a month\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            monthClasses\n                            \n                            \n                        \n                    \n                \n                \n                    \nmonthClasses(day: Date)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/calendar/calendar.ts:146\n                            \n                        \n\n\n                \n                    \n                            Utility method to generate the formatting classes for dates, in regards to the month they are in\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        day\n                                                        \n                                                                    Date\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the date to generate classes for\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     { 'last-month': boolean; 'next-month': boolean; }\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            number\n                            \n                            \n                        \n                    \n                \n                \n                    \nnumber(events: literal type, date: Date)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/calendar/calendar.ts:159\n                            \n                        \n\n\n                \n                    \n                            Gets the number of events on a day\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        events\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the list of all events, sorted by event date\n\n                                                        \n                                                \n                                                \n                                                        date\n                                                        \n                                                                    Date\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the date to search for\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            trigger\n                            \n                            \n                        \n                    \n                \n                \n                    \ntrigger(day: Date)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/calendar/calendar.ts:138\n                            \n                        \n\n\n                \n                    \n                            Triggers an output event when the user selects a day in the UI\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        day\n                                                        \n                                                                    Date\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the selected day\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            calendarDays\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        calendarDays:     Date[]\n\n                    \n                \n                    \n                        \n                            Type :     Date[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/components/calendar/calendar.ts:52\n                            \n                        \n\n                \n                    \n                        All the dates fitting on the current calendar window, joined together\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentMonth\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentMonth:     String\n\n                    \n                \n                    \n                        \n                            Type :     String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/components/calendar/calendar.ts:62\n                            \n                        \n\n                \n                    \n                        The name of the current month\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentYear\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentYear:     Number\n\n                    \n                \n                    \n                        \n                            Type :     Number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/components/calendar/calendar.ts:67\n                            \n                        \n\n                \n                    \n                        The current year\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            date\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        date:     Date\n\n                    \n                \n                    \n                        \n                            Type :     Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/components/calendar/calendar.ts:32\n                            \n                        \n\n                \n                    \n                        A date in the month selected, defaults to today, but is offset by months\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            daysInLastMonth\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        daysInLastMonth:     Date[]\n\n                    \n                \n                    \n                        \n                            Type :     Date[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/components/calendar/calendar.ts:42\n                            \n                        \n\n                \n                    \n                        All the dates that would fit on the calendar in the previous month\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            daysInNextMonth\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        daysInNextMonth:     Date[]\n\n                    \n                \n                    \n                        \n                            Type :     Date[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/components/calendar/calendar.ts:47\n                            \n                        \n\n                \n                    \n                        All the dates in the next month that would fit in the calendar\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            daysInThisMonth\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        daysInThisMonth:     Date[]\n\n                    \n                \n                    \n                        \n                            Type :     Date[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/components/calendar/calendar.ts:37\n                            \n                        \n\n                \n                    \n                        All the dates in the current month\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            monthNames\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        monthNames:     String[]\n\n                    \n                \n                    \n                        \n                            Type :     String[]\n\n                        \n                    \n                    \n                        \n                            Default value : ['January','February','March','April','May','June','July','August','September','October','November','December']\n                        \n                    \n                        \n                            \n                                    Defined in src/components/calendar/calendar.ts:57\n                            \n                        \n\n                \n                    \n                        The names of all the months\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            today\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        today:     Date\n\n                    \n                \n                    \n                        \n                            Type :     Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/components/calendar/calendar.ts:27\n                            \n                        \n\n                \n                    \n                        The current day\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Output, EventEmitter, Input } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\n\n/**\n* A component that allows a user to browse events in a calendar view\n*/\n@Component({\n  selector: 'calendar',\n  templateUrl: 'calendar.html'\n})\nexport class CalendarComponent {\n\n  /**\n   * All the events that you want to display\n   */\n  @Input() events: {[date: string]: Event[]};\n  \n  /**\n   * Allows a parent component to react when a date is selected\n   */\n  @Output() select: EventEmitter = new EventEmitter();\n\n\n  /**\n   * The current day\n   */\n  today: Date\n  \n  /**\n   * A date in the month selected, defaults to today, but is offset by months\n  */\n  date: Date;\n\n  /**\n   * All the dates in the current month\n   */\n  daysInThisMonth: Date[];\n\n  /**\n   * All the dates that would fit on the calendar in the previous month\n   */\n  daysInLastMonth: Date[];\n\n  /**\n   * All the dates in the next month that would fit in the calendar\n   */\n  daysInNextMonth: Date[];\n\n  /**\n   * All the dates fitting on the current calendar window, joined together\n   */\n  calendarDays: Date[];\n\n  /**\n   * The names of all the months\n   */\n  static readonly monthNames: String[] = ['January','February','March','April','May','June','July','August','September','October','November','December'];\n  \n  /**\n   * The name of the current month\n   */\n  currentMonth: String;\n\n  /**\n   * The current year\n   */\n  currentYear: Number;\n  \n  constructor() {\n    this.today = new Date();\n    this.today = new Date(this.today.getFullYear(), this.today.getMonth(), this.today.getDate());\n    this.date = new Date(this.today);\n    this.getDaysOfMonth();\n  }\n\n  /**\n   * Sets up all the date arrays based on the date field\n   */\n  getDaysOfMonth(): void {\n    this.daysInThisMonth = new Array();\n    this.daysInLastMonth = new Array();\n    this.daysInNextMonth = new Array();\n    this.currentMonth = CalendarComponent.monthNames[this.date.getMonth()];\n    this.currentYear = this.date.getFullYear();\n\n    const makeDate = (baseDate, date) => {\n      let day = new Date(baseDate);\n      day.setDate(date);\n      return day;\n    }\n  \n    let firstWeekdayThisMonth = new Date(this.date.getFullYear(), this.date.getMonth(), 1).getDay();\n    let lastMonth = new Date(this.date.getFullYear(), this.date.getMonth(), 0);\n    let prevNumOfDays = lastMonth.getDate();\n    for(let i = prevNumOfDays-(firstWeekdayThisMonth-1); i  this.date\n    }\n  }\n\n  /**\n   * Gets the number of events on a day\n   * @param events the list of all events, sorted by event date\n   * @param date the date to search for\n   */\n  number(events: {[date: string]: Event[]}, date: Date): string {\n    if(events && events[date.toDateString()]){\n      return events[date.toDateString()].length + ' events';\n    }\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      \n      {{currentMonth}} {{currentYear}}\n      \n    \n  \n  \n    \n      \n        Sun\n        Mon\n        Tue\n        Wed\n        Thu\n        Fri\n        Sat\n      \n      \n        \n          {{day.getDate()}}\n          \n          {{ number(events, day) }}\n        \n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  {{currentMonth}} {{currentYear}}                                Sun        Mon        Tue        Wed        Thu        Fri        Sat                              {{day.getDate()}}                    {{ number(events, day) }}                    '\n    var COMPONENTS = [{'name': 'CalendarComponent', 'selector': 'calendar'},{'name': 'DeviceInfoPage', 'selector': 'page-device-info'},{'name': 'EventDatePage', 'selector': 'page-event-date'},{'name': 'EventInfoPage', 'selector': 'page-event-info'},{'name': 'EventItemComponent', 'selector': 'event-item'},{'name': 'EventsPage', 'selector': 'page-events'},{'name': 'HomePage', 'selector': 'page-home'},{'name': 'LoginModal', 'selector': 'page-login-modal'},{'name': 'LoginPage', 'selector': 'page-login'},{'name': 'MyApp', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CalendarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ComponentsModule.html":{"url":"modules/ComponentsModule.html","title":"module - ComponentsModule","body":"\n                   \n\n\n\n\n    Modules\n    ComponentsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ComponentsModule\n\n\n\ncluster_ComponentsModule_declarations\n\n\n\ncluster_ComponentsModule_exports\n\n\n\n\nCalendarComponent\n\nCalendarComponent\n\n\n\nComponentsModule\n\nComponentsModule\n\nComponentsModule -->\n\nCalendarComponent->ComponentsModule\n\n\n\n\n\nEventItemComponent\n\nEventItemComponent\n\nComponentsModule -->\n\nEventItemComponent->ComponentsModule\n\n\n\n\n\nCalendarComponent \n\nCalendarComponent \n\nCalendarComponent  -->\n\nComponentsModule->CalendarComponent \n\n\n\n\n\nEventItemComponent \n\nEventItemComponent \n\nEventItemComponent  -->\n\nComponentsModule->EventItemComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/components/components.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CalendarComponent\n                        \n                        \n                            EventItemComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CalendarComponent\n                        \n                        \n                            EventItemComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CalendarComponent } from './calendar/calendar';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from 'ionic-angular';\nimport { EventItemComponent } from './event-item/event-item';\n\n@NgModule({\n\tdeclarations: [\n\t\tCalendarComponent,\n    \tEventItemComponent\n\t],\n\timports: [\n\t\tCommonModule,\n\t\tIonicModule\n\t],\n\texports: [\n\t\tCalendarComponent,\n    \tEventItemComponent\n\t]\n})\nexport class ComponentsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Device.html":{"url":"classes/Device.html","title":"class - Device","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Device\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/device.ts\n        \n\n            \n                Description\n            \n            \n                Model representing a device, as would be shown on the main map\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                owner\n                            \n                            \n                                    Public\n                                purpose\n                            \n                            \n                                    Public\n                                    Optional\n                                thumbnail\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/device.ts:9\n                            \n                        \n\n                \n                    \n                        The name of the device\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            owner\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        owner:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/device.ts:14\n                            \n                        \n\n                \n                    \n                        The key of the owning organization\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            purpose\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        purpose:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/device.ts:19\n                            \n                        \n\n                \n                    \n                        The purpose for this device - e.g. what does it do\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            thumbnail\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        thumbnail:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/device.ts:25\n                            \n                        \n\n                \n                    \n                        A potential link to the thumbnail of the device\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export default class Device {\n    \n    /**\n     * The name of the device\n     */\n    public name: string;\n    \n    /**\n     * The key of the owning organization\n     */\n    public owner: string;\n    \n    /**\n     * The purpose for this device - e.g. what does it do\n     */\n    public purpose: string;\n    \n    /**\n     * A potential link to the thumbnail of the device\n     */\n    //TODO\n    public thumbnail?: string;\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DeviceInfoPage.html":{"url":"components/DeviceInfoPage.html","title":"component - DeviceInfoPage","body":"\n                   \n\n\n\n\n\n  Components\n  DeviceInfoPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/pages/device-info/device-info.ts\n\n\n    \n        Description\n    \n    \n        Page showing more information about the selected device on the map\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                page-device-info\n            \n\n\n\n\n            \n                templateUrl\n                device-info.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                device$\n                            \n                            \n                                    Private\n                                key\n                            \n                            \n                                    Public\n                                navCtrl\n                            \n                            \n                                    Public\n                                navParams\n                            \n                            \n                                    Private\n                                owner_key\n                            \n                            \n                                    Private\n                                owner$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(navCtrl: NavController, navParams: NavParams, firebaseDatabase: FirebaseDatabaseProvider)\n                    \n                \n                        \n                            \n                                Defined in src/pages/device-info/device-info.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        navCtrl\n                                                  \n                                                        \n                                                                    NavController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        navParams\n                                                  \n                                                        \n                                                                    NavParams\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        firebaseDatabase\n                                                  \n                                                        \n                                                                    FirebaseDatabaseProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            device$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        device$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/device-info/device-info.ts:36\n                            \n                        \n\n                \n                    \n                        The observable getting the most up-to-date information about the device\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            key\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        key:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/pages/device-info/device-info.ts:26\n                            \n                        \n\n                \n                    \n                        The key used to identify this device\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            navCtrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        navCtrl:     NavController\n\n                    \n                \n                    \n                        \n                            Type :     NavController\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/device-info/device-info.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            navParams\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        navParams:     NavParams\n\n                    \n                \n                    \n                        \n                            Type :     NavParams\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/device-info/device-info.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            owner_key\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        owner_key:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/device-info/device-info.ts:31\n                            \n                        \n\n                \n                    \n                        The key used to identify the owning organization\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            owner$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        owner$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/device-info/device-info.ts:41\n                            \n                        \n\n                \n                    \n                        THe observable getting the most up-to-date information about the organization\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\nimport { FirebaseDatabaseProvider } from '../../providers/firebase-database/firebase-database';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/concatMap';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/distinctUntilChanged';\nimport Organization from '../../models/organization';\nimport Device from '../../models/device';\nimport { Subject } from 'rxjs/Subject';\nimport { TitleCasePipe } from '@angular/common';\n\n/**\n * Page showing more information about the selected device on the map\n */\n@IonicPage()\n@Component({\n  selector: 'page-device-info',\n  templateUrl: 'device-info.html',\n})\nexport class DeviceInfoPage {\n\n  /**\n   * The key used to identify this device\n   */\n  private key;\n\n  /**\n   * The key used to identify the owning organization\n   */\n  private owner_key: string;\n\n  /**\n   * The observable getting the most up-to-date information about the device\n   */\n  private device$: Observable = null;\n\n  /**\n   * THe observable getting the most up-to-date information about the organization\n   */\n  private owner$: Observable = null;\n  \n  \n  constructor(public navCtrl: NavController, public navParams: NavParams, private firebaseDatabase: FirebaseDatabaseProvider) {\n    this.key = navParams.get(\"key\");\n    \n    //TODO should observables be inited in constructor or in view will load\n    this.device$ = this.firebaseDatabase.getDevice(this.key);\n    this.owner$ = this.device$.map((device : Device) => device.owner).distinctUntilChanged().concatMap((key) => {\n      this.owner_key = key;\n      return this.firebaseDatabase.getOrganization(key);\n    });\n  }\n  \n}\n\n    \n\n    \n        \n\n  \n  \n    DeviceInfo\n  \n  \n\n\n\n\n  \n    {{device | json}}\n    Name:\n    {{device.name}}\n    Type:\n    {{device.type}}\n    Purpose:\n    {{device.purpose}}\n  \n  \n    {{owner | json}}\n    Owned by:\n    {{owner.name}}\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        DeviceInfo          {{device | json}}    Name:    {{device.name}}    Type:    {{device.type}}    Purpose:    {{device.purpose}}        {{owner | json}}    Owned by:    {{owner.name}}  '\n    var COMPONENTS = [{'name': 'CalendarComponent', 'selector': 'calendar'},{'name': 'DeviceInfoPage', 'selector': 'page-device-info'},{'name': 'EventDatePage', 'selector': 'page-event-date'},{'name': 'EventInfoPage', 'selector': 'page-event-info'},{'name': 'EventItemComponent', 'selector': 'event-item'},{'name': 'EventsPage', 'selector': 'page-events'},{'name': 'HomePage', 'selector': 'page-home'},{'name': 'LoginModal', 'selector': 'page-login-modal'},{'name': 'LoginPage', 'selector': 'page-login'},{'name': 'MyApp', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DeviceInfoPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Event.html":{"url":"classes/Event.html","title":"class - Event","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Event\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/event.ts\n        \n\n            \n                Description\n            \n            \n                Model representing an event\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                endDate\n                            \n                            \n                                endTime\n                            \n                            \n                                key\n                            \n                            \n                                owner\n                            \n                            \n                                startDate\n                            \n                            \n                                startTime\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                compare\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            endDate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        endDate:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/event.ts:33\n                            \n                        \n\n                \n                    \n                        The ending date of the event\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            endTime\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        endTime:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/event.ts:38\n                            \n                        \n\n                \n                    \n                        The ending time of the event\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            key\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        key:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/event.ts:8\n                            \n                        \n\n                \n                    \n                        The id / key of the event\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            owner\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        owner:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/event.ts:18\n                            \n                        \n\n                \n                    \n                        The key of the owning organization of the event\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            startDate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        startDate:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/event.ts:23\n                            \n                        \n\n                \n                    \n                        The starting date of the event, as obtained by Date.toDateString(), e.g. 'Tue Nov 9 XXXX'\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            startTime\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        startTime:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/event.ts:28\n                            \n                        \n\n                \n                    \n                        The starting time of the event as obtained by Date.toTimeString()\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/event.ts:13\n                            \n                        \n\n                \n                    \n                        The title of the event\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            compare\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        compare(one: Event, two: Event)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/models/event.ts:45\n                            \n                        \n\n\n                \n                    \n                            Comparison function for two events, sorting by date\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        one\n                                                        \n                                                                    Event\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the first event\n\n                                                        \n                                                \n                                                \n                                                        two\n                                                        \n                                                                    Event\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the second event\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export class Event {\n    /**\n     * The id / key of the event\n     */\n    key: string;\n\n    /**\n     * The title of the event\n     */\n    title: string;\n\n    /**\n     * The key of the owning organization of the event\n     */\n    owner: string;\n\n    /**\n     * The starting date of the event, as obtained by Date.toDateString(), e.g. 'Tue Nov 9 XXXX'\n     */\n    startDate: string;\n\n    /**\n     * The starting time of the event as obtained by Date.toTimeString()\n     */\n    startTime: string;\n    \n    /**\n     * The ending date of the event\n     */\n    endDate: string;\n\n    /**\n     * The ending time of the event\n     */\n    endTime: string;\n\n    /**\n     * Comparison function for two events, sorting by date\n     * @param one the first event\n     * @param two the second event\n     */\n    static compare(one: Event, two: Event): number {\n        let diff = new Date(one.startDate + \" \" + one.startTime).valueOf() - new Date(two.startDate + \" \" + two.startTime).valueOf();\n        if(!diff)\n            return new Date(one.endDate + \" \" + one.endTime).valueOf() - new Date(two.endDate + \" \" + two.endTime).valueOf();\n        return diff;\n    }\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EventDatePage.html":{"url":"components/EventDatePage.html","title":"component - EventDatePage","body":"\n                   \n\n\n\n\n\n  Components\n  EventDatePage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/pages/event-date/event-date.ts\n\n\n    \n        Description\n    \n    \n        A page showing all the events on a given date\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                page-event-date\n            \n\n\n\n\n            \n                templateUrl\n                event-date.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _range\n                            \n                            \n                                date\n                            \n                            \n                                events\n                            \n                            \n                                filtered\n                            \n                            \n                                getFormattedDate\n                            \n                            \n                                    Public\n                                navCtrl\n                            \n                            \n                                    Public\n                                navParams\n                            \n                            \n                                range\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ionViewWillLeave\n                            \n                            \n                                ionViewWillLoad\n                            \n                            \n                                rangeChange\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(navCtrl: NavController, navParams: NavParams, geofire: GeofireProvider)\n                    \n                \n                        \n                            \n                                Defined in src/pages/event-date/event-date.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        navCtrl\n                                                  \n                                                        \n                                                                    NavController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        navParams\n                                                  \n                                                        \n                                                                    NavParams\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        geofire\n                                                  \n                                                        \n                                                                    GeofireProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ionViewWillLeave\n                            \n                            \n                        \n                    \n                \n                \n                    \nionViewWillLeave()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/pages/event-date/event-date.ts:76\n                            \n                        \n\n\n                \n                    \n                            When leaving, clear the observables\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ionViewWillLoad\n                            \n                            \n                        \n                    \n                \n                \n                    \nionViewWillLoad()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/pages/event-date/event-date.ts:60\n                            \n                        \n\n\n                \n                    \n                            Before the page is shown to the user, get the observables\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rangeChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nrangeChange(value: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/pages/event-date/event-date.ts:52\n                            \n                        \n\n\n                \n                    \n                            Method called by the frontend when the range is changed\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                new value of the range selector\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _range\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _range:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/event-date/event-date.ts:31\n                            \n                        \n\n                \n                    \n                        The range of events to display, selected by the user, as an observable\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            date\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        date:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/event-date/event-date.ts:21\n                            \n                        \n\n                \n                    \n                        The selected date\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            events\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        events:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/event-date/event-date.ts:36\n                            \n                        \n\n                \n                    \n                        An observable containing events within a given range of the user\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filtered\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        filtered:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/event-date/event-date.ts:41\n                            \n                        \n\n                \n                    \n                        An observable limiting the list of events to only those happening on the same day\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getFormattedDate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        getFormattedDate:     \n\n                    \n                \n                    \n                        \n                            Default value : (): string => {\n    return this.date.split(' ').splice(1).join(' ');\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/event-date/event-date.ts:84\n                            \n                        \n\n                \n                    \n                        Convert the date from 'Tue Nov 9 XXXX' to just 'Nov 9 XXXX'\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            navCtrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        navCtrl:     NavController\n\n                    \n                \n                    \n                        \n                            Type :     NavController\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/event-date/event-date.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            navParams\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        navParams:     NavParams\n\n                    \n                \n                    \n                        \n                            Type :     NavParams\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/event-date/event-date.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            range\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        range:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 5\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/event-date/event-date.ts:26\n                            \n                        \n\n                \n                    \n                        The range of events to display, selected by the user\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\nimport { GeofireProvider, GeoItem } from '../../providers/geofire/geofire';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Observable';\nimport { Event } from '../../models/event';\n\n/**\n* A page showing all the events on a given date\n*/\n@IonicPage()\n@Component({\n  selector: 'page-event-date',\n  templateUrl: 'event-date.html',\n})\nexport class EventDatePage {\n  \n  /**\n   * The selected date\n   */\n  date: string;\n  \n  /**\n   * The range of events to display, selected by the user\n   */\n  range: number = 5;\n\n  /**\n   * The range of events to display, selected by the user, as an observable\n   */\n  private _range: Subject = new Subject();\n\n  /**\n   * An observable containing events within a given range of the user\n   */\n  events: Observable}>;\n\n  /**\n   * An observable limiting the list of events to only those happening on the same day\n   */\n  filtered: Observable[]>;\n  \n  constructor(public navCtrl: NavController, public navParams: NavParams, private geofire: GeofireProvider) {\n    this.date = navParams.get('date');\n    this.range = +navParams.get('range');\n  }\n  \n  /**\n   * Method called by the frontend when the range is changed\n   * @param value new value of the range selector\n   */\n  rangeChange(value: number){\n    this.range = +value;\n    this._range.next(value);\n  }\n  \n  /**\n   * Before the page is shown to the user, get the observables\n   */\n  ionViewWillLoad() {\n    this.events = this.geofire.getNearbyGeoEvents(this.range, this._range);\n    this.filtered = this.events.map((events) => {\n      let dates: GeoItem[] = [];\n      for(const key in events){\n        if(events[key][0].startDate == this.date){\n          dates.push(events[key]);\n        }\n      }\n      return dates;\n    });\n  }\n\n  /**\n   * When leaving, clear the observables\n   */\n  ionViewWillLeave(){\n    this.events = null;\n  }\n\n  /**\n   * Convert the date from 'Tue Nov 9 XXXX' to just 'Nov 9 XXXX'\n   * @returns the new date\n   */\n  getFormattedDate = (): string => {\n    return this.date.split(' ').splice(1).join(' ');\n  }\n  \n}\n\n    \n\n    \n        \n\n  \n  \n    Events on {{getFormattedDate()}}\n  \n  \n\n\n\n  \n    Range\n    \n      5 Miles\n      10 Miles\n      20 Miles\n      50 Miles\n    \n  \n  \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        Events on {{getFormattedDate()}}          Range          5 Miles      10 Miles      20 Miles      50 Miles              '\n    var COMPONENTS = [{'name': 'CalendarComponent', 'selector': 'calendar'},{'name': 'DeviceInfoPage', 'selector': 'page-device-info'},{'name': 'EventDatePage', 'selector': 'page-event-date'},{'name': 'EventInfoPage', 'selector': 'page-event-info'},{'name': 'EventItemComponent', 'selector': 'event-item'},{'name': 'EventsPage', 'selector': 'page-events'},{'name': 'HomePage', 'selector': 'page-home'},{'name': 'LoginModal', 'selector': 'page-login-modal'},{'name': 'LoginPage', 'selector': 'page-login'},{'name': 'MyApp', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EventDatePage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EventInfoPage.html":{"url":"components/EventInfoPage.html","title":"component - EventInfoPage","body":"\n                   \n\n\n\n\n\n  Components\n  EventInfoPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/pages/event-info/event-info.ts\n\n\n    \n        Description\n    \n    \n        A page showing more detailed information about an event\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                page-event-info\n            \n\n\n\n\n            \n                templateUrl\n                event-info.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                event$\n                            \n                            \n                                    Public\n                                navCtrl\n                            \n                            \n                                    Public\n                                navParams\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ionViewDidLoad\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(navCtrl: NavController, navParams: NavParams, firebase: FirebaseDatabaseProvider)\n                    \n                \n                        \n                            \n                                Defined in src/pages/event-info/event-info.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        navCtrl\n                                                  \n                                                        \n                                                                    NavController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        navParams\n                                                  \n                                                        \n                                                                    NavParams\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        firebase\n                                                  \n                                                        \n                                                                    FirebaseDatabaseProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ionViewDidLoad\n                            \n                            \n                        \n                    \n                \n                \n                    \nionViewDidLoad()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/pages/event-info/event-info.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            event$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        event$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/event-info/event-info.ts:20\n                            \n                        \n\n                \n                    \n                        The observable tracking changes to the selected observable\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            navCtrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        navCtrl:     NavController\n\n                    \n                \n                    \n                        \n                            Type :     NavController\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/event-info/event-info.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            navParams\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        navParams:     NavParams\n\n                    \n                \n                    \n                        \n                            Type :     NavParams\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/event-info/event-info.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\nimport { FirebaseDatabaseProvider } from '../../providers/firebase-database/firebase-database';\nimport { Event } from '../../models/event';\nimport { Observable } from 'rxjs/Observable';\n\n/**\n * A page showing more detailed information about an event\n */\n@IonicPage()\n@Component({\n  selector: 'page-event-info',\n  templateUrl: 'event-info.html',\n})\nexport class EventInfoPage {\n\n  /**\n   * The observable tracking changes to the selected observable\n   */\n  event$: Observable;\n  \n  constructor(public navCtrl: NavController, public navParams: NavParams, private firebase: FirebaseDatabaseProvider) {\n    this.event$ = firebase.getEvent(navParams.get('event'));\n  }\n  \n  ionViewDidLoad() {\n  }\n  \n}\n\n    \n\n    \n        \n\n\n  \n    {{(event$ | async).title}}\n  \n\n\n\n\n\n  {{event$ | async | json}}\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{(event$ | async).title}}    {{event$ | async | json}}'\n    var COMPONENTS = [{'name': 'CalendarComponent', 'selector': 'calendar'},{'name': 'DeviceInfoPage', 'selector': 'page-device-info'},{'name': 'EventDatePage', 'selector': 'page-event-date'},{'name': 'EventInfoPage', 'selector': 'page-event-info'},{'name': 'EventItemComponent', 'selector': 'event-item'},{'name': 'EventsPage', 'selector': 'page-events'},{'name': 'HomePage', 'selector': 'page-home'},{'name': 'LoginModal', 'selector': 'page-login-modal'},{'name': 'LoginPage', 'selector': 'page-login'},{'name': 'MyApp', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EventInfoPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EventItemComponent.html":{"url":"components/EventItemComponent.html","title":"component - EventItemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EventItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/components/event-item/event-item.ts\n\n\n    \n        Description\n    \n    \n        An item showing a brief bit of information about an event\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                event-item\n            \n\n\n\n\n            \n                templateUrl\n                event-item.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                selected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                event\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(navCtrl: NavController)\n                    \n                \n                        \n                            \n                                Defined in src/components/event-item/event-item.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        navCtrl\n                                                  \n                                                        \n                                                                    NavController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        event\n                    \n                    \n                        The event, containing the distance it is from the user's location\n\n                            \n                            Type :    GeoItem\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/components/event-item/event-item.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selected\n                            \n                            \n                        \n                    \n                \n                \n                    \nselected()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/event-item/event-item.ts:26\n                            \n                        \n\n\n                \n                    \n                            When selected, launch the user into a more descriptive page about the event\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { NavController } from 'ionic-angular';\nimport { EventInfoPage } from '../../pages/event-info/event-info';\nimport { Event } from '../../models/event';\nimport { GeoItem } from '../../providers/geofire/geofire';\n\n/**\n * An item showing a brief bit of information about an event\n */\n@Component({\n  selector: 'event-item',\n  templateUrl: 'event-item.html'\n})\nexport class EventItemComponent {\n  /**\n   * The event, containing the distance it is from the user's location\n   */\n  @Input() event: GeoItem;\n\n  constructor(private navCtrl: NavController) {\n  }\n\n  /**\n   * When selected, launch the user into a more descriptive page about the event\n   */\n  selected(){\n    this.navCtrl.push(EventInfoPage, { event: this.event[0].key });\n  }\n\n}\n\n    \n\n    \n        \n  {{event[0].title}}\n  {{1.6 * event[2]}} miles away\n  {{event | json}}\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{event[0].title}}  {{1.6 * event[2]}} miles away  {{event | json}}'\n    var COMPONENTS = [{'name': 'CalendarComponent', 'selector': 'calendar'},{'name': 'DeviceInfoPage', 'selector': 'page-device-info'},{'name': 'EventDatePage', 'selector': 'page-event-date'},{'name': 'EventInfoPage', 'selector': 'page-event-info'},{'name': 'EventItemComponent', 'selector': 'event-item'},{'name': 'EventsPage', 'selector': 'page-events'},{'name': 'HomePage', 'selector': 'page-home'},{'name': 'LoginModal', 'selector': 'page-login-modal'},{'name': 'LoginPage', 'selector': 'page-login'},{'name': 'MyApp', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EventItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EventsPage.html":{"url":"components/EventsPage.html","title":"component - EventsPage","body":"\n                   \n\n\n\n\n\n  Components\n  EventsPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/pages/events/events.ts\n\n\n    \n        Description\n    \n    \n        Generated class for the EventsPage page.\nSee https://ionicframework.com/docs/components/#navigation for more info on\nIonic pages and navigation.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                page-events\n            \n\n\n\n\n            \n                templateUrl\n                events.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _range\n                            \n                            \n                                events\n                            \n                            \n                                mapped\n                            \n                            \n                                    Public\n                                navCtrl\n                            \n                            \n                                    Public\n                                navParams\n                            \n                            \n                                range\n                            \n                            \n                                sorted\n                            \n                            \n                                view\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ionViewWillEnter\n                            \n                            \n                                ionViewWillLeave\n                            \n                            \n                                rangeChange\n                            \n                            \n                                selectedDate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(navCtrl: NavController, navParams: NavParams, geofire: GeofireProvider)\n                    \n                \n                        \n                            \n                                Defined in src/pages/events/events.ts:58\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        navCtrl\n                                                  \n                                                        \n                                                                    NavController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        navParams\n                                                  \n                                                        \n                                                                    NavParams\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        geofire\n                                                  \n                                                        \n                                                                    GeofireProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ionViewWillEnter\n                            \n                            \n                        \n                    \n                \n                \n                    \nionViewWillEnter()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/pages/events/events.ts:76\n                            \n                        \n\n\n                \n                    \n                            Before the view is about to be shown, prepare the relevant observables\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ionViewWillLeave\n                            \n                            \n                        \n                    \n                \n                \n                    \nionViewWillLeave()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/pages/events/events.ts:101\n                            \n                        \n\n\n                \n                    \n                            Clear the relevant observables\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rangeChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nrangeChange(value: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/pages/events/events.ts:68\n                            \n                        \n\n\n                \n                    \n                            Method bound to the UI to update whenever a range is selected\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the new value\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedDate\n                            \n                            \n                        \n                    \n                \n                \n                    \nselectedDate(date: Date)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/pages/events/events.ts:110\n                            \n                        \n\n\n                \n                    \n                            Open up the list of events on the date that was selected\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        date\n                                                        \n                                                                    Date\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the date that was selected\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _range\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _range:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/events/events.ts:38\n                            \n                        \n\n                \n                    \n                        The range, expressed as a Subject to pass along values to the nearby events\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            events\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        events:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/events/events.ts:48\n                            \n                        \n\n                \n                    \n                        All the events within range of the user, associated with their key/id\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mapped\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mapped:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/events/events.ts:53\n                            \n                        \n\n                \n                    \n                        All the events within range of the user, mapped to the date they start on\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            navCtrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        navCtrl:     NavController\n\n                    \n                \n                    \n                        \n                            Type :     NavController\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/events/events.ts:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            navParams\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        navParams:     NavParams\n\n                    \n                \n                    \n                        \n                            Type :     NavParams\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/events/events.ts:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            range\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        range:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 5\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/events/events.ts:33\n                            \n                        \n\n                \n                    \n                        The range, as set by the dropdown menu\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sorted\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sorted:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/events/events.ts:58\n                            \n                        \n\n                \n                    \n                        All the events within range and after this moment, in sorted order\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            view\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        view:     String\n\n                    \n                \n                    \n                        \n                            Type :     String\n\n                        \n                    \n                    \n                        \n                            Default value : 'month'\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/events/events.ts:43\n                            \n                        \n\n                \n                    \n                        The current view of the calendar selected\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\nimport { EventDatePage } from '../event-date/event-date';\nimport { GeofireProvider, GeoItem } from '../../providers/geofire/geofire';\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\nimport { Event } from '../../models/event';\n\nimport 'rxjs/add/observable/defer';\nimport 'rxjs/add/operator/delay';\nimport 'rxjs/add/operator/share';\nimport 'rxjs/add/operator/switchMap';\nimport { FirebaseDatabaseProvider } from '../../providers/firebase-database/firebase-database';\nimport { _createNgProbe } from '@angular/platform-browser/src/dom/debug/ng_probe';\n\n/**\n* Generated class for the EventsPage page.\n*\n* See https://ionicframework.com/docs/components/#navigation for more info on\n* Ionic pages and navigation.\n*/\n\n@IonicPage()\n@Component({\n  selector: 'page-events',\n  templateUrl: 'events.html',\n})\nexport class EventsPage {\n  \n  /**\n   * The range, as set by the dropdown menu\n   */\n  range: number = 5;\n\n  /**\n   * The range, expressed as a Subject to pass along values to the nearby events\n   */\n  private _range: Subject = new Subject();\n\n  /**\n   * The current view of the calendar selected\n   */\n  view: String = 'month';\n  \n  /**\n   * All the events within range of the user, associated with their key/id\n   */\n  events: Observable;\n\n  /**\n   * All the events within range of the user, mapped to the date they start on\n   */\n  mapped: Observable;\n\n  /**\n   * All the events within range and after this moment, in sorted order\n   */\n  sorted: Observable[]>;\n  \n  constructor(public navCtrl: NavController, public navParams: NavParams, private geofire: GeofireProvider) {\n    this._range.next(this.range);\n  }\n  \n  /**\n   * Method bound to the UI to update whenever a range is selected\n   * @param value the new value\n   */\n  rangeChange(value: number){\n    this.range = value;\n    this._range.next(value);\n  }\n  \n  /**\n   * Before the view is about to be shown, prepare the relevant observables\n   */\n  ionViewWillEnter() {\n    this.mapped = this.geofire.getNearbyEvents(+this.range, this._range).map((events) => {\n      let dates: {[date: string] : Event[]} = {};\n      for(const key in events){\n        let arr = dates[events[key].startDate] || [];\n        arr.push(events[key]);\n        dates[events[key].startDate] = arr;\n      }\n      return dates;\n    });\n    this.sorted = this.geofire.getNearbyGeoEvents(+this.range, this._range).map((events) => {\n      let arr: GeoItem[] = [];\n      for(const key in events){\n        let event = events[key];\n        if(new Date() > new Date(event[0].startDate + \" \" + event[0].startTime)){\n          arr.push(event);\n        }\n      }\n      return arr.sort((one, two) => Event.compare(one[0], two[0]));\n    });\n  }\n\n  /**\n   * Clear the relevant observables\n   */\n  ionViewWillLeave(){\n    this.events = null;\n    this.mapped = null;\n  }\n  \n  /**\n   * Open up the list of events on the date that was selected\n   * @param date the date that was selected\n   */\n  selectedDate(date: Date){\n    this.navCtrl.push(EventDatePage, {\n      'date': date.toDateString(),\n      'range': this.range\n    });\n  }\n  \n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    Events\n  \n\n\n\n  \n    \n      \n        View\n        \n          Month\n          Agenda\n        \n      \n    \n    \n      \n        Range\n        \n          5 Miles\n          10 Miles\n          20 Miles\n          50 Miles\n        \n      \n    \n  \n  \n    No events near you.\n  \n   \n    \n  \n   \n    \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Events                      View                  Month          Agenda                                    Range                  5 Miles          10 Miles          20 Miles          50 Miles                          No events near you.                              '\n    var COMPONENTS = [{'name': 'CalendarComponent', 'selector': 'calendar'},{'name': 'DeviceInfoPage', 'selector': 'page-device-info'},{'name': 'EventDatePage', 'selector': 'page-event-date'},{'name': 'EventInfoPage', 'selector': 'page-event-info'},{'name': 'EventItemComponent', 'selector': 'event-item'},{'name': 'EventsPage', 'selector': 'page-events'},{'name': 'HomePage', 'selector': 'page-home'},{'name': 'LoginModal', 'selector': 'page-login-modal'},{'name': 'LoginPage', 'selector': 'page-login'},{'name': 'MyApp', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EventsPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FirebaseAuthProvider.html":{"url":"injectables/FirebaseAuthProvider.html","title":"injectable - FirebaseAuthProvider","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FirebaseAuthProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/providers/firebase-auth/firebase-auth.ts\n        \n\n            \n                Description\n            \n            \n                Provider handling user logic through Firebase\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkSignedIn\n                            \n                            \n                                    Private\n                                    Static\n                                convertErrorCode\n                            \n                            \n                                newAccount\n                            \n                            \n                                setSignedIn\n                            \n                            \n                                signInAnonymously\n                            \n                            \n                                signInWithCreds\n                            \n                            \n                                signInWithGoogle\n                            \n                            \n                                signOut\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    user\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(firebaseConfig: FirebaseConfigProvider)\n                    \n                \n                        \n                            \n                                Defined in src/providers/firebase-auth/firebase-auth.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        firebaseConfig\n                                                  \n                                                        \n                                                                    FirebaseConfigProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkSignedIn\n                            \n                            \n                        \n                    \n                \n                \n                    \ncheckSignedIn()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/providers/firebase-auth/firebase-auth.ts:66\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            convertErrorCode\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        convertErrorCode(error: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/providers/firebase-auth/firebase-auth.ts:141\n                            \n                        \n\n\n                \n                    \n                            Converts the error code into a nice, human-readable string\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the error code provide from Firebase\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newAccount\n                            \n                            \n                        \n                    \n                \n                \n                    \nnewAccount(email: string, password: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/providers/firebase-auth/firebase-auth.ts:125\n                            \n                        \n\n\n                \n                    \n                            Creates a new account for the user\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the user's email\n\n                                                        \n                                                \n                                                \n                                                        password\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the user's password\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setSignedIn\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetSignedIn(method: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/providers/firebase-auth/firebase-auth.ts:101\n                            \n                        \n\n\n                \n                    \n                            Sets a session variable to save how the user had signed in\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        method\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                how the user signed in\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signInAnonymously\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignInAnonymously()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/providers/firebase-auth/firebase-auth.ts:39\n                            \n                        \n\n\n                \n                    \n                            Signs the user in anonymously\n\n\n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    Whether the result was successful\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signInWithCreds\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignInWithCreds(email: string, password: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/providers/firebase-auth/firebase-auth.ts:110\n                            \n                        \n\n\n                \n                    \n                            Signs the user in with the specified credentials\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the user's email\n\n                                                        \n                                                \n                                                \n                                                        password\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the user's password\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signInWithGoogle\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignInWithGoogle()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/providers/firebase-auth/firebase-auth.ts:56\n                            \n                        \n\n\n                \n                    \n                            Signs the user in with Google - redirecting the user\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signOut\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignOut()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/providers/firebase-auth/firebase-auth.ts:159\n                            \n                        \n\n\n                \n                    \n                            Signs the user out\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _user\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _user:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/providers/firebase-auth/firebase-auth.ts:15\n                            \n                        \n\n                \n                    \n                        A subject that subscribes to updates to the user\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        user\n                    \n                \n\n                \n                    \n                        getuser()\n                    \n                \n                            \n                                \n                                    Defined in src/providers/firebase-auth/firebase-auth.ts:24\n                                \n                            \n                    \n                        \n                                Gets the private _user, initializing it if needed\n\n\n                                \n                                    Returns :     Observable\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { FirebaseConfigProvider } from '../firebase-config/firebase-config';\nimport { Observable } from 'rxjs/Observable';\nimport firebase from 'firebase';\n\n/**\n * Provider handling user logic through Firebase\n */\n@Injectable()\nexport class FirebaseAuthProvider {\n  /**\n   * A subject that subscribes to updates to the user\n   */\n  private _user: Subject = null;\n  \n  constructor(firebaseConfig: FirebaseConfigProvider) {\n    firebaseConfig.init();\n  }\n  \n  /**\n   * Gets the private _user, initializing it if needed\n   */\n  get user(): Observable {\n    if(this._user == null){\n      this._user = new Subject();\n      this._user.next(firebase.auth().currentUser);\n      firebase.auth().onAuthStateChanged((user) => {\n        this._user.next(user);\n      });\n    }\n    return this._user;\n  }\n  \n  /**\n   * Signs the user in anonymously\n   * @returns Whether the result was successful\n   */\n  signInAnonymously(): Observable {\n    //TODO consider whether using a subject is needed or whether just using a promise is fine\n    let success: Subject = new Subject();\n    firebase.auth().signInAnonymously().catch((error) => {\n      success.next(false);\n      success.complete();\n      //TODO: handle errors\n    }).then(() => {\n      success.next(true);\n      success.complete();\n    });\n    return success.asObservable();\n  }\n  \n  /**\n   * Signs the user in with Google - redirecting the user\n   */\n  signInWithGoogle(): void {\n    this.setSignedIn(\"google\");\n    \n    var provider = new firebase.auth.GoogleAuthProvider();\n    firebase.auth().signInWithRedirect(provider);\n  }\n  \n  /**\n   * @deprecated\n   */\n  checkSignedIn() {\n    //check cookies to see if expecting a response\n    /*\n    if(window.localStorage.getItem(\"AUTH\") == \"google\"){\n      firebase.auth().getRedirectResult().then((result) => {\n        if(result != null)\n        \n        console.log(result);\n        \n        if (result.credential) {\n          // This gives you a Google Access Token. You can use it to access the Google API.\n          //var token = result.credential.accessToken;\n          // ...\n        }\n        // The signed-in user info.\n        var user = result.user;\n      }).catch((error) => {\n        console.log(\"hello\");\n        console.error(error);\n        // Handle Errors here.\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        // The email of the user's account used.\n        var email = error.email;\n        // The firebase.auth.AuthCredential type that was used.\n        var credential = error.credential;\n        // ...\n      });\n    } */\n  }\n  \n  /**\n   * Sets a session variable to save how the user had signed in\n   * @param method how the user signed in\n   */\n  setSignedIn(method : string){\n    window.localStorage.setItem(\"AUTH\", method);\n  }\n  \n  /**\n   * Signs the user in with the specified credentials\n   * @param email the user's email\n   * @param password the user's password\n   */\n  signInWithCreds(email: string, password: string): Observable {\n    let observer: Subject = new Subject();\n    firebase.auth().signInWithEmailAndPassword(email, password).then((result) =>{\n      observer.next(result);\n    }).catch((error) => {\n      observer.error(FirebaseAuthProvider.convertErrorCode(error));\n    });\n    return observer.asObservable();\n  }\n  \n  /**\n   * Creates a new account for the user\n   * @param email the user's email\n   * @param password the user's password\n   */\n  newAccount(email: string, password: string): Observable {\n    let observer: Subject = new Subject();\n    // TODO also consider whether to use the subject\n    firebase.auth().createUserWithEmailAndPassword(email, password).then((result) =>{\n      observer.next(result);\n      observer.complete();\n    }).catch((error) => {\n      observer.error(FirebaseAuthProvider.convertErrorCode(error));\n    });\n    return observer.asObservable();\n  }\n  \n  /**\n   * Converts the error code into a nice, human-readable string\n   * @param error the error code provide from Firebase\n   */\n  private static convertErrorCode(error: any): string{\n    switch(error.errorCode){\n      case 'auth/user-not-found':\n       return 'This user does not exist';\n      case 'auth/invalid-email':\n        return 'Not a valid email address';\n      case 'auth/user-disabled':\n        return 'Your account is currently disabled';\n      case 'auth/wrong-password':\n        return 'Wrong password for this account';\n      default:\n       return 'Could not complete that action';\n    }\n  }\n  \n  /**\n   * Signs the user out\n   */\n  signOut(): void {\n    firebase.auth().signOut();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FirebaseConfigProvider.html":{"url":"injectables/FirebaseConfigProvider.html","title":"injectable - FirebaseConfigProvider","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FirebaseConfigProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/providers/firebase-config/firebase-config.ts\n        \n\n            \n                Description\n            \n            \n                Provider that needs to be injected and initialized as a dependency for providers using Firebase\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                isInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/providers/firebase-config/firebase-config.ts:13\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            init\n                            \n                            \n                        \n                    \n                \n                \n                    \ninit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/providers/firebase-config/firebase-config.ts:21\n                            \n                        \n\n\n                \n                    \n                            Sets up Firebase with the user's credentials\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isInit:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/providers/firebase-config/firebase-config.ts:13\n                            \n                        \n\n                \n                    \n                        Prevents Firebase from being initialized multiple times\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport firebase from 'firebase/app';\n\n/**\n * Provider that needs to be injected and initialized as a dependency for providers using Firebase\n */\n@Injectable()\nexport class FirebaseConfigProvider {\n\n  /**\n   * Prevents Firebase from being initialized multiple times\n   */\n  private isInit = false;\n  \n  constructor() {\n  }\n  \n  /**\n   * Sets up Firebase with the user's credentials\n   */\n  init(): void {\n    if(this.isInit) return;\n    this.isInit = true;\n    const config = {\n      //FB CRED\n      apiKey: \"G_API_KEY\",\n      authDomain: \"G_AUTH_DOMAIN\",\n      databaseURL: \"G_DATABASE_URL\",\n      projectId: \"G_PROJECT_ID\",\n      storageBucket: \"G_PROJECT_ID.appspot.com\",\n      messagingSenderId: \"G_MESSAGING_SENDER_ID\"\n      //END FB CRED\n      // TODO: Replace with your project's customized code snippet\n    };\n    firebase.initializeApp(config);\n  }\n  \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FirebaseDatabaseProvider.html":{"url":"injectables/FirebaseDatabaseProvider.html","title":"injectable - FirebaseDatabaseProvider","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FirebaseDatabaseProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/providers/firebase-database/firebase-database.ts\n        \n\n            \n                Description\n            \n            \n                Injectable class giving access to the Firebase Realtime Database.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                devices\n                            \n                            \n                                    Private\n                                events\n                            \n                            \n                                    Private\n                                organizations\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDevice\n                            \n                            \n                                getDevicesLocations\n                            \n                            \n                                getEvent\n                            \n                            \n                                getEventsLocations\n                            \n                            \n                                getOrganization\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(firebaseConfig: FirebaseConfigProvider)\n                    \n                \n                        \n                            \n                                Defined in src/providers/firebase-database/firebase-database.ts:115\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        firebaseConfig\n                                                  \n                                                        \n                                                                    FirebaseConfigProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getDevice\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetDevice(key: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/providers/firebase-database/firebase-database.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the id of the device\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    An observable containing the most recent information of the device\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getDevicesLocations\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetDevicesLocations()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/providers/firebase-database/firebase-database.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                            \n                            \n                                Returns :     database.Reference\n\n                            \n                                \n                                    A reference to the devices' geofire\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getEvent\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetEvent(key: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/providers/firebase-database/firebase-database.ts:98\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the id of the event\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    An observable containing the most recent information of the event\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getEventsLocations\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetEventsLocations()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/providers/firebase-database/firebase-database.ts:30\n                            \n                        \n\n\n                \n                    \n\n                            \n                            \n                            \n                                Returns :     database.Reference\n\n                            \n                                \n                                    A reference to the events' geofire\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getOrganization\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetOrganization(key: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/providers/firebase-database/firebase-database.ts:71\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the id of the organization\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    An observable containing the most recent information of the organization\n\n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            devices\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        devices:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/providers/firebase-database/firebase-database.ts:37\n                            \n                        \n\n                \n                    \n                        Internal tracker of whether an observable has been created for a particular device\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            events\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        events:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/providers/firebase-database/firebase-database.ts:91\n                            \n                        \n\n                \n                    \n                        Internal tracker of whether an observable has been created for a particular event\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            organizations\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizations:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/providers/firebase-database/firebase-database.ts:64\n                            \n                        \n\n                \n                    \n                        Internal tracker of whether an observable has been created for a particular organization\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { database } from 'firebase';\nimport { FirebaseConfigProvider } from '../firebase-config/firebase-config';\nimport firebase from 'firebase';\nimport { Subject } from 'rxjs/Subject';\nimport Organization from '../../models/organization';\nimport Device from '../../models/device';\nimport { Observable } from 'rxjs/Observable';\nimport { Event } from '../../models/event';\nimport { Observer } from 'rxjs/Observer';\nimport { TeardownLogic } from 'rxjs/Subscription';\nimport 'rxjs/add/operator/shareReplay';\n\n/**\n * Injectable class giving access to the Firebase Realtime Database.\n */\n@Injectable()\nexport class FirebaseDatabaseProvider {\n  \n  /**\n   * @returns A reference to the devices' geofire\n   */\n  getDevicesLocations(): database.Reference {\n    return firebase.database().ref('/devices/locations');\n  }\n\n  /**\n   * @returns A reference to the events' geofire\n   */\n  getEventsLocations(): database.Reference {\n    return firebase.database().ref('/events/locations');\n  }\n  \n  /**\n   * Internal tracker of whether an observable has been created for a particular device\n   */\n  private devices: { [key: string] : Observable } = {};\n  \n  /**\n   * \n   * @param {string} key the id of the device\n   * @returns An observable containing the most recent information of the device\n   */\n  getDevice(key: string): Observable {\n    if(!this.devices[key]){\n      let generator = (observer: Observer): TeardownLogic => {\n        let callback = (value: database.DataSnapshot) => {\n          observer.next(value.val());\n        };\n        firebase.database().ref('/devices/metadata/' + key).on('value', callback);\n        return () => {\n          firebase.database().ref('/devices/metadata/' + key).off('value', callback);\n        };\n      };\n      let newObservable: Observable = Observable.create(generator).share();\n      this.devices[key] = newObservable;\n    }\n    return this.devices[key];\n  }\n  \n  /**\n   * Internal tracker of whether an observable has been created for a particular organization\n   */\n  private organizations: { [key: string] : Observable } = {};\n  \n  /**\n   * \n   * @param {string} key the id of the organization\n   * @returns An observable containing the most recent information of the organization\n   */\n  getOrganization(key: string): Observable {\n    if(!this.organizations[key]){\n      let generator = (observer: Observer): TeardownLogic => {\n        let callback = (value: database.DataSnapshot) => {\n          observer.next(value.val());\n        };\n        firebase.database().ref('/organizations/' + key).on('value', callback);\n        return () => {\n          firebase.database().ref('/organizations/' + key).off('value', callback);\n        };\n      };\n      let newObservable: Observable = Observable.create(generator).shareReplay(1);\n      this.organizations[key] = newObservable;\n    }\n    return this.organizations[key];\n  }\n\n  /**\n   * Internal tracker of whether an observable has been created for a particular event\n   */\n  private events: { [key: string] : Observable } = {};\n  \n  /**\n   * \n   * @param {string} key the id of the event\n   * @returns An observable containing the most recent information of the event\n   */\n  getEvent(key: string): Observable {\n    if(!this.events[key]){\n      let generator = (observer: Observer): TeardownLogic => {\n        let callback = (value: database.DataSnapshot) => {\n          let event = value.val();\n          event.key = key;\n          observer.next(event);\n        };\n        firebase.database().ref('/events/metadata/' + key).on('value', callback);\n        return () => {\n          firebase.database().ref('/events/metadata/' + key).off('value', callback);\n        };\n      };\n      let newObservable: Observable = Observable.create(generator).shareReplay(1);\n      this.events[key] = newObservable;\n    }\n    return this.events[key];\n  }\n  \n  constructor(private firebaseConfig: FirebaseConfigProvider) {\n    firebaseConfig.init();\n  }\n  \n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GeofireProvider.html":{"url":"injectables/GeofireProvider.html","title":"injectable - GeofireProvider","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GeofireProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/providers/geofire/geofire.ts\n        \n\n            \n                Description\n            \n            \n                Provider offering methods to access Geofire\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                devicesGeoFire\n                            \n                            \n                                    Private\n                                eventsGeofire\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                convertToObj\n                            \n                            \n                                    Private\n                                    Static\n                                convertToTuple\n                            \n                            \n                                    Private\n                                generateQuery\n                            \n                            \n                                getNearbyEvents\n                            \n                            \n                                getNearbyGeoEvents\n                            \n                            \n                                initializeMap\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(firebaseDatabase: FirebaseDatabaseProvider)\n                    \n                \n                        \n                            \n                                Defined in src/providers/geofire/geofire.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        firebaseDatabase\n                                                  \n                                                        \n                                                                    FirebaseDatabaseProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            convertToObj\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        convertToObj(location: [number, number])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/providers/geofire/geofire.ts:202\n                            \n                        \n\n\n                \n                    \n                            Converts a location between tuple and object form\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        location\n                                                        \n                                                                    [number, number]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                location as a tuple\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ILatLng\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            convertToTuple\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        convertToTuple(location: ILatLng)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/providers/geofire/geofire.ts:213\n                            \n                        \n\n\n                \n                    \n                            Converts a location between object and tuple form\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        location\n                                                        \n                                                                    ILatLng\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                location as an object\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            generateQuery\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        generateQuery(map: GoogleMap)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/providers/geofire/geofire.ts:221\n                            \n                        \n\n\n                \n                    \n                            Generates the query based on the current map window\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        map\n                                                        \n                                                                    GoogleMap\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the map to generate the query for\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     GeoFire.QueryCriteria\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getNearbyEvents\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetNearbyEvents(defaultRadius: number, radius: Observable)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/providers/geofire/geofire.ts:45\n                            \n                        \n\n\n                \n                    \n                            Gets nearby events based on the given radius\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        defaultRadius\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the radius to start pulling events for immediately\n\n                                                        \n                                                \n                                                \n                                                        radius\n                                                        \n                                                                    Observable\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                an observable that updates the query radius\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getNearbyGeoEvents\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetNearbyGeoEvents(defaultRadius: number, radius: Observable)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/providers/geofire/geofire.ts:97\n                            \n                        \n\n\n                \n                    \n                            Gets nearby events based on the given radius, including their distance from the user's position\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        defaultRadius\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the radius to start pulling events for immediately\n\n                                                        \n                                                \n                                                \n                                                        radius\n                                                        \n                                                                    Observable\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                an observable that updates the query radius\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initializeMap\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitializeMap(map: GoogleMap, onClickGenerator: (undefined) => void)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/providers/geofire/geofire.ts:157\n                            \n                        \n\n\n                \n                    \n                            Initializes the map to pull the markers from Geofire\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        map\n                                                        \n                                                                    GoogleMap\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the map to put the markers onto\n\n                                                        \n                                                \n                                                \n                                                        onClickGenerator\n                                                        \n                                                                    function\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the function to run when a marker is clicked on\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            devicesGeoFire\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        devicesGeoFire:     GeoFire\n\n                    \n                \n                    \n                        \n                            Type :     GeoFire\n\n                        \n                    \n                        \n                            \n                                    Defined in src/providers/geofire/geofire.ts:28\n                            \n                        \n\n                \n                    \n                        The geofire initialized around devices\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            eventsGeofire\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        eventsGeofire:     GeoFire\n\n                    \n                \n                    \n                        \n                            Type :     GeoFire\n\n                        \n                    \n                        \n                            \n                                    Defined in src/providers/geofire/geofire.ts:33\n                            \n                        \n\n                \n                    \n                        The geofire initialized around events\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { GoogleMap, GoogleMapsEvent, VisibleRegion, Spherical, Marker, ILatLng, LocationService, MyLocation } from '@ionic-native/google-maps';\nimport GeoFire, { GeoQuery, GeoCallbackRegistration } from 'geofire';\nimport { FirebaseDatabaseProvider } from '../firebase-database/firebase-database';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\nimport 'rxjs/add/operator/combineLatest';\nimport 'rxjs/add/operator/shareReplay';\nimport 'rxjs/add/operator/scan';\nimport 'rxjs/add/operator/do';\nimport 'rxjs/add/operator/mergeMap';\nimport 'rxjs/add/observable/of';\nimport { Event } from '../../models/event';\nimport { Subscription } from 'rxjs/Subscription';\n\ndeclare type Location = [number, number];\nexport declare type GeoItem = [T, Location, number];\n\n/**\n * Provider offering methods to access Geofire\n */\n@Injectable()\nexport class GeofireProvider {\n\n  /**\n   * The geofire initialized around devices\n   */\n  private devicesGeoFire: GeoFire;\n  \n  /**\n   * The geofire initialized around events\n   */\n  private eventsGeofire: GeoFire;\n  \n  constructor(private firebaseDatabase: FirebaseDatabaseProvider) {\n    this.devicesGeoFire = new GeoFire(firebaseDatabase.getDevicesLocations());\n    this.eventsGeofire = new GeoFire(firebaseDatabase.getEventsLocations());\n  }\n  \n  /**\n   * Gets nearby events based on the given radius\n   * @param defaultRadius the radius to start pulling events for immediately\n   * @param radius an observable that updates the query radius\n   */\n  getNearbyEvents(defaultRadius: number, radius: Observable): Observable {    \n    let generator = (observer: Observer) => {\n      let onKeyEnteredRegistration: GeoCallbackRegistration, onKeyExitedRegistration: GeoCallbackRegistration;\n      \n      let subscriptions: {[id: string]: Subscription} = {};\n      \n      let query: GeoQuery;\n      //TODO if location is changing, use a combineLatest\n      //eventually use something like flatMap() or .scan() to merge observables instead of current approach\n      LocationService.getMyLocation().then((myLocation: MyLocation) => {\n        query = this.eventsGeofire.query({\n          center: GeofireProvider.convertToTuple(myLocation.latLng),\n          radius: defaultRadius\n        });\n        let last = -1; // funny way of doing distinctUntilChanged since this edition doesn't seem to have it\n        radius.subscribe((radius) => {\n          if(radius != last){\n            last = radius;\n            query.updateCriteria({radius : 1.61 * radius});\n          }\n        });\n        onKeyEnteredRegistration = query.on(\"key_entered\", (key, location, distance) => {\n          subscriptions[key] = this.firebaseDatabase.getEvent(key).subscribe(event => observer.next([key, event]));\n        });\n        \n        onKeyExitedRegistration = query.on(\"key_exited\", (key, location, distance) => {\n          subscriptions[key].unsubscribe();\n          delete subscriptions[key];\n          observer.next([key, null]);\n        });\n      });\n      return () => {\n        if(onKeyEnteredRegistration) onKeyEnteredRegistration.cancel();\n        \n        if(onKeyExitedRegistration) onKeyExitedRegistration.cancel();\n      }\n    }\n    return Observable.create(generator)\n    .scan((acc: {[key: string] : Event}, value: [string, Event], index: number) => {\n      if(value[1])\n        acc[value[0]] = value[1];\n      else\n        delete acc[value[0]];\n      return acc;\n    }, {});\n  }\n  \n  /**\n   * Gets nearby events based on the given radius, including their distance from the user's position\n   * @param defaultRadius the radius to start pulling events for immediately\n   * @param radius an observable that updates the query radius\n   */\n  getNearbyGeoEvents(defaultRadius: number, radius: Observable): Observable}> {    \n    let generator = (observer: Observer) => {\n      let onKeyEnteredRegistration: GeoCallbackRegistration, onKeyMovedRegistration: GeoCallbackRegistration, onKeyExitedRegistration: GeoCallbackRegistration;\n      \n      let subscriptions: {[id: string]: Subscription} = {};\n      \n      let query: GeoQuery;\n      //TODO if location is changing, use a combineLatest\n      //eventually use something like flatMap() or .scan() to merge observables instead of current approach\n      LocationService.getMyLocation().then((myLocation: MyLocation) => {\n        query = this.eventsGeofire.query({\n          center: GeofireProvider.convertToTuple(myLocation.latLng),\n          radius: defaultRadius\n        });\n        let last = -1; // funny way of doing distinctUntilChanged since this edition doesn't seem to have it\n        radius.subscribe((radius) => {\n          if(radius != last){\n            last = radius;\n            query.updateCriteria({radius : 1.61 * radius});\n          }\n        });\n        onKeyEnteredRegistration = query.on(\"key_entered\", (key, location, distance) => {\n          subscriptions[key] = this.firebaseDatabase.getEvent(key).subscribe(event => observer.next([key, [event, location, distance]]));\n        });\n\n        onKeyMovedRegistration = query.on(\"key_moved\", (key, location, distance) => {\n          subscriptions[key].unsubscribe();\n          subscriptions[key] = this.firebaseDatabase.getEvent(key).subscribe(event => observer.next([key, [event, location, distance]]));\n        });\n        \n        onKeyExitedRegistration = query.on(\"key_exited\", (key, location, distance) => {\n          subscriptions[key].unsubscribe();\n          delete subscriptions[key];\n          observer.next([key, null]);\n        });\n      });\n      return () => {\n        if(onKeyEnteredRegistration) onKeyEnteredRegistration.cancel();\n\n        if(onKeyMovedRegistration) onKeyMovedRegistration.cancel();\n        \n        if(onKeyExitedRegistration) onKeyExitedRegistration.cancel();\n      }\n    }\n    return Observable.create(generator)\n    .scan((acc: {[key: string] : Event}, value: [string, Event], index: number) => {\n      if(value[1])\n        acc[value[0]] = value[1];\n      else\n        delete acc[value[0]];\n      return acc;\n    }, {});\n  }\n  \n  /**\n   * Initializes the map to pull the markers from Geofire\n   * @param map the map to put the markers onto\n   * @param onClickGenerator the function to run when a marker is clicked on\n   * @deprecated Needs to change\n   */\n  initializeMap(map: GoogleMap, onClickGenerator: (key) => (any) => any){\n    let query: GeoQuery;\n    let markers: Map> = new Map();\n    map.addEventListener(GoogleMapsEvent.MAP_READY).subscribe(() => {\n      query = this.devicesGeoFire.query(this.generateQuery(map));\n      var onKeyEnteredRegistration = query.on(\"key_entered\", (key, location, distance) => {\n        let marker = map.addMarker({\n          position: GeofireProvider.convertToObj(location)\n        }).then((marker) => {\n          marker.on(GoogleMapsEvent.MARKER_CLICK).subscribe(onClickGenerator(key));\n          return marker;\n        });\n        markers[key] = marker;\n        return marker;\n        //add marker at position\n        //add it to dict based on key\n      });\n      \n      var onKeyExitedRegistration = query.on(\"key_exited\", (key, location, distance) => {\n        //remove marker at index\n        markers[key].then((marker: Marker) => {\n          marker.remove();\n        });\n        markers.delete(key);\n        return null;\n      });\n      \n      var onKeyMovedRegistration = query.on(\"key_moved\", (key, location, distance) => {\n        //update marker at index\n        markers[key] = markers[key].then((marker: Marker) => {\n          marker.setPosition(GeofireProvider.convertToObj(location));\n          return marker;\n          //use Spherical.computeHeading() with old to get icon rotation\n        });\n      });\n    });\n    map.addEventListener(GoogleMapsEvent.CAMERA_MOVE_END).subscribe(()=>{\n      query.updateCriteria(this.generateQuery(map));\n    });\n  }\n  \n  /**\n   * Converts a location between tuple and object form\n   * @param {[number, number]} location location as a tuple\n   */\n  private static convertToObj(location: [number, number]): ILatLng {\n    return {\n      lng: location[1],\n      lat: location[0]\n    };\n  }\n  \n  /**\n   * Converts a location between object and tuple form\n   * @param {ILatLng} location location as an object\n   */\n  private static convertToTuple(location: ILatLng): [number, number] {\n    return [location.lat, location.lng];\n  }\n  \n  /**\n   * Generates the query based on the current map window\n   * @param {GoogleMap} map the map to generate the query for\n   */\n  private generateQuery(map: GoogleMap): GeoFire.QueryCriteria {\n    let visibleRegion: VisibleRegion = map.getVisibleRegion();\n    let diameter = Spherical.computeDistanceBetween(visibleRegion.northeast, visibleRegion.southwest);\n    let camera = map.getCameraPosition().target;\n    return {\n      center: GeofireProvider.convertToTuple(camera),\n      radius: diameter\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomePage.html":{"url":"components/HomePage.html","title":"component - HomePage","body":"\n                   \n\n\n\n\n\n  Components\n  HomePage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/pages/home/home.ts\n\n\n    \n        Description\n    \n    \n        Home page\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                page-home\n            \n\n\n\n\n            \n                templateUrl\n                home.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loading\n                            \n                            \n                                    Public\n                                loadingCtrl\n                            \n                            \n                                    Private\n                                map\n                            \n                            \n                                    Public\n                                navCtrl\n                            \n                            \n                                    Public\n                                toastCtrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                centerOnUser\n                            \n                            \n                                loadMap\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(loadingCtrl: LoadingController, navCtrl: NavController, toastCtrl: ToastController, platform: Platform, firebaseAuth: FirebaseAuthProvider, geofire: GeofireProvider)\n                    \n                \n                        \n                            \n                                Defined in src/pages/home/home.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loadingCtrl\n                                                  \n                                                        \n                                                                    LoadingController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        navCtrl\n                                                  \n                                                        \n                                                                    NavController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastCtrl\n                                                  \n                                                        \n                                                                    ToastController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        firebaseAuth\n                                                  \n                                                        \n                                                                    FirebaseAuthProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        geofire\n                                                  \n                                                        \n                                                                    GeofireProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            centerOnUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        centerOnUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/pages/home/home.ts:83\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadMap\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadMap()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/pages/home/home.ts:64\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/pages/home/home.ts:52\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loading:     Loading\n\n                    \n                \n                    \n                        \n                            Type :     Loading\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/home/home.ts:40\n                            \n                        \n\n                \n                    \n                        Loading dialog that shows while waiting to get the user's location\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loadingCtrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loadingCtrl:     LoadingController\n\n                    \n                \n                    \n                        \n                            Type :     LoadingController\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/home/home.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            map\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        map:     GoogleMap\n\n                    \n                \n                    \n                        \n                            Type :     GoogleMap\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/home/home.ts:35\n                            \n                        \n\n                \n                    \n                        reference to the included Google Maps element\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            navCtrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        navCtrl:     NavController\n\n                    \n                \n                    \n                        \n                            Type :     NavController\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/home/home.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toastCtrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toastCtrl:     ToastController\n\n                    \n                \n                    \n                        \n                            Type :     ToastController\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/home/home.ts:45\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport {\n  GoogleMaps,\n  GoogleMap,\n  Marker,\n  MyLocation\n} from '@ionic-native/google-maps';\nimport { LoadingController, ToastController, Platform, NavController, Loading } from 'ionic-angular';\nimport { FirebaseAuthProvider } from '../../providers/firebase-auth/firebase-auth';\nimport { LoginPage } from '../login/login';\nimport { GeofireProvider } from '../../providers/geofire/geofire';\nimport { DeviceInfoPage } from '../device-info/device-info';\n\n/**\n * Starting longitude for the map if location is not found\n */\nconst startLong = -86.2379;\n\n/**\n * Starting latitude for the map if location is not found\n */\nconst startLat = 41.7002;\n\n/**\n * Home page\n */\n@Component({\n  selector: 'page-home',\n  templateUrl: 'home.html'\n})\nexport class HomePage {\n  /**\n   * reference to the included Google Maps element\n   */\n  private map: GoogleMap;\n\n  /**\n   * Loading dialog that shows while waiting to get the user's location\n   */\n  loading: Loading;\n  \n  constructor(\n    public loadingCtrl: LoadingController,\n    public navCtrl: NavController,\n    public toastCtrl: ToastController,\n    private platform: Platform,\n    private firebaseAuth: FirebaseAuthProvider,\n    private geofire: GeofireProvider\n  ) {\n  }\n  \n  async ngOnInit() {\n    // Since ngOnInit() is executed before `deviceready` event,\n    // you have to wait the event.\n    this.firebaseAuth.user.subscribe((user) => {\n      if(!user)\n        \n      this.navCtrl.push(LoginPage);\n    });\n    await this.platform.ready();\n    await this.loadMap();\n  }\n  \n  loadMap() {\n    this.map = GoogleMaps.create('map_canvas', {\n      camera: {\n        target: {\n          lat: startLat,\n          lng: startLong\n        },\n        zoom: 15,\n        tilt: 30\n      }\n    });\n    let onClickGenerator = (key: any) => {\n      return () => {\n        this.navCtrl.push(DeviceInfoPage, {key: key});\n      };\n    }\n    this.geofire.initializeMap(this.map, onClickGenerator);\n  }\n  \n  async centerOnUser() {\n    this.map.clear();\n    \n    this.loading = this.loadingCtrl.create({\n      content: 'Please wait...'\n    });\n    this.loading.present();\n    \n    // Get the location of you\n    this.map.getMyLocation().then((location: MyLocation) => {\n      this.loading.dismiss();\n      console.log(JSON.stringify(location, null ,2));\n      \n      // Move the map camera to the location with animation\n      this.map.animateCamera({\n        target: location.latLng,\n        zoom: 17,\n        tilt: 30\n      });\n      \n      // add a marker\n      let marker: Marker = this.map.addMarkerSync({\n        //title: 'You are here',\n        //snippet: 'This plugin is awesome!',\n        position: location.latLng,\n        //animation: GoogleMapsAnimation.BOUNCE\n      });\n      \n      /*\n      // show the infoWindow\n      marker.showInfoWindow();\n      \n      // If clicked it, display the alert\n      marker.on(GoogleMapsEvent.MARKER_CLICK).subscribe(() => {\n        this.showToast('clicked!');\n      });*/\n    })\n    .catch(err => {\n      this.loading.dismiss();\n      this.toastCtrl.create({\n        message: err.error_message,\n        position: 'bottom'\n      }).present();\n    });\n  }\n}\n    \n\n    \n        \n  \n    \n      \n    \n    Home\n  \n\n\n\n  Center on User\n  \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Home    Center on User    '\n    var COMPONENTS = [{'name': 'CalendarComponent', 'selector': 'calendar'},{'name': 'DeviceInfoPage', 'selector': 'page-device-info'},{'name': 'EventDatePage', 'selector': 'page-event-date'},{'name': 'EventInfoPage', 'selector': 'page-event-info'},{'name': 'EventItemComponent', 'selector': 'event-item'},{'name': 'EventsPage', 'selector': 'page-events'},{'name': 'HomePage', 'selector': 'page-home'},{'name': 'LoginModal', 'selector': 'page-login-modal'},{'name': 'LoginPage', 'selector': 'page-login'},{'name': 'MyApp', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomePage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginModal.html":{"url":"components/LoginModal.html","title":"component - LoginModal","body":"\n                   \n\n\n\n\n\n  Components\n  LoginModal\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/pages/login-modal/login-modal.ts\n\n\n    \n        Description\n    \n    \n        Modal that allows for a user to sign in or sign up with their username and password\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                page-login-modal\n            \n\n\n\n\n            \n                templateUrl\n                login-modal.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                checkPasswords\n                            \n                            \n                                    Private\n                                loginForm\n                            \n                            \n                                    Public\n                                navCtrl\n                            \n                            \n                                    Public\n                                navParams\n                            \n                            \n                                    Private\n                                needAccount\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                closeModal\n                            \n                            \n                                submit\n                            \n                            \n                                    Private\n                                toggle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(navCtrl: NavController, navParams: NavParams, viewCtrl: ViewController, formBuilder: FormBuilder, firebaseAuth: FirebaseAuthProvider, toastCtrl: ToastController)\n                    \n                \n                        \n                            \n                                Defined in src/pages/login-modal/login-modal.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        navCtrl\n                                                  \n                                                        \n                                                                    NavController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        navParams\n                                                  \n                                                        \n                                                                    NavParams\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        viewCtrl\n                                                  \n                                                        \n                                                                    ViewController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        firebaseAuth\n                                                  \n                                                        \n                                                                    FirebaseAuthProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastCtrl\n                                                  \n                                                        \n                                                                    ToastController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            closeModal\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        closeModal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/pages/login-modal/login-modal.ts:70\n                            \n                        \n\n\n                \n                    \n                            UI triggered action that closes the modal\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submit\n                            \n                            \n                        \n                    \n                \n                \n                    \nsubmit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/pages/login-modal/login-modal.ts:37\n                            \n                        \n\n\n                \n                    \n                            Submits the login form, logs in or signs up the user, and handles response appropiately\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            toggle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggle()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/pages/login-modal/login-modal.ts:77\n                            \n                        \n\n\n                \n                    \n                            UI driven toggle between signing in and signing up\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkPasswords\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        checkPasswords:     \n\n                    \n                \n                    \n                        \n                            Default value : (control: AbstractControl) => {\n    if(this.needAccount && control.value != this.loginForm.controls.password.value){\n      return { mismatch: true };\n    }\n    return;\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/login-modal/login-modal.ts:60\n                            \n                        \n\n                \n                    \n                        Function that checks whether the confirm password field is in sync with the password field - given whether the user is loggin in or signing up\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loginForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loginForm:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/login-modal/login-modal.ts:24\n                            \n                        \n\n                \n                    \n                        Form group containing the username, password, and potentially confirm password\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            navCtrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        navCtrl:     NavController\n\n                    \n                \n                    \n                        \n                            Type :     NavController\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/login-modal/login-modal.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            navParams\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        navParams:     NavParams\n\n                    \n                \n                    \n                        \n                            Type :     NavParams\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/login-modal/login-modal.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            needAccount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        needAccount:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/login-modal/login-modal.ts:19\n                            \n                        \n\n                \n                    \n                        Switch changing whether the user is shown the sign up or sign in content\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams, ViewController, ToastController } from 'ionic-angular';\nimport { FormBuilder, FormGroup, Validators, AbstractControl } from '@angular/forms';\nimport { FirebaseAuthProvider } from '../../providers/firebase-auth/firebase-auth';\nimport { Observable } from 'rxjs/Observable';\n\n/**\n * Modal that allows for a user to sign in or sign up with their username and password\n */\n@IonicPage()\n@Component({\n  selector: 'page-login-modal',\n  templateUrl: 'login-modal.html',\n})\nexport class LoginModal {\n  /**\n   * Switch changing whether the user is shown the sign up or sign in content\n   */\n  private needAccount = false;\n\n  /**\n   * Form group containing the username, password, and potentially confirm password\n   */\n  private loginForm : FormGroup;\n  \n  constructor(public navCtrl: NavController, public navParams: NavParams, private viewCtrl: ViewController, private formBuilder: FormBuilder, private firebaseAuth: FirebaseAuthProvider, private toastCtrl: ToastController) {\n    this.loginForm = this.formBuilder.group({\n      email: ['', Validators.compose([Validators.required, Validators.email])],\n      password: ['', Validators.compose([Validators.required, Validators.minLength(8)])],\n      passwordCheck: ['', this.checkPasswords]\n    });\n  }\n  \n  /**\n   * Submits the login form, logs in or signs up the user, and handles response appropiately\n   */\n  submit(): void {\n    if(this.loginForm.status == \"VALID\"){\n      let result: Observable;\n      if(this.needAccount){\n        result = this.firebaseAuth.newAccount(this.loginForm.controls.email.value, this.loginForm.controls.password.value);\n      } else {\n        result = this.firebaseAuth.signInWithCreds(this.loginForm.controls.email.value, this.loginForm.controls.password.value);\n      }\n      result.subscribe((result) =>{\n        this.navCtrl.pop();\n      }, (error) => {\n        this.toastCtrl.create({\n          message: error,\n          duration: 2000\n        }).present();\n      });\n    }\n  }\n  \n  /**\n   * Function that checks whether the confirm password field is in sync with the password field - given whether the user is loggin in or signing up\n   * @returns an object with the mismatch flag if out of sync, otherwise nothing\n   */\n  checkPasswords = (control: AbstractControl) => {\n    if(this.needAccount && control.value != this.loginForm.controls.password.value){\n      return { mismatch: true };\n    }\n    return;\n  }\n  \n  /**\n   * UI triggered action that closes the modal\n   */\n  private closeModal(){\n    this.viewCtrl.dismiss();\n  }\n  \n  /**\n   * UI driven toggle between signing in and signing up\n   */\n  private toggle(){\n    this.needAccount = !this.needAccount;\n  }\n  \n}\n\n    \n\n    \n        \n  \n    Login\n    \n      Close\n    \n  \n\n\n\n  \n    \n      \n        Email\n        \n        Invalid email\n      \n      \n        Password\n        \n        \n      \n      \n        Confirm Password\n        \n        \n      \n      \n      Submit\n      {{needAccount ? 'Already have an account?' : 'Don\\\\'t have an account?'}}\n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Login          Close                          Email                Invalid email                    Password                                    Confirm Password                                  Submit      {{needAccount ? \\'Already have an account?\\' : \\'Don\\\\\\'t have an account?\\'}}      '\n    var COMPONENTS = [{'name': 'CalendarComponent', 'selector': 'calendar'},{'name': 'DeviceInfoPage', 'selector': 'page-device-info'},{'name': 'EventDatePage', 'selector': 'page-event-date'},{'name': 'EventInfoPage', 'selector': 'page-event-info'},{'name': 'EventItemComponent', 'selector': 'event-item'},{'name': 'EventsPage', 'selector': 'page-events'},{'name': 'HomePage', 'selector': 'page-home'},{'name': 'LoginModal', 'selector': 'page-login-modal'},{'name': 'LoginPage', 'selector': 'page-login'},{'name': 'MyApp', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginModal'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginPage.html":{"url":"components/LoginPage.html","title":"component - LoginPage","body":"\n                   \n\n\n\n\n\n  Components\n  LoginPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/pages/login/login.ts\n\n\n    \n        Description\n    \n    \n        Page that the user is shown if they are not logged in\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                page-login\n            \n\n\n\n\n            \n                templateUrl\n                login.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                firebaseAuth\n                            \n                            \n                                    Public\n                                navCtrl\n                            \n                            \n                                    Public\n                                navParams\n                            \n                            \n                                    Public\n                                toastCtrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loginAnonymously\n                            \n                            \n                                loginEmailPassword\n                            \n                            \n                                loginGoogle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(navCtrl: NavController, navParams: NavParams, firebaseAuth: FirebaseAuthProvider, toastCtrl: ToastController, modalCtrl: ModalController)\n                    \n                \n                        \n                            \n                                Defined in src/pages/login/login.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        navCtrl\n                                                  \n                                                        \n                                                                    NavController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        navParams\n                                                  \n                                                        \n                                                                    NavParams\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        firebaseAuth\n                                                  \n                                                        \n                                                                    FirebaseAuthProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastCtrl\n                                                  \n                                                        \n                                                                    ToastController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalCtrl\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginAnonymously\n                            \n                            \n                        \n                    \n                \n                \n                    \nloginAnonymously()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/pages/login/login.ts:27\n                            \n                        \n\n\n                \n                    \n                            Method called by UI to trigger backend service to login the user and show relevant error message\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginEmailPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \nloginEmailPassword()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/pages/login/login.ts:51\n                            \n                        \n\n\n                \n                    \n                            Method called by the UI to trigger the login with email and password modal\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginGoogle\n                            \n                            \n                        \n                    \n                \n                \n                    \nloginGoogle()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/pages/login/login.ts:44\n                            \n                        \n\n\n                \n                    \n                            Method called by UI to trigger backend service to login the user with Google\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            firebaseAuth\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        firebaseAuth:     FirebaseAuthProvider\n\n                    \n                \n                    \n                        \n                            Type :     FirebaseAuthProvider\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/login/login.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            navCtrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        navCtrl:     NavController\n\n                    \n                \n                    \n                        \n                            Type :     NavController\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/login/login.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            navParams\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        navParams:     NavParams\n\n                    \n                \n                    \n                        \n                            Type :     NavParams\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/login/login.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toastCtrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toastCtrl:     ToastController\n\n                    \n                \n                    \n                        \n                            Type :     ToastController\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/login/login.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams, ToastController, ModalController } from 'ionic-angular';\nimport { FirebaseAuthProvider } from '../../providers/firebase-auth/firebase-auth';\nimport { LoginModal } from '../login-modal/login-modal';\n\n/**\n * Page that the user is shown if they are not logged in\n */\n@IonicPage()\n@Component({\n  selector: 'page-login',\n  templateUrl: 'login.html',\n})\nexport class LoginPage {\n  \n  constructor(public navCtrl: NavController, public navParams: NavParams, public firebaseAuth: FirebaseAuthProvider, public toastCtrl: ToastController, private modalCtrl: ModalController) {\n    firebaseAuth.user.subscribe((user) => {\n      if(user){\n        navCtrl.pop();\n      }\n    });\n  }\n  \n  /**\n   * Method called by UI to trigger backend service to login the user and show relevant error message\n   */\n  loginAnonymously(){\n    this.firebaseAuth.signInAnonymously().subscribe((successful) => {\n      if(successful){\n        this.navCtrl.pop();\n      } else {\n        this.toastCtrl.create({\n          message: 'Failed to login anonymously',\n          duration: 3000,\n          position: 'top'\n        }).present();\n      }\n    });\n  }\n  \n  /**\n   * Method called by UI to trigger backend service to login the user with Google\n   */\n  loginGoogle(){\n    this.firebaseAuth.signInWithGoogle();\n  }\n  \n  /**\n   * Method called by the UI to trigger the login with email and password modal\n   */\n  loginEmailPassword(){\n    let loginModal = this.modalCtrl.create(LoginModal);\n    loginModal.present();\n  }\n  \n}\n\n    \n\n    \n        \n\n  \n  \n    Login\n  \n  \n\n\n\n\n  Log-in via Google\n  \n  Log-in with Email and Password\n  \n  Log-in Anonymously\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        Login      Log-in via Google    Log-in with Email and Password    Log-in Anonymously'\n    var COMPONENTS = [{'name': 'CalendarComponent', 'selector': 'calendar'},{'name': 'DeviceInfoPage', 'selector': 'page-device-info'},{'name': 'EventDatePage', 'selector': 'page-event-date'},{'name': 'EventInfoPage', 'selector': 'page-event-info'},{'name': 'EventItemComponent', 'selector': 'event-item'},{'name': 'EventsPage', 'selector': 'page-events'},{'name': 'HomePage', 'selector': 'page-home'},{'name': 'LoginModal', 'selector': 'page-login-modal'},{'name': 'LoginPage', 'selector': 'page-login'},{'name': 'MyApp', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MyApp.html":{"url":"components/MyApp.html","title":"component - MyApp","body":"\n                   \n\n\n\n\n\n  Components\n  MyApp\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                templateUrl\n                app.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                nav\n                            \n                            \n                                pages\n                            \n                            \n                                    Public\n                                platform\n                            \n                            \n                                rootPage\n                            \n                            \n                                    Public\n                                splashScreen\n                            \n                            \n                                    Public\n                                statusBar\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initializeApp\n                            \n                            \n                                openPage\n                            \n                            \n                                signOut\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(platform: Platform, statusBar: StatusBar, splashScreen: SplashScreen, firebaseAuth: FirebaseAuthProvider)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        statusBar\n                                                  \n                                                        \n                                                                    StatusBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        splashScreen\n                                                  \n                                                        \n                                                                    SplashScreen\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        firebaseAuth\n                                                  \n                                                        \n                                                                    FirebaseAuthProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initializeApp\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitializeApp()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openPage\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenPage(page)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        page\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signOut\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignOut()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:51\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nav\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        nav:     Nav\n\n                    \n                \n                    \n                        \n                            Type :     Nav\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(Nav)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pages\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pages:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            platform\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        platform:     Platform\n\n                    \n                \n                    \n                        \n                            Type :     Platform\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rootPage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        rootPage:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : HomePage\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            splashScreen\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        splashScreen:     SplashScreen\n\n                    \n                \n                    \n                        \n                            Type :     SplashScreen\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            statusBar\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        statusBar:     StatusBar\n\n                    \n                \n                    \n                        \n                            Type :     StatusBar\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChild } from '@angular/core';\nimport { Nav, Platform } from 'ionic-angular';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\n\nimport { HomePage } from '../pages/home/home';\nimport { Environment } from '@ionic-native/google-maps';\nimport { FirebaseAuthProvider } from '../providers/firebase-auth/firebase-auth';\nimport { EventsPage } from '../pages/events/events';\n\n@Component({\n  templateUrl: 'app.html'\n})\nexport class MyApp {\n  @ViewChild(Nav) nav: Nav;\n\n  rootPage: any = HomePage;\n\n  pages: Array;\n\n  constructor(public platform: Platform, public statusBar: StatusBar, public splashScreen: SplashScreen, private firebaseAuth: FirebaseAuthProvider) {\n    this.initializeApp();\n\n    // used for an example of ngFor and navigation\n    this.pages = [\n      { title: 'Home', component: HomePage },\n      { title: 'Events', component: EventsPage }\n    ];\n\n  }\n\n  initializeApp() {\n    this.platform.ready().then(() => {\n      // Okay, so the platform is ready and our plugins are available.\n      // Here you can do any higher level native things you might need.\n      Environment.setEnv({\n        'API_KEY_FOR_BROWSER_RELEASE': 'G_API_KEY',\n        'API_KEY_FOR_BROWSER_DEBUG': 'G_API_KEY'\n      });\n      this.statusBar.styleDefault();\n      this.splashScreen.hide();\n    });\n  }\n\n  openPage(page) {\n    // Reset the content nav to have just this page\n    // we wouldn't want the back button to show in this scenario\n    this.nav.setRoot(page.component);\n  }\n\n  signOut(){\n    this.firebaseAuth.signOut();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      Menu\n    \n  \n\n  \n    \n      \n        {{p.title}}\n      \n      \n          Sign Out\n      \n    \n  \n\n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Menu                          {{p.title}}                      Sign Out            '\n    var COMPONENTS = [{'name': 'CalendarComponent', 'selector': 'calendar'},{'name': 'DeviceInfoPage', 'selector': 'page-device-info'},{'name': 'EventDatePage', 'selector': 'page-event-date'},{'name': 'EventInfoPage', 'selector': 'page-event-info'},{'name': 'EventItemComponent', 'selector': 'event-item'},{'name': 'EventsPage', 'selector': 'page-events'},{'name': 'HomePage', 'selector': 'page-home'},{'name': 'LoginModal', 'selector': 'page-login-modal'},{'name': 'LoginPage', 'selector': 'page-login'},{'name': 'MyApp', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MyApp'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Organization.html":{"url":"classes/Organization.html","title":"class - Organization","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Organization\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/organization.ts\n        \n\n            \n                Description\n            \n            \n                The model class for an organization\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                home\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            home\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        home:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/organization.ts:14\n                            \n                        \n\n                \n                    \n                        The home of the organization - e.g. URL\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/organization.ts:9\n                            \n                        \n\n                \n                    \n                        The name of the organization\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export default class Organization {\n    \n    /**\n     * The name of the organization\n     */\n    name: string;\t/* Amazon */\n    \n    /**\n     * The home of the organization - e.g. URL\n    */\n    home: string;\t/* amazon.com */\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            \n                component\n            \n            \n                MyApp\n            \n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/components/calendar/calendar.ts\n            \n            \n                component\n            \n            \n                CalendarComponent\n            \n            \n                94 %\n                (18/19)\n            \n        \n        \n            \n                \n                src/components/event-item/event-item.ts\n            \n            \n                component\n            \n            \n                EventItemComponent\n            \n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/models/device.ts\n            \n            \n                class\n            \n            \n                Device\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/models/event.ts\n            \n            \n                class\n            \n            \n                Event\n            \n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/models/organization.ts\n            \n            \n                class\n            \n            \n                Organization\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/pages/device-info/device-info.ts\n            \n            \n                component\n            \n            \n                DeviceInfoPage\n            \n            \n                62 %\n                (5/8)\n            \n        \n        \n            \n                \n                src/pages/event-date/event-date.ts\n            \n            \n                component\n            \n            \n                EventDatePage\n            \n            \n                76 %\n                (10/13)\n            \n        \n        \n            \n                \n                src/pages/event-info/event-info.ts\n            \n            \n                component\n            \n            \n                EventInfoPage\n            \n            \n                33 %\n                (2/6)\n            \n        \n        \n            \n                \n                src/pages/events/events.ts\n            \n            \n                component\n            \n            \n                EventsPage\n            \n            \n                78 %\n                (11/14)\n            \n        \n        \n            \n                \n                src/pages/home/home.ts\n            \n            \n                component\n            \n            \n                HomePage\n            \n            \n                30 %\n                (3/10)\n            \n        \n        \n            \n                \n                src/pages/home/home.ts\n            \n            \n                variable\n            \n            \n                startLat\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/pages/home/home.ts\n            \n            \n                variable\n            \n            \n                startLong\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/pages/login-modal/login-modal.ts\n            \n            \n                component\n            \n            \n                LoginModal\n            \n            \n                70 %\n                (7/10)\n            \n        \n        \n            \n                \n                src/pages/login/login.ts\n            \n            \n                component\n            \n            \n                LoginPage\n            \n            \n                44 %\n                (4/9)\n            \n        \n        \n            \n                \n                src/providers/firebase-auth/firebase-auth.ts\n            \n            \n                injectable\n            \n            \n                FirebaseAuthProvider\n            \n            \n                81 %\n                (9/11)\n            \n        \n        \n            \n                \n                src/providers/firebase-config/firebase-config.ts\n            \n            \n                injectable\n            \n            \n                FirebaseConfigProvider\n            \n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/providers/firebase-database/firebase-database.ts\n            \n            \n                injectable\n            \n            \n                FirebaseDatabaseProvider\n            \n            \n                40 %\n                (4/10)\n            \n        \n        \n            \n                \n                src/providers/geofire/geofire.ts\n            \n            \n                injectable\n            \n            \n                GeofireProvider\n            \n            \n                90 %\n                (9/10)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : 5.2.11\n        \n            @angular/common : 5.2.11\n        \n            @angular/compiler : 5.2.11\n        \n            @angular/compiler-cli : 5.2.11\n        \n            @angular/core : 5.2.11\n        \n            @angular/forms : 5.2.11\n        \n            @angular/http : 5.2.11\n        \n            @angular/platform-browser : 5.2.11\n        \n            @angular/platform-browser-dynamic : 5.2.11\n        \n            @ionic-native/core : ^4.15.0\n        \n            @ionic-native/google-maps : ^4.14.0\n        \n            @ionic-native/splash-screen : ~4.15.0\n        \n            @ionic-native/status-bar : ~4.15.0\n        \n            @ionic/storage : 2.2.0\n        \n            cordova-android : 7.0.0\n        \n            cordova-browser : 5.0.4\n        \n            cordova-ios : 4.5.5\n        \n            cordova-plugin-device : ^2.0.2\n        \n            cordova-plugin-googlemaps : ^2.4.6\n        \n            cordova-plugin-ionic-keyboard : ^2.1.3\n        \n            cordova-plugin-ionic-webview : ^2.2.0\n        \n            cordova-plugin-splashscreen : ^5.0.2\n        \n            cordova-plugin-statusbar : ^2.4.2\n        \n            cordova-plugin-whitelist : ^1.3.3\n        \n            firebase : ^5.5.4\n        \n            geofire : ^4.1.2\n        \n            ionic-angular : 3.9.2\n        \n            ionicons : 3.0.0\n        \n            rxjs : 5.5.11\n        \n            sw-toolbox : 3.6.0\n        \n            zone.js : 0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"overview - index","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_ComponentsModule\n\n\n\ncluster_ComponentsModule_declarations\n\n\n\ncluster_ComponentsModule_exports\n\n\n\n\nDeviceInfoPage\n\nDeviceInfoPage\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nDeviceInfoPage->AppModule\n\n\n\n\n\nEventDatePage\n\nEventDatePage\n\nAppModule -->\n\nEventDatePage->AppModule\n\n\n\n\n\nEventInfoPage\n\nEventInfoPage\n\nAppModule -->\n\nEventInfoPage->AppModule\n\n\n\n\n\nEventsPage\n\nEventsPage\n\nAppModule -->\n\nEventsPage->AppModule\n\n\n\n\n\nHomePage\n\nHomePage\n\nAppModule -->\n\nHomePage->AppModule\n\n\n\n\n\nLoginModal\n\nLoginModal\n\nAppModule -->\n\nLoginModal->AppModule\n\n\n\n\n\nLoginPage\n\nLoginPage\n\nAppModule -->\n\nLoginPage->AppModule\n\n\n\n\n\nMyApp\n\nMyApp\n\nAppModule -->\n\nMyApp->AppModule\n\n\n\n\n\nIonicApp \n\nIonicApp \n\nIonicApp  -->\n\nAppModule->IonicApp \n\n\n\n\n\nFirebaseAuthProvider\n\nFirebaseAuthProvider\n\nAppModule -->\n\nFirebaseAuthProvider->AppModule\n\n\n\n\n\nFirebaseConfigProvider\n\nFirebaseConfigProvider\n\nAppModule -->\n\nFirebaseConfigProvider->AppModule\n\n\n\n\n\nFirebaseDatabaseProvider\n\nFirebaseDatabaseProvider\n\nAppModule -->\n\nFirebaseDatabaseProvider->AppModule\n\n\n\n\n\nGeofireProvider\n\nGeofireProvider\n\nAppModule -->\n\nGeofireProvider->AppModule\n\n\n\n\n\nCalendarComponent\n\nCalendarComponent\n\n\n\nComponentsModule\n\nComponentsModule\n\nComponentsModule -->\n\nCalendarComponent->ComponentsModule\n\n\n\n\n\nEventItemComponent\n\nEventItemComponent\n\nComponentsModule -->\n\nEventItemComponent->ComponentsModule\n\n\n\n\n\nCalendarComponent \n\nCalendarComponent \n\nCalendarComponent  -->\n\nComponentsModule->CalendarComponent \n\n\n\n\n\nEventItemComponent \n\nEventItemComponent \n\nEventItemComponent  -->\n\nComponentsModule->EventItemComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    10 Components\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ComponentsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            GeoItem   (src/.../geofire.ts)\n                        \n                        \n                            Location   (src/.../geofire.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/providers/geofire/geofire.ts\n    \n        \n            \n                \n                    \n                        \n                        GeoItem\n                    \n                \n                \n                    \n                        GeoItem:     [T, Location, number]\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        Location\n                    \n                \n                \n                    \n                        Location:     [number, number]\n\n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            startLat   (src/.../home.ts)\n                        \n                        \n                            startLong   (src/.../home.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/pages/home/home.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            startLat\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        startLat:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 41.7002\n                        \n                    \n\n                \n                    \n                        Starting latitude for the map if location is not found\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            startLong\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        startLong:     \n\n                    \n                \n                    \n                        \n                            Default value : -86.2379\n                        \n                    \n\n                \n                    \n                        Starting longitude for the map if location is not found\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
