var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.5","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,1.31,1,1.833]],["body/modules/AppModule.html",[0,1.842,1,3.803,2,1.521,3,0.664,4,2.913,5,3.321,6,2.477,7,0.328,8,2.541,9,2.541,10,2.541,11,2.541,12,1.078,13,0.04,14,1.078,15,1.078,16,1.078,17,1.078,18,1.078,19,1.078,20,1.078,21,4.547,22,1.953,23,2.395,24,1.953,25,1.766,26,2.288,27,1.914,28,1.521,29,0.448,30,0.294,31,0.243,32,3.087,33,4.156,34,4.156,35,4.699,36,0.904,37,4.156,38,2.182,39,2.182,40,4.156,41,3.422,42,0.404,43,4.156,44,2.541,45,1.011,46,0.822,47,3.087,48,2.541,49,2.938,50,2.182,51,2.182,52,2.938,53,2.182,54,2.182,55,1.879,56,1.699,57,1.914,58,1.368,59,1.699,60,3.087,61,3.087,62,1.914,63,2.182,64,1.368,65,1.521,66,1.368,67,3.087,68,1.914,69,2.541,70,2.288,71,3.087,72,3.422,73,1.914,74,1.234,75,1.914,76,3.087,77,3.087,78,0.061,79,0.027,80,0.027]],["title/components/CalendarComponent.html",[81,0.099,82,0.568]],["body/components/CalendarComponent.html",[3,0.447,7,0.164,12,0.399,13,0.04,14,0.399,15,0.399,16,0.399,17,0.399,18,0.399,19,0.399,20,0.399,29,0.198,30,0.198,31,0.164,36,0.47,42,0.272,74,2.457,78,0.075,79,0.02,80,0.02,81,0.174,82,0.806,83,0.613,84,0.613,85,0.613,86,1.71,87,0.629,88,2.966,89,1.8,90,2.577,91,0.876,92,4.34,93,2.213,94,0.613,95,1.621,96,0.924,97,3.131,98,0.164,99,0.47,100,4.196,101,4.732,102,4.732,103,4.196,104,4.196,105,4.196,106,2.336,107,3.768,108,4.196,109,4.732,110,0.806,111,4.196,112,3.768,113,3.768,114,3.131,115,2.177,116,2.664,117,2.966,118,4.502,119,2.549,120,0.811,121,0.746,122,3.131,123,2.577,124,2.213,125,0.54,126,3.102,127,2.077,128,2.577,129,3.131,130,4.196,131,2.077,132,2.077,133,1.723,134,1.252,135,3.706,136,2.577,137,2.577,138,0.861,139,1.08,140,2.077,141,2.336,142,2.577,143,1.468,144,2.577,145,2.577,146,4.722,147,2.077,148,2.077,149,2.077,150,2.077,151,1.941,152,2.077,153,2.077,154,0.724,155,0.776,156,0.642,157,4.467,158,1.71,159,2.577,160,3.768,161,4.196,162,2.077,163,1.542,164,2.213,165,2.213,166,3.131,167,1.557,168,2.077,169,2.077,170,2.077,171,4.732,172,3.268,173,2.577,174,3.131,175,3.131,176,2.077,177,3.131,178,2.077,179,1.004,180,3.131,181,2.077,182,3.131,183,2.077,184,2.077,185,0.613,186,3.131,187,2.077,188,2.077,189,0.75,190,0.75,191,2.336,192,3.131,193,2.077,194,2.077,195,2.077,196,2.577,197,2.077,198,2.077,199,2.077,200,2.077,201,2.077,202,2.077,203,2.077,204,2.077,205,2.077,206,1.468,207,2.077,208,2.077,209,2.077,210,2.077,211,3.131,212,3.131,213,3.131,214,2.077,215,2.077,216,1.71,217,3.131,218,2.077,219,2.077,220,1.71,221,1.387,222,2.077,223,2.077,224,2.077,225,3.131,226,3.131,227,2.213,228,3.131,229,3.131,230,3.131,231,3.131,232,3.131,233,0.924,234,0.924,235,0.924,236,1.006,237,0.613,238,0.613,239,1.45,240,0.312,241,0.924,242,0.613,243,0.399,244,0.613,245,0.613,246,0.613,247,0.613,248,0.613,249,0.613,250,0.399,251,0.613,252,0.613]],["title/modules/ComponentsModule.html",[0,1.31,70,1.627]],["body/modules/ComponentsModule.html",[0,2.149,2,1.93,3,0.843,4,3.264,5,2.769,6,1.93,7,0.434,13,0.04,26,2.669,27,2.429,28,1.93,29,0.373,30,0.373,31,0.309,36,0.876,41,3.991,42,0.512,44,3.991,45,0.843,46,1.044,70,3.34,78,0.077,79,0.031,80,0.031,82,1.161,91,0.588,243,1.161,250,1.161,253,3.225,254,3.225,255,3.225,256,3.918,257,3.918,258,4.848,259,2.769,260,2.769,261,3.225,262,3.918]],["title/classes/Device.html",[78,0.058,240,0.444]],["body/classes/Device.html",[7,0.311,13,0.04,29,0.376,30,0.376,31,0.311,78,0.096,79,0.032,80,0.032,87,0.592,98,0.311,99,0.731,121,0.722,125,0.526,155,0.866,156,0.83,167,1.787,179,1.052,240,0.893,263,3.251,264,2.791,265,3.251,266,2.173,267,3.948,268,1.29,269,2.187,270,3.42,271,4.752,272,5.772,273,3.948,274,3.948,275,1.761,276,3.02,277,1.948,278,3.948,279,3.444,280,3.948,281,4.011,282,4.872,283,2.173]],["title/components/DeviceInfoPage.html",[12,0.568,81,0.099]],["body/components/DeviceInfoPage.html",[3,0.546,7,0.2,12,0.887,13,0.04,14,0.488,15,0.488,16,0.488,17,0.488,18,0.488,19,0.488,20,0.488,24,1.67,25,1.51,29,0.404,30,0.242,31,0.2,36,0.855,42,0.332,45,0.781,46,0.677,55,1.015,64,1.125,65,1.251,66,1.125,68,3.377,74,2.033,78,0.05,79,0.023,80,0.023,81,0.176,82,0.488,83,0.75,84,0.75,85,0.75,87,0.381,91,0.635,93,1.795,94,0.75,95,1.683,96,1.072,98,0.2,99,0.544,119,1.788,120,0.781,121,0.7,125,0.519,134,2.033,138,0.433,154,0.488,155,0.733,156,0.433,163,2.505,167,1.251,179,0.967,185,1.072,189,2.111,190,0.918,233,1.072,234,1.072,235,1.072,236,1.108,237,0.75,238,0.75,239,1.652,240,0.89,241,1.072,242,0.75,243,0.488,244,0.75,245,0.75,246,0.75,247,0.75,248,0.75,249,0.75,250,0.488,251,0.75,252,0.75,259,1.795,268,1.597,269,1.767,270,3.152,271,2.988,275,1.969,276,2.865,277,1.955,283,1.398,284,4.485,285,1.795,286,1.608,287,2.25,288,3.318,289,2.988,290,1.53,291,2.033,292,1.955,293,2.784,294,4.621,295,1.125,296,2.033,297,3.487,298,1.694,299,3.629,300,2.544,301,2.539,302,2.539,303,2.253,304,3.804,305,3.629,306,2.539,307,2.09,308,1.788,309,2.539,310,2.539,311,2.539,312,1.795,313,2.09,314,1.398,315,1.398,316,2.539,317,1.574,318,1.125,319,1.125,320,2.09,321,2.539,322,1.795,323,2.09,324,2.539,325,2.539,326,2.09,327,2.539,328,2.539,329,2.539,330,2.539,331,2.09,332,2.539,333,3.629,334,3.266,335,3.629,336,3.629,337,3.629,338,2.988]],["title/classes/Event.html",[78,0.058,91,0.444]],["body/classes/Event.html",[7,0.25,13,0.04,29,0.302,30,0.302,31,0.25,74,2.177,78,0.084,79,0.027,80,0.027,87,0.635,91,0.922,98,0.25,99,0.635,106,2.951,110,0.812,115,1.874,121,0.739,125,0.538,138,0.811,154,0.608,155,0.475,156,0.54,165,2.99,167,1.792,191,2.251,221,1.874,227,2.99,264,2.24,265,2.609,270,3.149,275,2.041,276,2.622,277,1.691,279,2.99,339,2.609,340,5.08,341,5.08,342,5.08,343,5.08,344,3.849,345,4.23,346,3.169,347,4.182,348,3.169,349,4.182,350,3.169,351,2.99,352,3.169,353,3.169,354,2.796,355,5.08,356,3.482,357,3.482,358,3.482,359,3.482,360,3.169,361,4.23,362,3.169,363,4.23,364,3.849,365,3.169,366,4.23,367,2.99,368,3.482,369,4.23,370,3.482,371,4.23,372,3.169,373,3.169,374,3.169,375,3.169,376,3.169,377,3.169,378,3.169,379,3.169,380,3.169]],["title/components/EventDatePage.html",[14,0.568,81,0.099]],["body/components/EventDatePage.html",[3,0.493,7,0.181,12,0.441,13,0.04,14,0.846,15,0.441,16,0.441,17,0.441,18,0.441,19,0.441,20,0.441,25,1.44,29,0.219,30,0.219,31,0.181,36,0.737,42,0.3,45,0.493,46,0.611,66,1.017,73,3.469,74,2.274,78,0.045,79,0.022,80,0.022,81,0.158,82,0.441,83,0.677,84,0.677,85,0.677,87,0.506,89,2.082,91,0.891,94,0.677,95,1.679,96,0.996,98,0.181,99,0.506,110,0.846,115,2.176,119,2.419,120,0.493,121,0.725,124,3.115,125,0.506,138,0.865,139,0.959,154,0.647,155,0.661,156,0.574,157,2.776,164,2.383,167,1.386,179,1.065,185,1.537,189,2.081,190,0.829,191,2.081,196,2.776,221,1.017,227,2.383,233,0.996,234,0.996,235,0.996,236,1.057,237,0.677,238,0.677,239,1.652,240,0.344,241,0.996,242,0.677,243,0.441,244,0.677,245,0.677,246,0.677,247,0.677,248,0.677,249,0.677,250,0.441,251,0.677,252,0.677,266,1.856,269,1.697,275,0.829,286,1.494,290,1.174,292,1.877,293,2.73,295,1.017,296,1.963,298,1.599,300,1.263,308,1.661,314,2.702,315,1.263,319,1.017,357,3.628,358,3.628,359,3.628,381,3.956,382,1.889,383,3.115,384,3.372,385,3.628,386,4.407,387,4.909,388,4.713,389,3.628,390,4.407,391,2.776,392,3.372,393,2.294,394,3.372,395,2.776,396,2.294,397,2.383,398,2.776,399,2.294,400,2.383,401,3.372,402,2.09,403,2.294,404,2.294,405,2.294,406,1.856,407,2.776,408,3.372,409,3.372,410,3.372,411,3.372,412,3.372,413,3.372,414,2.294,415,2.383,416,3.372,417,3.628,418,2.294,419,1.856,420,1.13,421,2.294,422,2.776,423,2.294,424,1.889,425,2.383,426,2.294,427,2.294,428,2.294,429,2.294,430,1.889,431,2.294,432,2.294,433,3.68,434,2.776,435,2.776,436,2.776]],["title/components/EventInfoPage.html",[15,0.568,81,0.099]],["body/components/EventInfoPage.html",[3,0.59,7,0.216,12,0.526,13,0.04,14,0.526,15,0.918,16,0.526,17,0.526,18,0.526,19,0.526,20,0.526,24,1.728,25,1.562,29,0.421,30,0.261,31,0.216,36,0.819,42,0.359,45,0.824,46,0.73,55,1.096,64,1.215,65,1.35,66,1.215,74,1.912,75,3.438,78,0.054,79,0.025,80,0.025,81,0.18,82,0.526,83,0.809,84,0.809,85,0.809,87,0.411,91,0.898,94,0.809,95,1.705,96,1.131,98,0.216,99,0.575,110,0.736,119,1.887,120,0.59,121,0.714,125,0.51,134,1.912,138,0.467,139,0.657,154,0.526,155,0.755,156,0.467,163,2.356,167,1.304,189,2.141,190,0.991,233,1.131,234,1.131,235,1.131,236,1.147,237,0.809,238,0.809,239,1.677,240,0.411,241,1.131,242,0.809,243,0.526,244,0.809,245,0.809,246,0.809,247,0.809,248,0.809,249,0.809,250,0.526,251,0.809,252,0.809,268,1.443,269,1.818,270,3.384,275,1.728,276,2.375,277,1.096,285,1.937,286,1.698,287,2.375,288,3.231,289,3.154,290,1.021,291,2.084,292,2.012,293,2.822,295,1.215,296,2.084,298,1.766,303,1.698,307,2.257,308,1.887,312,1.937,317,1.699,318,1.215,319,1.215,320,2.257,326,2.257,331,2.257,334,3.38,338,3.154,381,3.92,402,2.375,420,1.35,425,1.937,437,3.831,438,4.781,439,2.176,440,3.831,441,2.741,442,3.831,443,2.741,444,3.831,445,2.741,446,3.831,447,2.741,448,2.741,449,2.741,450,2.741,451,2.741,452,2.741,453,3.831,454,3.831]],["title/components/EventItemComponent.html",[81,0.099,243,0.568]],["body/components/EventItemComponent.html",[3,0.706,7,0.259,12,0.631,13,0.04,14,0.631,15,0.832,16,0.631,17,0.631,18,0.631,19,0.631,20,0.631,29,0.413,30,0.313,31,0.259,36,0.804,42,0.43,45,0.706,46,0.875,66,1.455,72,2.704,75,2.036,78,0.065,79,0.028,80,0.028,81,0.18,82,0.631,83,0.97,84,0.97,85,0.97,87,0.727,89,1.732,91,0.911,94,0.97,95,1.752,96,1.279,98,0.259,110,0.832,117,3.642,119,2.71,120,0.706,121,0.634,125,0.413,138,0.56,139,0.788,154,0.631,155,0.727,156,0.56,233,1.279,234,1.279,235,1.279,236,1.236,237,0.97,238,0.97,239,1.701,240,0.493,241,1.279,242,0.97,243,0.989,244,0.97,245,0.97,246,0.97,247,0.97,248,0.97,249,0.97,250,0.631,251,0.97,252,0.97,260,3.642,261,4.242,286,1.92,287,2.685,288,2.685,291,1.732,292,1.732,295,1.455,296,2.06,334,3.062,406,2.384,419,2.668,420,1.618,433,3.062,455,4.242,456,2.704,457,4.331,458,4.331,459,4.331,460,4.331,461,3.566,462,2.384,463,3.284,464,4.331,465,2.321,466,3.284,467,3.284,468,4.331,469,4.331,470,4.331,471,4.331]],["title/components/EventsPage.html",[16,0.568,81,0.099]],["body/components/EventsPage.html",[3,0.456,7,0.167,12,0.407,13,0.04,14,0.61,15,0.407,16,0.916,17,0.407,18,0.407,19,0.407,20,0.407,24,0.766,25,1.385,29,0.363,30,0.202,31,0.167,36,0.827,38,1.497,42,0.277,45,0.82,46,0.564,55,0.847,64,0.939,65,1.044,66,0.939,73,1.313,74,2.275,78,0.075,79,0.021,80,0.021,81,0.153,82,0.407,83,0.626,84,0.626,85,0.626,87,0.572,89,1.695,91,0.892,92,2.616,93,3.745,94,0.626,95,1.627,96,0.938,98,0.167,99,0.477,110,0.814,115,2.113,119,2.506,120,0.456,121,0.721,125,0.513,133,1.75,134,1.271,138,0.812,139,1.016,141,1.97,146,3.489,151,1.97,154,0.732,155,0.681,156,0.65,164,2.247,165,3.37,167,1.251,172,1.97,179,1.016,185,1.565,189,2.011,190,0.766,191,2.012,221,1.408,233,0.938,234,0.938,235,0.938,236,1.016,237,0.626,238,0.626,239,1.627,240,0.318,241,0.938,242,0.626,243,0.407,244,0.626,245,0.626,246,0.626,247,0.626,248,0.626,249,0.626,250,0.407,251,0.626,252,0.626,266,1.75,268,1.558,269,1.641,275,1.149,287,1.97,290,1.129,292,1.816,293,2.685,295,0.939,296,1.907,298,1.525,300,1.75,308,1.566,314,2.8,315,1.166,319,0.939,354,1.75,356,1.744,364,1.497,385,3.489,388,4.736,389,3.489,391,2.616,395,2.616,397,2.247,398,2.616,407,3.925,417,3.489,419,1.75,420,1.044,422,2.616,424,1.744,425,1.497,430,2.616,433,3.595,434,2.616,435,2.616,436,2.616,472,1.744,473,2.616,474,3.178,475,2.616,476,3.178,477,4.238,478,3.178,479,3.178,480,2.119,481,3.178,482,3.489,483,2.119,484,2.119,485,3.178,486,2.247,487,3.178,488,3.178,489,2.119,490,3.178,491,2.119,492,3.178,493,2.616,494,3.178,495,2.616,496,2.119,497,3.178,498,2.616,499,2.119,500,3.178,501,2.119,502,3.178,503,2.616,504,3.178,505,3.178,506,2.119,507,2.119,508,2.119,509,2.119,510,2.119,511,2.119,512,2.119,513,2.119,514,2.247,515,2.119,516,3.178,517,3.814,518,3.178,519,2.119,520,2.119,521,2.119,522,2.119,523,2.119,524,2.119,525,2.119,526,2.119,527,2.119,528,2.119,529,2.119,530,2.119,531,3.178,532,3.178]],["title/injectables/FirebaseAuthProvider.html",[22,1.068,533,0.966]],["body/injectables/FirebaseAuthProvider.html",[6,2.246,7,0.169,13,0.041,22,1.157,23,1.887,28,1.577,29,0.305,30,0.204,31,0.169,36,0.684,42,0.28,56,1.177,57,1.326,58,2.42,78,0.042,79,0.028,80,0.021,87,0.684,89,2.363,98,0.169,99,0.48,106,2.378,110,0.875,120,0.46,121,0.705,125,0.473,133,1.762,138,0.981,139,1.147,143,1.511,154,0.875,155,0.684,156,0.777,163,1.577,167,1.701,172,1.326,179,0.853,185,0.631,189,1.948,190,0.773,191,2.198,221,2.12,236,1.19,283,2.111,290,1.359,300,2.344,303,2.12,314,3.093,315,1.177,415,2.262,439,2.444,462,2.871,473,1.76,486,2.262,533,1.253,534,3.385,535,1.76,536,3.505,537,3.2,538,3.2,539,4.785,540,4.258,541,3.2,542,3.2,543,3.2,544,4.258,545,3.2,546,4.258,547,3.505,548,2.635,549,2.635,550,3.2,551,1.76,552,2.138,553,3.2,554,2.138,555,3.605,556,3.505,557,3.2,558,3.2,559,3.2,560,3.2,561,3.939,562,2.138,563,2.635,564,3.753,565,3.86,566,3.2,567,2.138,568,3.2,569,1.984,570,3.2,571,3.902,572,2.138,573,2.635,574,3.223,575,3.835,576,3.2,577,2.138,578,3.2,579,3.158,580,2.138,581,2.826,582,3.2,583,2.138,584,3.2,585,2.138,586,2.138,587,1.984,588,2.111,589,1.76,590,2.138,591,3.2,592,2.138,593,2.138,594,2.138,595,3.2,596,1.76,597,2.138,598,2.138,599,2.138,600,3.2,601,2.138,602,2.138,603,2.138,604,2.138,605,2.138,606,1.76,607,1.76,608,2.138,609,2.138,610,1.76,611,2.138,612,2.138,613,2.138,614,2.138,615,2.138,616,1.76,617,2.262,618,3.2,619,2.138,620,2.138,621,2.138,622,3.835,623,2.138,624,2.138,625,1.511,626,2.138,627,2.138,628,2.138,629,2.138,630,2.138,631,2.138,632,2.138,633,2.138,634,2.138,635,3.2,636,3.2,637,3.2,638,3.2,639,2.138,640,2.138,641,2.138,642,4.258,643,3.2,644,1.511,645,2.138,646,2.138,647,1.76,648,2.138,649,3.2,650,2.138,651,2.138,652,2.138,653,2.138]],["title/injectables/FirebaseConfigProvider.html",[23,1.31,533,0.966]],["body/injectables/FirebaseConfigProvider.html",[2,2.326,6,2.67,7,0.296,13,0.04,23,2.092,29,0.358,30,0.358,31,0.296,36,0.708,42,0.491,56,2.983,57,2.327,78,0.074,79,0.031,80,0.031,87,0.563,98,0.296,99,0.708,110,0.907,120,1.111,121,0.676,133,2.599,134,1.888,138,0.804,139,1.132,179,1,185,1.109,206,2.654,283,2.067,290,1.376,303,2.092,322,3.83,347,3.091,349,3.887,439,2.85,462,2.599,533,1.825,534,3.359,556,3.091,579,3.887,587,3.359,588,2.599,654,3.091,655,5.419,656,4.721,657,3.754,658,3.887,659,4.721,660,3.887,661,4.721,662,3.754,663,3.754,664,3.754,665,3.091,666,4.721,667,4.721,668,3.754,669,3.091,670,3.754,671,3.754,672,3.754,673,3.754,674,3.754,675,3.754,676,3.754,677,3.754,678,3.754,679,3.754,680,3.754,681,3.754,682,3.754,683,3.091,684,3.754]],["title/injectables/FirebaseDatabaseProvider.html",[24,1.068,533,0.966]],["body/injectables/FirebaseDatabaseProvider.html",[7,0.177,13,0.041,23,1.931,24,1.198,29,0.214,30,0.214,31,0.177,36,0.827,42,0.293,56,1.234,57,1.389,64,2.381,65,1.943,74,1.947,78,0.078,79,0.021,80,0.021,87,0.654,91,0.856,98,0.177,99,0.497,110,0.636,120,0.482,121,0.691,125,0.531,126,4.008,134,1.947,138,0.983,151,2.445,154,0.837,155,0.654,156,0.742,163,2.398,167,1.673,179,1.051,185,1.437,189,2.192,190,1.198,221,1.748,240,0.85,275,1.941,277,2.228,288,3.418,290,1.407,298,1.742,312,1.584,313,1.845,314,1.234,315,1.234,351,3.441,406,2.68,420,1.104,439,2.398,465,1.584,533,1.519,534,3.33,549,1.845,551,2.728,563,4.008,574,3.441,589,1.845,616,2.728,617,2.343,685,1.845,686,3.314,687,3.314,688,4.357,689,3.314,690,4.357,691,3.314,692,2.241,693,3.314,694,2.241,695,4.868,696,2.241,697,4.357,698,3.08,699,3.314,700,2.241,701,2.241,702,3.314,703,2.241,704,2.241,705,4.868,706,4.868,707,4.868,708,2.241,709,2.241,710,4.357,711,1.845,712,1.845,713,2.241,714,2.241,715,2.241,716,5.281,717,3.943,718,3.314,719,3.314,720,3.943,721,3.943,722,4.868,723,2.241,724,3.314,725,2.241,726,3.314,727,3.314,728,3.314,729,2.241,730,2.241,731,2.241,732,2.241,733,3.314,734,3.314]],["title/injectables/GeofireProvider.html",[25,0.966,533,0.966]],["body/injectables/GeofireProvider.html",[4,1.533,6,1.218,7,0.195,13,0.041,24,1.287,25,0.808,29,0.146,30,0.146,31,0.121,36,0.789,42,0.201,45,0.33,64,0.68,65,0.756,78,0.03,79,0.016,80,0.016,87,0.707,91,0.835,98,0.308,99,0.371,106,2.922,110,0.684,115,2.451,120,0.33,121,0.659,125,0.495,136,3.613,138,0.958,139,0.593,151,2.587,154,0.929,155,0.726,156,0.824,158,3.436,159,1.264,163,2.249,167,1.488,172,2.208,173,2.036,185,0.73,189,2.08,190,0.894,191,1.376,220,2.036,221,2.192,236,0.745,240,0.626,268,1.718,275,1.921,283,1.361,290,1.442,291,2.302,297,2.036,298,2.125,300,1.71,303,1.73,317,3.174,318,0.68,351,1.748,354,1.96,364,2.517,367,2.195,368,2.036,370,2.932,383,2.517,402,1.925,415,2.517,419,0.845,420,0.756,439,0.756,461,4.149,462,1.361,465,1.085,486,3.331,495,2.932,498,2.932,533,1.015,587,2.587,588,0.845,606,1.264,617,1.748,711,1.264,712,1.264,735,1.085,736,2.473,737,3.561,738,3.561,739,2.473,740,2.473,741,2.473,742,2.473,743,2.473,744,2.473,745,2.473,746,2.473,747,2.473,748,1.535,749,2.473,750,2.473,751,1.535,752,2.932,753,4.173,754,3.436,755,2.932,756,2.473,757,1.535,758,2.473,759,2.83,760,1.535,761,5.193,762,2.473,763,2.473,764,1.535,765,2.932,766,2.473,767,1.535,768,2.473,769,5.696,770,1.535,771,4.173,772,4.173,773,3.561,774,2.473,775,1.535,776,2.036,777,2.208,778,2.473,779,2.932,780,1.535,781,1.535,782,3.827,783,2.473,784,2.473,785,2.473,786,2.036,787,2.473,788,1.535,789,1.535,790,3.561,791,1.535,792,3.106,793,1.535,794,1.535,795,2.557,796,3.561,797,4.173,798,1.535,799,1.535,800,1.535,801,1.535,802,1.535,803,1.535,804,3.905,805,1.264,806,1.535,807,1.535,808,1.535,809,1.535,810,3.905,811,3.905,812,2.473,813,2.473,814,2.473,815,2.473,816,2.473,817,2.473,818,2.473,819,2.473,820,2.473,821,2.473,822,2.557,823,2.473,824,2.473,825,2.473,826,2.473,827,2.473,828,2.473,829,2.473,830,2.473,831,2.473,832,2.473,833,2.473,834,2.473,835,3.106,836,3.905,837,3.106,838,3.905,839,3.106,840,3.106,841,3.561,842,2.473,843,2.473,844,2.473,845,2.473,846,2.473,847,2.473,848,2.473,849,3.561,850,2.473,851,2.473,852,3.106,853,2.473,854,1.535,855,1.535,856,1.535,857,1.535,858,1.535,859,1.535,860,1.535,861,1.535,862,2.473,863,2.036,864,1.535,865,1.535,866,2.473,867,1.535,868,1.535,869,1.535,870,1.535,871,1.535,872,1.535,873,1.535,874,1.535,875,1.535,876,2.473,877,1.535,878,1.535,879,1.264,880,1.535,881,1.264,882,1.535,883,1.535,884,1.535,885,1.535,886,2.473,887,1.535,888,1.535,889,1.085,890,1.535,891,1.535,892,1.535,893,1.535,894,1.535,895,1.535]],["title/components/HomePage.html",[17,0.568,81,0.099]],["body/components/HomePage.html",[3,0.534,7,0.196,12,0.686,13,0.041,14,0.477,15,0.477,16,0.477,17,0.878,18,0.477,19,0.686,20,0.477,22,1.653,25,1.494,26,1.965,29,0.34,30,0.236,31,0.196,36,0.78,42,0.325,45,0.768,46,0.661,55,0.992,58,1.1,59,1.366,66,1.1,68,1.538,78,0.049,79,0.023,80,0.023,81,0.163,82,0.477,83,0.733,84,0.733,85,0.733,87,0.372,89,1.428,91,0.727,94,0.733,95,1.676,96,1.054,98,0.196,99,0.536,110,0.686,120,0.768,121,0.709,124,1.754,125,0.481,138,0.779,139,0.595,144,2.043,154,0.477,155,0.627,156,0.423,206,2.524,233,1.054,234,1.35,235,1.054,236,1.097,237,0.733,238,0.733,239,1.644,240,0.536,241,1.054,242,0.733,243,0.477,244,0.733,245,0.733,246,0.733,247,0.733,248,0.733,249,0.733,250,0.477,251,0.733,252,0.733,268,1.797,269,1.958,275,1.511,286,1.853,290,1.344,291,2.017,292,2.017,296,2.017,298,1.672,318,1.1,323,4.528,344,1.754,354,1.965,397,1.754,462,1.965,514,1.754,581,2.213,625,1.754,644,2.524,683,2.043,698,2.524,759,3.003,776,2.939,777,2.213,779,2.939,782,3.232,786,2.043,795,2.939,822,2.939,863,2.043,879,2.043,881,2.043,889,2.524,896,1.754,897,3.566,898,3.57,899,4.845,900,3.566,901,5.045,902,4.573,903,3.765,904,4.845,905,2.482,906,5.045,907,3.566,908,4.28,909,2.592,910,3.57,911,2.482,912,2.482,913,2.482,914,3.57,915,4.573,916,2.482,917,2.482,918,2.482,919,2.482,920,2.482,921,2.043,922,2.524,923,2.043,924,2.043,925,2.524,926,2.043,927,2.482,928,2.482,929,2.482,930,2.482,931,2.482,932,3.57,933,2.482,934,2.043,935,2.482,936,3.57,937,2.043,938,2.939,939,2.524,940,2.482,941,2.482,942,2.482,943,2.482,944,1.754,945,2.482,946,2.482,947,2.482,948,3.57,949,3.57,950,2.482,951,3.57,952,2.482,953,2.482,954,1.754,955,2.482,956,2.482,957,2.482,958,2.482,959,2.482,960,2.482,961,2.482,962,2.482,963,1.754,964,1.754,965,2.482,966,2.482,967,1.754]],["title/components/LoginModal.html",[18,0.568,81,0.099]],["body/components/LoginModal.html",[3,0.489,7,0.179,12,0.437,13,0.04,14,0.437,15,0.437,16,0.437,17,0.437,18,0.843,19,0.437,20,0.437,22,1.586,28,1.121,29,0.217,30,0.217,31,0.179,36,0.702,42,0.298,45,0.489,46,0.606,55,0.91,58,1.008,59,1.253,62,3.342,63,3.46,78,0.045,79,0.03,80,0.022,81,0.157,82,0.437,83,0.672,84,0.672,85,0.672,87,0.341,88,2.369,89,2.077,91,0.597,94,0.672,95,1.65,96,0.99,98,0.179,99,0.503,110,0.644,116,2.369,120,0.489,121,0.693,125,0.418,134,2.156,137,3.614,138,0.885,139,1.053,141,2.721,142,2.759,143,2.369,154,0.437,155,0.597,156,0.388,179,0.893,185,0.99,189,1.211,190,0.822,233,0.99,234,0.99,235,0.99,236,1.053,237,0.672,238,0.672,239,1.566,240,0.341,241,0.99,242,0.672,243,0.437,244,0.672,245,0.672,246,0.672,247,1.566,248,0.672,249,0.672,250,0.437,251,0.672,252,0.672,266,1.845,269,1.691,281,2.759,290,1.523,292,1.871,293,2.725,295,1.008,296,1.957,308,1.651,319,1.008,367,2.369,383,2.369,402,2.078,406,1.845,536,2.759,555,2.369,561,4.014,564,3.614,565,3.308,571,4.041,574,3.46,607,2.759,610,2.759,647,2.759,658,2.759,665,2.759,752,2.759,754,1.873,755,3.614,900,2.812,907,3.103,909,2.466,944,2.369,963,1.608,964,1.608,967,1.608,968,4.438,969,1.873,970,4.39,971,3.352,972,4.39,973,4.39,974,4.895,975,4.39,976,5.194,977,4.895,978,3.979,979,4.39,980,5.061,981,3.352,982,2.275,983,4.39,984,2.275,985,2.759,986,3.352,987,2.275,988,3.352,989,3.979,990,3.979,991,3.352,992,4.39,993,3.979,994,2.275,995,4.895,996,3.979,997,3.352,998,4.39,999,3.352,1000,3.352,1001,2.275,1002,3.352,1003,1.873,1004,2.275,1005,2.275,1006,3.352,1007,2.275,1008,2.275,1009,2.275,1010,2.275,1011,2.275,1012,2.275,1013,2.275,1014,2.275,1015,1.873,1016,1.873,1017,2.275,1018,2.275,1019,2.275,1020,2.275,1021,2.275,1022,3.352,1023,3.352,1024,2.759,1025,2.275,1026,2.275]],["title/components/LoginPage.html",[19,0.568,81,0.099]],["body/components/LoginPage.html",[3,0.603,7,0.221,12,0.538,13,0.04,14,0.538,15,0.538,16,0.538,17,0.538,18,0.858,19,0.927,20,0.538,22,1.897,29,0.267,30,0.267,31,0.221,36,0.724,42,0.367,45,0.603,46,0.747,55,1.12,58,1.242,59,1.542,62,1.737,63,3.158,78,0.055,79,0.025,80,0.025,81,0.17,82,0.538,83,0.827,84,0.827,85,0.827,87,0.42,89,2.099,91,0.67,94,0.827,95,1.711,96,1.149,98,0.221,99,0.584,110,1.054,116,3.71,120,0.603,121,0.718,125,0.483,138,0.761,139,1.072,141,3.254,154,0.538,155,0.67,156,0.477,233,1.149,234,1.149,235,1.149,236,1.158,237,0.827,238,0.827,239,1.683,240,0.42,241,1.149,242,0.827,243,0.538,244,0.827,245,0.827,246,0.827,247,1.711,248,0.827,249,0.827,250,0.538,251,0.827,252,0.827,266,2.141,269,2.06,286,1.724,290,0.747,292,2.028,293,2.833,295,1.242,296,2.099,308,1.916,319,1.242,400,3.71,482,3.202,555,2.75,561,3.412,565,3.412,573,3.678,581,2.992,777,1.737,900,3.71,907,3.71,909,3.254,963,1.981,964,3.158,967,1.981,985,4.518,1015,2.307,1016,2.307,1027,2.307,1028,3.89,1029,4.827,1030,4.827,1031,4.827,1032,4.468,1033,4.827,1034,2.802,1035,2.802,1036,4.827,1037,4.827,1038,2.802,1039,2.802,1040,4.827,1041,2.802,1042,2.802,1043,2.802,1044,2.802,1045,2.802,1046,2.802,1047,2.802,1048,2.802,1049,2.802,1050,2.802,1051,2.802,1052,3.89]],["title/components/MapComponent.html",[81,0.099,250,0.568]],["body/components/MapComponent.html",[3,0.617,7,0.226,12,0.551,13,0.04,14,0.551,15,0.551,16,0.551,17,0.551,18,0.551,19,0.551,20,0.551,26,1.579,29,0.273,30,0.273,31,0.226,36,0.593,42,0.375,45,0.617,78,0.057,79,0.026,80,0.026,81,0.194,82,0.551,83,0.847,84,0.847,85,0.847,87,0.43,88,3.615,91,0.679,94,0.847,95,1.717,96,1.168,98,0.226,99,0.593,110,0.982,117,3.447,121,0.709,125,0.431,128,3.725,133,2.491,134,1.581,138,0.871,139,1.085,154,0.551,155,0.679,156,0.489,233,1.168,234,1.44,235,1.168,236,1.169,237,0.847,238,0.847,239,1.6,240,0.43,241,1.168,242,0.847,243,0.551,244,0.847,245,0.847,246,0.847,247,0.847,248,0.847,249,0.847,250,0.936,251,0.847,252,0.847,268,1.959,291,2.325,303,1.752,317,2.451,318,1.271,322,2.028,400,2.795,406,2.177,493,4.211,514,2.028,548,3.255,581,2.451,587,3.358,588,1.579,596,4.211,660,3.255,698,3.447,759,3.171,777,1.778,782,3.902,889,2.028,903,4.014,934,3.255,937,2.362,938,2.362,939,2.028,1024,3.725,1053,2.362,1054,3.954,1055,3.954,1056,3.954,1057,5.287,1058,4.876,1059,5.115,1060,3.954,1061,2.869,1062,2.869,1063,2.869,1064,4.876,1065,2.362,1066,3.954,1067,2.869,1068,3.954,1069,2.869,1070,3.954,1071,3.954,1072,2.869,1073,2.362,1074,2.869,1075,2.869,1076,2.869,1077,2.869,1078,2.869,1079,2.869,1080,2.869,1081,2.869,1082,2.869,1083,2.869,1084,2.869]],["title/components/MyApp.html",[20,0.568,81,0.099]],["body/components/MyApp.html",[3,0.612,7,0.224,12,0.547,13,0.04,14,0.547,15,0.547,16,0.865,17,0.979,18,0.547,19,0.547,20,0.933,22,1.756,27,1.764,28,1.937,29,0.271,30,0.271,31,0.224,36,0.827,42,0.372,45,1.045,46,0.758,48,2.343,49,4.076,50,2.012,51,2.012,52,4.076,53,2.012,54,2.012,55,1.138,58,1.261,59,1.567,69,2.343,78,0.056,79,0.025,80,0.025,81,0.182,82,0.547,83,0.84,84,0.84,85,0.84,91,0.729,94,0.84,95,1.688,96,1.161,98,0.224,99,0.59,110,0.755,120,0.612,121,0.74,123,2.343,125,0.515,135,3.709,138,0.768,139,1.08,145,2.343,154,0.755,155,0.729,156,0.67,179,0.758,185,0.84,233,1.161,234,1.161,235,1.161,236,1.165,237,0.84,238,0.84,239,1.715,240,0.427,241,1.161,242,0.84,243,0.547,244,0.84,245,0.84,246,0.84,247,0.84,248,0.84,249,0.84,250,0.547,251,0.84,252,0.84,268,0.93,269,1.991,286,1.261,290,0.758,303,1.261,318,1.261,319,1.261,344,2.78,475,2.343,503,3.237,547,4.001,571,2.78,588,1.567,625,2.012,669,3.237,897,2.012,908,4.747,909,2.793,944,2.012,954,2.012,1065,2.343,1073,2.343,1085,2.343,1086,3.932,1087,5.592,1088,4.86,1089,4.86,1090,3.932,1091,2.846,1092,3.932,1093,2.846,1094,3.932,1095,2.846,1096,2.846,1097,3.932,1098,2.846,1099,4.505,1100,2.846,1101,2.846,1102,2.846,1103,2.846,1104,2.846,1105,2.846,1106,2.846,1107,2.846,1108,2.846,1109,2.846,1110,2.846,1111,2.846,1112,2.846,1113,2.846,1114,2.846,1115,2.846,1116,2.846,1117,2.846,1118,2.846,1119,2.846,1120,2.846,1121,2.846,1122,2.846,1123,2.846,1124,3.932]],["title/classes/Organization.html",[78,0.058,277,1.182]],["body/classes/Organization.html",[7,0.339,13,0.04,29,0.41,30,0.41,31,0.339,78,0.108,79,0.033,80,0.033,87,0.645,98,0.339,99,0.77,121,0.671,125,0.489,155,0.883,167,1.739,179,1.145,264,3.039,277,2.38,279,3.626,897,4.162,1125,3.539,1126,4.299,1127,5.13,1128,4.299,1129,4.299,1130,4.299]],["title/coverage.html",[1131,3.323]],["body/coverage.html",[12,0.726,13,0.04,14,0.726,15,0.726,16,0.726,17,0.726,18,0.726,19,0.726,20,0.726,22,1.367,23,1.676,24,1.367,25,1.236,31,0.298,56,2.082,58,1.676,62,2.345,64,1.676,68,2.345,73,2.345,75,2.345,78,0.102,79,0.031,80,0.031,81,0.201,82,0.726,86,3.114,91,0.567,125,0.36,191,1.676,216,3.114,240,0.567,243,0.726,250,0.726,260,2.674,263,3.114,277,1.512,284,3.114,285,3.353,304,3.114,339,3.114,381,3.353,382,3.114,455,3.114,456,3.114,472,3.114,533,1.775,534,3.212,535,3.114,569,2.94,654,3.114,685,3.114,735,2.674,896,3.663,922,2.674,925,2.674,939,2.674,968,3.114,969,3.114,1027,3.114,1053,3.114,1085,3.114,1125,3.114,1131,3.114,1132,3.782,1133,3.782,1134,3.782,1135,3.782,1136,3.782,1137,4.743,1138,4.743,1139,5.71,1140,3.782,1141,3.782,1142,3.782,1143,3.782,1144,3.782,1145,3.782,1146,3.782,1147,3.782,1148,4.743,1149,4.743,1150,3.782,1151,3.782,1152,3.782,1153,4.743,1154,4.743,1155,4.743,1156,3.782,1157,3.782,1158,3.782,1159,3.782,1160,3.782,1161,3.782]],["title/dependencies.html",[2,1.752,1162,2.468]],["body/dependencies.html",[2,1.918,13,0.04,38,3.414,39,3.711,42,0.509,45,1.254,46,1.037,49,2.752,50,2.752,51,2.752,52,2.752,53,2.752,54,2.752,79,0.031,80,0.031,240,0.584,259,2.752,268,1.272,298,1.557,318,1.725,439,1.918,759,2.414,954,4.122,1003,3.205,1163,3.893,1164,5.941,1165,4.83,1166,3.893,1167,3.893,1168,3.893,1169,3.893,1170,5.251,1171,3.893,1172,3.893,1173,4.83,1174,5.98,1175,3.893,1176,3.893,1177,3.893,1178,3.893,1179,3.893,1180,3.893,1181,3.893,1182,3.893,1183,3.893,1184,3.893,1185,3.893,1186,3.893,1187,3.893,1188,3.893,1189,3.893,1190,3.893,1191,3.893,1192,3.893,1193,3.893,1194,3.893,1195,3.893,1196,3.893,1197,3.893,1198,3.893,1199,3.893,1200,3.893]],["title/index.html",[98,0.233,1201,2.434]],["body/index.html",[0,2.102,1,3.845,2,1.863,3,0.814,4,2.345,5,2.674,6,1.863,7,0.298,8,3.114,9,3.114,10,3.114,11,3.114,12,0.995,13,0.04,14,0.995,15,0.995,16,0.995,17,0.995,18,0.995,19,0.995,20,0.995,21,4.473,22,1.873,23,2.297,24,1.873,25,1.693,26,2.611,27,2.345,28,1.863,70,3.296,78,0.075,79,0.031,80,0.031,81,0.127,82,1.113,243,1.113,250,1.113,253,3.114,254,3.114,255,3.114,533,1.236,765,3.114,1201,3.114,1202,3.782,1203,3.782,1204,3.782]],["title/modules.html",[0,1.789]],["body/modules.html",[0,2.098,1,2.935,13,0.035,39,3.837,70,2.607,79,0.035,80,0.035,90,4.469,1205,5.428,1206,5.428]],["title/miscellaneous/typealiases.html",[1207,1.53,1208,3.556]],["body/miscellaneous/typealiases.html",[13,0.035,79,0.035,80,0.035,98,0.368,115,2.516,125,0.445,291,2.332,419,3.125,735,3.304,805,3.848,1207,2.897,1209,4.674,1210,5.387]],["title/miscellaneous/variables.html",[569,2.204,1207,1.53]],["body/miscellaneous/variables.html",[13,0.038,79,0.034,80,0.034,98,0.358,115,2.347,125,0.432,179,1.411,185,1.564,268,1.731,291,2.118,354,2.916,569,2.814,644,3.744,896,3.208,921,3.737,922,3.965,923,3.737,924,3.737,925,3.965,926,3.737,1207,2.814,1211,5.297]]],"invertedIndex":[["",{"_index":13,"title":{},"body":{"modules/AppModule.html":{},"components/CalendarComponent.html":{},"modules/ComponentsModule.html":{},"classes/Device.html":{},"components/DeviceInfoPage.html":{},"classes/Event.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseConfigProvider.html":{},"injectables/FirebaseDatabaseProvider.html":{},"injectables/GeofireProvider.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MapComponent.html":{},"components/MyApp.html":{},"classes/Organization.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":216,"title":{},"body":{"components/CalendarComponent.html":{},"coverage.html":{}}}],["0.8.26",{"_index":1200,"title":{},"body":{"dependencies.html":{}}}],["0/11",{"_index":1134,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":220,"title":{},"body":{"components/CalendarComponent.html":{},"injectables/GeofireProvider.html":{}}}],["1).getday",{"_index":214,"title":{},"body":{"components/CalendarComponent.html":{}}}],["1.3.3",{"_index":1188,"title":{},"body":{"dependencies.html":{}}}],["1.6",{"_index":469,"title":{},"body":{"components/EventItemComponent.html":{}}}],["1.61",{"_index":834,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["1/1",{"_index":1153,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":434,"title":{},"body":{"components/EventDatePage.html":{},"components/EventsPage.html":{}}}],["10/13",{"_index":1147,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1139,"title":{},"body":{"coverage.html":{}}}],["11",{"_index":1202,"title":{},"body":{"index.html":{}}}],["11/13",{"_index":1159,"title":{},"body":{"coverage.html":{}}}],["11/14",{"_index":1151,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":937,"title":{},"body":{"components/HomePage.html":{},"components/MapComponent.html":{}}}],["17",{"_index":952,"title":{},"body":{"components/HomePage.html":{}}}],["18/19",{"_index":1136,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":765,"title":{},"body":{"injectables/GeofireProvider.html":{},"index.html":{}}}],["2.0.2",{"_index":1180,"title":{},"body":{"dependencies.html":{}}}],["2.1.3",{"_index":1183,"title":{},"body":{"dependencies.html":{}}}],["2.2.0",{"_index":1173,"title":{},"body":{"dependencies.html":{}}}],["2.4.2",{"_index":1186,"title":{},"body":{"dependencies.html":{}}}],["2.4.6",{"_index":1181,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":435,"title":{},"body":{"components/EventDatePage.html":{},"components/EventsPage.html":{}}}],["2000",{"_index":1017,"title":{},"body":{"components/LoginModal.html":{}}}],["3",{"_index":1204,"title":{},"body":{"index.html":{}}}],["3.0.0",{"_index":1193,"title":{},"body":{"dependencies.html":{}}}],["3.6.0",{"_index":1198,"title":{},"body":{"dependencies.html":{}}}],["3.9.2",{"_index":1191,"title":{},"body":{"dependencies.html":{}}}],["3/10",{"_index":1152,"title":{},"body":{"coverage.html":{}}}],["3/3",{"_index":1143,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":1138,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":939,"title":{},"body":{"components/HomePage.html":{},"components/MapComponent.html":{},"coverage.html":{}}}],["3000",{"_index":1047,"title":{},"body":{"components/LoginPage.html":{}}}],["4",{"_index":1203,"title":{},"body":{"index.html":{}}}],["4.1.2",{"_index":1190,"title":{},"body":{"dependencies.html":{}}}],["4.14.0",{"_index":1171,"title":{},"body":{"dependencies.html":{}}}],["4.15.0",{"_index":1170,"title":{},"body":{"dependencies.html":{}}}],["4.5.5",{"_index":1179,"title":{},"body":{"dependencies.html":{}}}],["4/9",{"_index":1149,"title":{},"body":{"coverage.html":{}}}],["41.7002",{"_index":926,"title":{},"body":{"components/HomePage.html":{},"miscellaneous/variables.html":{}}}],["44",{"_index":1148,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":417,"title":{},"body":{"components/EventDatePage.html":{},"components/EventsPage.html":{}}}],["5.0.2",{"_index":1185,"title":{},"body":{"dependencies.html":{}}}],["5.0.4",{"_index":1177,"title":{},"body":{"dependencies.html":{}}}],["5.2.11",{"_index":1164,"title":{},"body":{"dependencies.html":{}}}],["5.5.11",{"_index":1195,"title":{},"body":{"dependencies.html":{}}}],["5.5.4",{"_index":1189,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":1141,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":436,"title":{},"body":{"components/EventDatePage.html":{},"components/EventsPage.html":{}}}],["6/9",{"_index":1145,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":1144,"title":{},"body":{"coverage.html":{}}}],["7.0.0",{"_index":1176,"title":{},"body":{"dependencies.html":{}}}],["7/10",{"_index":1155,"title":{},"body":{"coverage.html":{}}}],["7/7",{"_index":1140,"title":{},"body":{"coverage.html":{}}}],["70",{"_index":1154,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":1137,"title":{},"body":{"coverage.html":{}}}],["76",{"_index":1146,"title":{},"body":{"coverage.html":{}}}],["78",{"_index":1150,"title":{},"body":{"coverage.html":{}}}],["81",{"_index":1156,"title":{},"body":{"coverage.html":{}}}],["84",{"_index":1158,"title":{},"body":{"coverage.html":{}}}],["86.2379",{"_index":923,"title":{},"body":{"components/HomePage.html":{},"miscellaneous/variables.html":{}}}],["9",{"_index":358,"title":{},"body":{"classes/Event.html":{},"components/EventDatePage.html":{}}}],["9/11",{"_index":1157,"title":{},"body":{"coverage.html":{}}}],["9/9",{"_index":1142,"title":{},"body":{"coverage.html":{}}}],["94",{"_index":1135,"title":{},"body":{"coverage.html":{}}}],["_createngprob",{"_index":511,"title":{},"body":{"components/EventsPage.html":{}}}],["_rang",{"_index":385,"title":{},"body":{"components/EventDatePage.html":{},"components/EventsPage.html":{}}}],["_user",{"_index":539,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["abstractcontrol",{"_index":989,"title":{},"body":{"components/LoginModal.html":{}}}],["acc",{"_index":851,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["acc[value[0",{"_index":849,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["access",{"_index":617,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseDatabaseProvider.html":{},"injectables/GeofireProvider.html":{}}}],["accessor",{"_index":548,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{},"components/MapComponent.html":{}}}],["account",{"_index":564,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{},"components/LoginModal.html":{}}}],["action",{"_index":143,"title":{},"body":{"components/CalendarComponent.html":{},"injectables/FirebaseAuthProvider.html":{},"components/LoginModal.html":{}}}],["actual_compon",{"_index":252,"title":{},"body":{"components/CalendarComponent.html":{},"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MapComponent.html":{},"components/MyApp.html":{}}}],["add",{"_index":863,"title":{},"body":{"injectables/GeofireProvider.html":{},"components/HomePage.html":{}}}],["address",{"_index":648,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["afterviewinit",{"_index":1058,"title":{},"body":{"components/MapComponent.html":{}}}],["agenda",{"_index":531,"title":{},"body":{"components/EventsPage.html":{}}}],["alert",{"_index":959,"title":{},"body":{"components/HomePage.html":{}}}],["alias",{"_index":1209,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allow",{"_index":88,"title":{},"body":{"components/CalendarComponent.html":{},"components/LoginModal.html":{},"components/MapComponent.html":{}}}],["along",{"_index":494,"title":{},"body":{"components/EventsPage.html":{}}}],["alreadi",{"_index":1024,"title":{},"body":{"components/LoginModal.html":{},"components/MapComponent.html":{}}}],["amazon",{"_index":1129,"title":{},"body":{"classes/Organization.html":{}}}],["amazon.com",{"_index":1130,"title":{},"body":{"classes/Organization.html":{}}}],["android",{"_index":1175,"title":{},"body":{"dependencies.html":{}}}],["angular",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"modules/ComponentsModule.html":{},"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MyApp.html":{},"dependencies.html":{}}}],["angular/anim",{"_index":1163,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":259,"title":{},"body":{"modules/ComponentsModule.html":{},"components/DeviceInfoPage.html":{},"dependencies.html":{}}}],["angular/compil",{"_index":1165,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"components/CalendarComponent.html":{},"modules/ComponentsModule.html":{},"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseConfigProvider.html":{},"injectables/FirebaseDatabaseProvider.html":{},"injectables/GeofireProvider.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MapComponent.html":{},"components/MyApp.html":{},"dependencies.html":{}}}],["angular/form",{"_index":1003,"title":{},"body":{"components/LoginModal.html":{},"dependencies.html":{}}}],["angular/http",{"_index":1167,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"components/EventsPage.html":{},"dependencies.html":{}}}],["anim",{"_index":949,"title":{},"body":{"components/HomePage.html":{}}}],["anonym",{"_index":573,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{},"components/LoginPage.html":{}}}],["api",{"_index":619,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["api_key_for_browser_debug",{"_index":1116,"title":{},"body":{"components/MyApp.html":{}}}],["api_key_for_browser_releas",{"_index":1115,"title":{},"body":{"components/MyApp.html":{}}}],["apikey",{"_index":668,"title":{},"body":{"injectables/FirebaseConfigProvider.html":{}}}],["app.compon",{"_index":47,"title":{},"body":{"modules/AppModule.html":{}}}],["app.html",{"_index":1086,"title":{},"body":{"components/MyApp.html":{}}}],["appmodul",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"index.html":{},"modules.html":{}}}],["approach",{"_index":819,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["appropi",{"_index":986,"title":{},"body":{"components/LoginModal.html":{}}}],["around",{"_index":790,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["arr",{"_index":517,"title":{},"body":{"components/EventsPage.html":{}}}],["arr.push(ev",{"_index":526,"title":{},"body":{"components/EventsPage.html":{}}}],["arr.push(events[key",{"_index":519,"title":{},"body":{"components/EventsPage.html":{}}}],["arr.sort((on",{"_index":527,"title":{},"body":{"components/EventsPage.html":{}}}],["array",{"_index":135,"title":{},"body":{"components/CalendarComponent.html":{},"components/MyApp.html":{}}}],["associ",{"_index":497,"title":{},"body":{"components/EventsPage.html":{}}}],["async",{"_index":901,"title":{},"body":{"components/HomePage.html":{}}}],["async).titl",{"_index":453,"title":{},"body":{"components/EventInfoPage.html":{}}}],["auth",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MyApp.html":{}}}],["auth.t",{"_index":535,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{},"coverage.html":{}}}],["auth.ts:101",{"_index":567,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["auth.ts:110",{"_index":577,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["auth.ts:125",{"_index":562,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["auth.ts:141",{"_index":554,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["auth.ts:15",{"_index":550,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["auth.ts:159",{"_index":583,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["auth.ts:24",{"_index":586,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["auth.ts:39",{"_index":572,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["auth.ts:56",{"_index":580,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["auth.ts:66",{"_index":552,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["auth/firebas",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"injectables/FirebaseAuthProvider.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MyApp.html":{},"coverage.html":{}}}],["auth/invalid",{"_index":646,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["auth/us",{"_index":643,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["auth/wrong",{"_index":650,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["authdomain",{"_index":670,"title":{},"body":{"injectables/FirebaseConfigProvider.html":{}}}],["avail",{"_index":1109,"title":{},"body":{"components/MyApp.html":{}}}],["await",{"_index":932,"title":{},"body":{"components/HomePage.html":{}}}],["away",{"_index":471,"title":{},"body":{"components/EventItemComponent.html":{}}}],["awesom",{"_index":955,"title":{},"body":{"components/HomePage.html":{}}}],["back",{"_index":145,"title":{},"body":{"components/CalendarComponent.html":{},"components/MyApp.html":{}}}],["backend",{"_index":1036,"title":{},"body":{"components/LoginPage.html":{}}}],["bar",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"components/MyApp.html":{},"dependencies.html":{}}}],["base",{"_index":136,"title":{},"body":{"components/CalendarComponent.html":{},"injectables/GeofireProvider.html":{}}}],["based",{"_index":208,"title":{},"body":{"components/CalendarComponent.html":{}}}],["be",{"_index":660,"title":{},"body":{"injectables/FirebaseConfigProvider.html":{},"components/MapComponent.html":{}}}],["befor",{"_index":397,"title":{},"body":{"components/EventDatePage.html":{},"components/EventsPage.html":{},"components/HomePage.html":{}}}],["between",{"_index":752,"title":{},"body":{"injectables/GeofireProvider.html":{},"components/LoginModal.html":{}}}],["bit",{"_index":458,"title":{},"body":{"components/EventItemComponent.html":{}}}],["boolean",{"_index":159,"title":{},"body":{"components/CalendarComponent.html":{},"injectables/GeofireProvider.html":{}}}],["bootstrap",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"modules/ComponentsModule.html":{},"index.html":{}}}],["bottom",{"_index":966,"title":{},"body":{"components/HomePage.html":{}}}],["bound",{"_index":485,"title":{},"body":{"components/EventsPage.html":{}}}],["brief",{"_index":457,"title":{},"body":{"components/EventItemComponent.html":{}}}],["brows",{"_index":90,"title":{},"body":{"components/CalendarComponent.html":{},"modules.html":{}}}],["browser",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/src/dom/debug/ng_prob",{"_index":512,"title":{},"body":{"components/EventsPage.html":{}}}],["browsermodul",{"_index":37,"title":{},"body":{"modules/AppModule.html":{}}}],["button",{"_index":1120,"title":{},"body":{"components/MyApp.html":{}}}],["calendar",{"_index":92,"title":{},"body":{"components/CalendarComponent.html":{},"components/EventsPage.html":{}}}],["calendar'},{'nam",{"_index":238,"title":{},"body":{"components/CalendarComponent.html":{},"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MapComponent.html":{},"components/MyApp.html":{}}}],["calendar.html",{"_index":97,"title":{},"body":{"components/CalendarComponent.html":{}}}],["calendar/calendar",{"_index":257,"title":{},"body":{"modules/ComponentsModule.html":{}}}],["calendarcompon",{"_index":82,"title":{"components/CalendarComponent.html":{}},"body":{"components/CalendarComponent.html":{},"modules/ComponentsModule.html":{},"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MapComponent.html":{},"components/MyApp.html":{},"coverage.html":{},"index.html":{}}}],["calendarcomponent.monthnames[this.date.getmonth",{"_index":203,"title":{},"body":{"components/CalendarComponent.html":{}}}],["calendarday",{"_index":100,"title":{},"body":{"components/CalendarComponent.html":{}}}],["call",{"_index":400,"title":{},"body":{"components/EventDatePage.html":{},"components/LoginPage.html":{},"components/MapComponent.html":{}}}],["callback",{"_index":716,"title":{},"body":{"injectables/FirebaseDatabaseProvider.html":{}}}],["camera",{"_index":889,"title":{},"body":{"injectables/GeofireProvider.html":{},"components/HomePage.html":{},"components/MapComponent.html":{}}}],["case",{"_index":642,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["catch((error",{"_index":622,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["catch(err",{"_index":962,"title":{},"body":{"components/HomePage.html":{}}}],["center",{"_index":822,"title":{},"body":{"injectables/GeofireProvider.html":{},"components/HomePage.html":{}}}],["centeronus",{"_index":902,"title":{},"body":{"components/HomePage.html":{}}}],["chain",{"_index":1071,"title":{},"body":{"components/MapComponent.html":{}}}],["chang",{"_index":402,"title":{},"body":{"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"injectables/GeofireProvider.html":{},"components/LoginModal.html":{}}}],["check",{"_index":607,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{},"components/LoginModal.html":{}}}],["checkpassword",{"_index":972,"title":{},"body":{"components/LoginModal.html":{}}}],["checksignedin",{"_index":540,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["class",{"_index":78,"title":{"classes/Device.html":{},"classes/Event.html":{},"classes/Organization.html":{}},"body":{"modules/AppModule.html":{},"components/CalendarComponent.html":{},"modules/ComponentsModule.html":{},"classes/Device.html":{},"components/DeviceInfoPage.html":{},"classes/Event.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseConfigProvider.html":{},"injectables/FirebaseDatabaseProvider.html":{},"injectables/GeofireProvider.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MapComponent.html":{},"components/MyApp.html":{},"classes/Organization.html":{},"coverage.html":{},"index.html":{}}}],["clear",{"_index":395,"title":{},"body":{"components/EventDatePage.html":{},"components/EventsPage.html":{}}}],["cli",{"_index":1166,"title":{},"body":{"dependencies.html":{}}}],["click",{"_index":786,"title":{},"body":{"injectables/GeofireProvider.html":{},"components/HomePage.html":{}}}],["close",{"_index":983,"title":{},"body":{"components/LoginModal.html":{}}}],["closemod",{"_index":975,"title":{},"body":{"components/LoginModal.html":{}}}],["cluster_appmodul",{"_index":8,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_bootstrap",{"_index":10,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_declar",{"_index":9,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_provid",{"_index":11,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_componentsmodul",{"_index":253,"title":{},"body":{"modules/ComponentsModule.html":{},"index.html":{}}}],["cluster_componentsmodule_declar",{"_index":254,"title":{},"body":{"modules/ComponentsModule.html":{},"index.html":{}}}],["cluster_componentsmodule_export",{"_index":255,"title":{},"body":{"modules/ComponentsModule.html":{},"index.html":{}}}],["code",{"_index":556,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseConfigProvider.html":{}}}],["combinelatest",{"_index":812,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["commonmodul",{"_index":258,"title":{},"body":{"modules/ComponentsModule.html":{}}}],["compar",{"_index":345,"title":{},"body":{"classes/Event.html":{}}}],["compare(on",{"_index":363,"title":{},"body":{"classes/Event.html":{}}}],["comparison",{"_index":366,"title":{},"body":{"classes/Event.html":{}}}],["complet",{"_index":652,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["compon",{"_index":81,"title":{"components/CalendarComponent.html":{},"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MapComponent.html":{},"components/MyApp.html":{}},"body":{"components/CalendarComponent.html":{},"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MapComponent.html":{},"components/MyApp.html":{},"coverage.html":{},"index.html":{}}}],["component_templ",{"_index":237,"title":{},"body":{"components/CalendarComponent.html":{},"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MapComponent.html":{},"components/MyApp.html":{}}}],["components/components.modul",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["componentsmodul",{"_index":70,"title":{"modules/ComponentsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ComponentsModule.html":{},"index.html":{},"modules.html":{}}}],["config",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseConfigProvider.html":{},"injectables/FirebaseDatabaseProvider.html":{}}}],["config.t",{"_index":654,"title":{},"body":{"injectables/FirebaseConfigProvider.html":{},"coverage.html":{}}}],["config.ts:13",{"_index":656,"title":{},"body":{"injectables/FirebaseConfigProvider.html":{}}}],["config.ts:21",{"_index":657,"title":{},"body":{"injectables/FirebaseConfigProvider.html":{}}}],["config/firebas",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseConfigProvider.html":{},"injectables/FirebaseDatabaseProvider.html":{},"coverage.html":{}}}],["confirm",{"_index":995,"title":{},"body":{"components/LoginModal.html":{}}}],["consid",{"_index":595,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["console.error(error",{"_index":624,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["console.log(\"hello",{"_index":623,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["console.log(result",{"_index":614,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["const",{"_index":206,"title":{},"body":{"components/CalendarComponent.html":{},"injectables/FirebaseConfigProvider.html":{},"components/HomePage.html":{}}}],["constructor",{"_index":120,"title":{},"body":{"components/CalendarComponent.html":{},"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseConfigProvider.html":{},"injectables/FirebaseDatabaseProvider.html":{},"injectables/GeofireProvider.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MyApp.html":{}}}],["constructor(firebaseconfig",{"_index":549,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseDatabaseProvider.html":{}}}],["constructor(firebasedatabas",{"_index":748,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["constructor(loadingctrl",{"_index":905,"title":{},"body":{"components/HomePage.html":{}}}],["constructor(navctrl",{"_index":295,"title":{},"body":{"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{}}}],["constructor(platform",{"_index":1091,"title":{},"body":{"components/MyApp.html":{}}}],["constructor(priv",{"_index":465,"title":{},"body":{"components/EventItemComponent.html":{},"injectables/FirebaseDatabaseProvider.html":{},"injectables/GeofireProvider.html":{}}}],["constructor(publ",{"_index":319,"title":{},"body":{"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventsPage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MyApp.html":{}}}],["contain",{"_index":406,"title":{},"body":{"components/EventDatePage.html":{},"components/EventItemComponent.html":{},"injectables/FirebaseDatabaseProvider.html":{},"components/LoginModal.html":{},"components/MapComponent.html":{}}}],["content",{"_index":944,"title":{},"body":{"components/HomePage.html":{},"components/LoginModal.html":{},"components/MyApp.html":{}}}],["control",{"_index":988,"title":{},"body":{"components/LoginModal.html":{}}}],["control.valu",{"_index":991,"title":{},"body":{"components/LoginModal.html":{}}}],["convert",{"_index":415,"title":{},"body":{"components/EventDatePage.html":{},"injectables/FirebaseAuthProvider.html":{},"injectables/GeofireProvider.html":{}}}],["converterrorcod",{"_index":541,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["converterrorcode(error",{"_index":553,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["converttoobj",{"_index":739,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["converttoobj(loc",{"_index":750,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["converttotupl",{"_index":740,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["converttotuple(loc",{"_index":756,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["cooki",{"_index":608,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["cordova",{"_index":1174,"title":{},"body":{"dependencies.html":{}}}],["coverag",{"_index":1131,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":563,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseDatabaseProvider.html":{}}}],["cred",{"_index":667,"title":{},"body":{"injectables/FirebaseConfigProvider.html":{}}}],["credenti",{"_index":579,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseConfigProvider.html":{}}}],["current",{"_index":172,"title":{},"body":{"components/CalendarComponent.html":{},"components/EventsPage.html":{},"injectables/FirebaseAuthProvider.html":{},"injectables/GeofireProvider.html":{}}}],["currentmonth",{"_index":101,"title":{},"body":{"components/CalendarComponent.html":{}}}],["currentyear",{"_index":102,"title":{},"body":{"components/CalendarComponent.html":{}}}],["custom",{"_index":682,"title":{},"body":{"injectables/FirebaseConfigProvider.html":{}}}],["custom_elements_schema",{"_index":35,"title":{},"body":{"modules/AppModule.html":{}}}],["databas",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"components/DeviceInfoPage.html":{},"components/EventInfoPage.html":{},"components/EventsPage.html":{},"injectables/FirebaseDatabaseProvider.html":{},"injectables/GeofireProvider.html":{}}}],["database.datasnapshot",{"_index":717,"title":{},"body":{"injectables/FirebaseDatabaseProvider.html":{}}}],["database.refer",{"_index":697,"title":{},"body":{"injectables/FirebaseDatabaseProvider.html":{}}}],["database.t",{"_index":685,"title":{},"body":{"injectables/FirebaseDatabaseProvider.html":{},"coverage.html":{}}}],["database.ts:115",{"_index":692,"title":{},"body":{"injectables/FirebaseDatabaseProvider.html":{}}}],["database.ts:23",{"_index":696,"title":{},"body":{"injectables/FirebaseDatabaseProvider.html":{}}}],["database.ts:30",{"_index":701,"title":{},"body":{"injectables/FirebaseDatabaseProvider.html":{}}}],["database.ts:37",{"_index":704,"title":{},"body":{"injectables/FirebaseDatabaseProvider.html":{}}}],["database.ts:44",{"_index":694,"title":{},"body":{"injectables/FirebaseDatabaseProvider.html":{}}}],["database.ts:64",{"_index":709,"title":{},"body":{"injectables/FirebaseDatabaseProvider.html":{}}}],["database.ts:71",{"_index":703,"title":{},"body":{"injectables/FirebaseDatabaseProvider.html":{}}}],["database.ts:91",{"_index":708,"title":{},"body":{"injectables/FirebaseDatabaseProvider.html":{}}}],["database.ts:98",{"_index":700,"title":{},"body":{"injectables/FirebaseDatabaseProvider.html":{}}}],["database/firebas",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"components/DeviceInfoPage.html":{},"components/EventInfoPage.html":{},"components/EventsPage.html":{},"injectables/FirebaseDatabaseProvider.html":{},"injectables/GeofireProvider.html":{},"coverage.html":{}}}],["databaseurl",{"_index":672,"title":{},"body":{"injectables/FirebaseConfigProvider.html":{}}}],["date",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"components/CalendarComponent.html":{},"components/DeviceInfoPage.html":{},"classes/Event.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventsPage.html":{},"injectables/FirebaseDatabaseProvider.html":{}}}],["date'},{'nam",{"_index":242,"title":{},"body":{"components/CalendarComponent.html":{},"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MapComponent.html":{},"components/MyApp.html":{}}}],["date(based",{"_index":209,"title":{},"body":{"components/CalendarComponent.html":{}}}],["date(event[0].startd",{"_index":524,"title":{},"body":{"components/EventsPage.html":{}}}],["date(one.endd",{"_index":377,"title":{},"body":{"classes/Event.html":{}}}],["date(one.startd",{"_index":372,"title":{},"body":{"classes/Event.html":{}}}],["date(this.date.getfullyear",{"_index":212,"title":{},"body":{"components/CalendarComponent.html":{}}}],["date(this.today",{"_index":197,"title":{},"body":{"components/CalendarComponent.html":{}}}],["date(this.today.getfullyear",{"_index":193,"title":{},"body":{"components/CalendarComponent.html":{}}}],["date(two.endd",{"_index":379,"title":{},"body":{"classes/Event.html":{}}}],["date(two.startd",{"_index":374,"title":{},"body":{"classes/Event.html":{}}}],["date.html",{"_index":384,"title":{},"body":{"components/EventDatePage.html":{}}}],["date.t",{"_index":382,"title":{},"body":{"components/EventDatePage.html":{},"coverage.html":{}}}],["date.todatestr",{"_index":356,"title":{},"body":{"classes/Event.html":{},"components/EventsPage.html":{}}}],["date.totimestr",{"_index":361,"title":{},"body":{"classes/Event.html":{}}}],["date.ts:21",{"_index":404,"title":{},"body":{"components/EventDatePage.html":{}}}],["date.ts:26",{"_index":418,"title":{},"body":{"components/EventDatePage.html":{}}}],["date.ts:31",{"_index":403,"title":{},"body":{"components/EventDatePage.html":{}}}],["date.ts:36",{"_index":405,"title":{},"body":{"components/EventDatePage.html":{}}}],["date.ts:41",{"_index":392,"title":{},"body":{"components/EventDatePage.html":{}}}],["date.ts:43",{"_index":416,"title":{},"body":{"components/EventDatePage.html":{}}}],["date.ts:52",{"_index":399,"title":{},"body":{"components/EventDatePage.html":{}}}],["date.ts:60",{"_index":396,"title":{},"body":{"components/EventDatePage.html":{}}}],["date.ts:76",{"_index":393,"title":{},"body":{"components/EventDatePage.html":{}}}],["date.ts:84",{"_index":414,"title":{},"body":{"components/EventDatePage.html":{}}}],["date/ev",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"components/EventDatePage.html":{},"components/EventsPage.html":{},"coverage.html":{}}}],["dates.push(events[key",{"_index":432,"title":{},"body":{"components/EventDatePage.html":{}}}],["dates[events[key].startd",{"_index":518,"title":{},"body":{"components/EventsPage.html":{}}}],["day",{"_index":157,"title":{},"body":{"components/CalendarComponent.html":{},"components/EventDatePage.html":{}}}],["day.getd",{"_index":232,"title":{},"body":{"components/CalendarComponent.html":{}}}],["day.setdate(d",{"_index":210,"title":{},"body":{"components/CalendarComponent.html":{}}}],["daysinlastmonth",{"_index":103,"title":{},"body":{"components/CalendarComponent.html":{}}}],["daysinnextmonth",{"_index":104,"title":{},"body":{"components/CalendarComponent.html":{}}}],["daysinthismonth",{"_index":105,"title":{},"body":{"components/CalendarComponent.html":{}}}],["declar",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"modules/ComponentsModule.html":{},"injectables/GeofireProvider.html":{},"index.html":{}}}],["decor",{"_index":1065,"title":{},"body":{"components/MapComponent.html":{},"components/MyApp.html":{}}}],["default",{"_index":179,"title":{},"body":{"components/CalendarComponent.html":{},"classes/Device.html":{},"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventsPage.html":{},"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseConfigProvider.html":{},"injectables/FirebaseDatabaseProvider.html":{},"components/LoginModal.html":{},"components/MyApp.html":{},"classes/Organization.html":{},"miscellaneous/variables.html":{}}}],["defaultradiu",{"_index":771,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["defin",{"_index":121,"title":{},"body":{"components/CalendarComponent.html":{},"classes/Device.html":{},"components/DeviceInfoPage.html":{},"classes/Event.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseConfigProvider.html":{},"injectables/FirebaseDatabaseProvider.html":{},"injectables/GeofireProvider.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MapComponent.html":{},"components/MyApp.html":{},"classes/Organization.html":{}}}],["delet",{"_index":841,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["depend",{"_index":2,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/ComponentsModule.html":{},"injectables/FirebaseConfigProvider.html":{},"dependencies.html":{},"index.html":{}}}],["deprec",{"_index":606,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{},"injectables/GeofireProvider.html":{}}}],["descript",{"_index":87,"title":{},"body":{"components/CalendarComponent.html":{},"classes/Device.html":{},"components/DeviceInfoPage.html":{},"classes/Event.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseConfigProvider.html":{},"injectables/FirebaseDatabaseProvider.html":{},"injectables/GeofireProvider.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MapComponent.html":{},"classes/Organization.html":{}}}],["detail",{"_index":437,"title":{},"body":{"components/EventInfoPage.html":{}}}],["devic",{"_index":240,"title":{"classes/Device.html":{}},"body":{"components/CalendarComponent.html":{},"classes/Device.html":{},"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"injectables/FirebaseDatabaseProvider.html":{},"injectables/GeofireProvider.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MapComponent.html":{},"components/MyApp.html":{},"coverage.html":{},"dependencies.html":{}}}],["device.nam",{"_index":335,"title":{},"body":{"components/DeviceInfoPage.html":{}}}],["device.owner).distinctuntilchanged().concatmap((key",{"_index":328,"title":{},"body":{"components/DeviceInfoPage.html":{}}}],["device.purpos",{"_index":337,"title":{},"body":{"components/DeviceInfoPage.html":{}}}],["device.typ",{"_index":336,"title":{},"body":{"components/DeviceInfoPage.html":{}}}],["deviceinfo",{"_index":333,"title":{},"body":{"components/DeviceInfoPage.html":{}}}],["deviceinfopag",{"_index":12,"title":{"components/DeviceInfoPage.html":{}},"body":{"modules/AppModule.html":{},"components/CalendarComponent.html":{},"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MapComponent.html":{},"components/MyApp.html":{},"coverage.html":{},"index.html":{}}}],["devicereadi",{"_index":928,"title":{},"body":{"components/HomePage.html":{}}}],["devicesgeofir",{"_index":737,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["dialog",{"_index":914,"title":{},"body":{"components/HomePage.html":{}}}],["diamet",{"_index":886,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["dict",{"_index":864,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["diff",{"_index":371,"title":{},"body":{"classes/Event.html":{}}}],["direct",{"_index":235,"title":{},"body":{"components/CalendarComponent.html":{},"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MapComponent.html":{},"components/MyApp.html":{}}}],["disabl",{"_index":649,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["display",{"_index":124,"title":{},"body":{"components/CalendarComponent.html":{},"components/EventDatePage.html":{},"components/HomePage.html":{}}}],["distanc",{"_index":461,"title":{},"body":{"components/EventItemComponent.html":{},"injectables/GeofireProvider.html":{}}}],["distinctuntilchang",{"_index":827,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["div",{"_index":1068,"title":{},"body":{"components/MapComponent.html":{}}}],["do",{"_index":826,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["document",{"_index":1132,"title":{},"body":{"coverage.html":{}}}],["doesn't",{"_index":829,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["dom",{"_index":84,"title":{},"body":{"components/CalendarComponent.html":{},"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MapComponent.html":{},"components/MyApp.html":{}}}],["don\\\\'t",{"_index":1025,"title":{},"body":{"components/LoginModal.html":{}}}],["don\\\\\\'t",{"_index":1026,"title":{},"body":{"components/LoginModal.html":{}}}],["done",{"_index":1059,"title":{},"body":{"components/MapComponent.html":{}}}],["driven",{"_index":142,"title":{},"body":{"components/CalendarComponent.html":{},"components/LoginModal.html":{}}}],["dropdown",{"_index":502,"title":{},"body":{"components/EventsPage.html":{}}}],["durat",{"_index":1016,"title":{},"body":{"components/LoginModal.html":{},"components/LoginPage.html":{}}}],["dynam",{"_index":1168,"title":{},"body":{"dependencies.html":{}}}],["e.g",{"_index":279,"title":{},"body":{"classes/Device.html":{},"classes/Event.html":{},"classes/Organization.html":{}}}],["edit",{"_index":828,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["element",{"_index":234,"title":{},"body":{"components/CalendarComponent.html":{},"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MapComponent.html":{},"components/MyApp.html":{}}}],["elementref",{"_index":1064,"title":{},"body":{"components/MapComponent.html":{}}}],["email",{"_index":565,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{}}}],["end",{"_index":347,"title":{},"body":{"classes/Event.html":{},"injectables/FirebaseConfigProvider.html":{}}}],["enddat",{"_index":340,"title":{},"body":{"classes/Event.html":{}}}],["endtim",{"_index":341,"title":{},"body":{"classes/Event.html":{}}}],["entrycompon",{"_index":33,"title":{},"body":{"modules/AppModule.html":{}}}],["environ",{"_index":1101,"title":{},"body":{"components/MyApp.html":{}}}],["environment.setenv",{"_index":1114,"title":{},"body":{"components/MyApp.html":{}}}],["err.error_messag",{"_index":965,"title":{},"body":{"components/HomePage.html":{}}}],["error",{"_index":555,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{}}}],["error.cod",{"_index":627,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["error.credenti",{"_index":632,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["error.email",{"_index":630,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["error.messag",{"_index":629,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["errorcod",{"_index":626,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["errorhandl",{"_index":40,"title":{},"body":{"modules/AppModule.html":{}}}],["errormessag",{"_index":628,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["event",{"_index":91,"title":{"classes/Event.html":{}},"body":{"components/CalendarComponent.html":{},"modules/ComponentsModule.html":{},"components/DeviceInfoPage.html":{},"classes/Event.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"injectables/FirebaseDatabaseProvider.html":{},"injectables/GeofireProvider.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MapComponent.html":{},"components/MyApp.html":{},"coverage.html":{}}}],["event'",{"_index":446,"title":{},"body":{"components/EventInfoPage.html":{}}}],["event.compare(one[0",{"_index":528,"title":{},"body":{"components/EventsPage.html":{}}}],["event.key",{"_index":731,"title":{},"body":{"injectables/FirebaseDatabaseProvider.html":{}}}],["event.owner).distinctuntilchanged().concatmap((key",{"_index":450,"title":{},"body":{"components/EventInfoPage.html":{}}}],["event.titl",{"_index":454,"title":{},"body":{"components/EventInfoPage.html":{}}}],["event[0].starttim",{"_index":525,"title":{},"body":{"components/EventsPage.html":{}}}],["event[0].titl",{"_index":468,"title":{},"body":{"components/EventItemComponent.html":{}}}],["event[2",{"_index":470,"title":{},"body":{"components/EventItemComponent.html":{}}}],["eventdatepag",{"_index":14,"title":{"components/EventDatePage.html":{}},"body":{"modules/AppModule.html":{},"components/CalendarComponent.html":{},"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MapComponent.html":{},"components/MyApp.html":{},"coverage.html":{},"index.html":{}}}],["eventemitt",{"_index":130,"title":{},"body":{"components/CalendarComponent.html":{}}}],["eventinfopag",{"_index":15,"title":{"components/EventInfoPage.html":{}},"body":{"modules/AppModule.html":{},"components/CalendarComponent.html":{},"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MapComponent.html":{},"components/MyApp.html":{},"coverage.html":{},"index.html":{}}}],["eventitemcompon",{"_index":243,"title":{"components/EventItemComponent.html":{}},"body":{"components/CalendarComponent.html":{},"modules/ComponentsModule.html":{},"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MapComponent.html":{},"components/MyApp.html":{},"coverage.html":{},"index.html":{}}}],["events'},{'nam",{"_index":245,"title":{},"body":{"components/CalendarComponent.html":{},"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MapComponent.html":{},"components/MyApp.html":{}}}],["events.html",{"_index":476,"title":{},"body":{"components/EventsPage.html":{}}}],["events[date.todatestr",{"_index":223,"title":{},"body":{"components/CalendarComponent.html":{}}}],["events[date.todatestring()].length",{"_index":224,"title":{},"body":{"components/CalendarComponent.html":{}}}],["events[key",{"_index":522,"title":{},"body":{"components/EventsPage.html":{}}}],["eventsgeofir",{"_index":738,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["eventspag",{"_index":16,"title":{"components/EventsPage.html":{}},"body":{"modules/AppModule.html":{},"components/CalendarComponent.html":{},"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MapComponent.html":{},"components/MyApp.html":{},"coverage.html":{},"index.html":{}}}],["eventu",{"_index":813,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["exampl",{"_index":1103,"title":{},"body":{"components/MyApp.html":{}}}],["execut",{"_index":927,"title":{},"body":{"components/HomePage.html":{}}}],["exist",{"_index":645,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["expect",{"_index":609,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["export",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"components/CalendarComponent.html":{},"modules/ComponentsModule.html":{},"classes/Device.html":{},"components/DeviceInfoPage.html":{},"classes/Event.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseConfigProvider.html":{},"injectables/FirebaseDatabaseProvider.html":{},"injectables/GeofireProvider.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MapComponent.html":{},"components/MyApp.html":{},"classes/Organization.html":{},"index.html":{}}}],["express",{"_index":492,"title":{},"body":{"components/EventsPage.html":{}}}],["fail",{"_index":1046,"title":{},"body":{"components/LoginPage.html":{}}}],["fals",{"_index":658,"title":{},"body":{"injectables/FirebaseConfigProvider.html":{},"components/LoginModal.html":{}}}],["fb",{"_index":666,"title":{},"body":{"injectables/FirebaseConfigProvider.html":{}}}],["field",{"_index":137,"title":{},"body":{"components/CalendarComponent.html":{},"components/LoginModal.html":{}}}],["file",{"_index":31,"title":{},"body":{"modules/AppModule.html":{},"components/CalendarComponent.html":{},"modules/ComponentsModule.html":{},"classes/Device.html":{},"components/DeviceInfoPage.html":{},"classes/Event.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseConfigProvider.html":{},"injectables/FirebaseDatabaseProvider.html":{},"injectables/GeofireProvider.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MapComponent.html":{},"components/MyApp.html":{},"classes/Organization.html":{},"coverage.html":{}}}],["filter",{"_index":386,"title":{},"body":{"components/EventDatePage.html":{}}}],["fine",{"_index":597,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["firebas",{"_index":439,"title":{},"body":{"components/EventInfoPage.html":{},"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseConfigProvider.html":{},"injectables/FirebaseDatabaseProvider.html":{},"injectables/GeofireProvider.html":{},"dependencies.html":{}}}],["firebase.auth().createuserwithemailandpassword(email",{"_index":639,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["firebase.auth().getredirectresult().then((result",{"_index":612,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["firebase.auth().onauthstatechanged((us",{"_index":593,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["firebase.auth().signinanonymously().catch((error",{"_index":598,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["firebase.auth().signinwithemailandpassword(email",{"_index":634,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["firebase.auth().signinwithredirect(provid",{"_index":605,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["firebase.auth().signout",{"_index":653,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["firebase.auth.authcredenti",{"_index":631,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["firebase.auth.googleauthprovid",{"_index":604,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["firebase.database().ref('/devices/loc",{"_index":713,"title":{},"body":{"injectables/FirebaseDatabaseProvider.html":{}}}],["firebase.database().ref('/devices/metadata",{"_index":719,"title":{},"body":{"injectables/FirebaseDatabaseProvider.html":{}}}],["firebase.database().ref('/events/loc",{"_index":714,"title":{},"body":{"injectables/FirebaseDatabaseProvider.html":{}}}],["firebase.database().ref('/events/metadata",{"_index":733,"title":{},"body":{"injectables/FirebaseDatabaseProvider.html":{}}}],["firebase.database().ref('/organ",{"_index":726,"title":{},"body":{"injectables/FirebaseDatabaseProvider.html":{}}}],["firebase.getevent(this.key",{"_index":448,"title":{},"body":{"components/EventInfoPage.html":{}}}],["firebase.initializeapp(config",{"_index":684,"title":{},"body":{"injectables/FirebaseConfigProvider.html":{}}}],["firebase/app",{"_index":662,"title":{},"body":{"injectables/FirebaseConfigProvider.html":{}}}],["firebaseauth",{"_index":909,"title":{},"body":{"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MyApp.html":{}}}],["firebaseauth.user.subscribe((us",{"_index":1041,"title":{},"body":{"components/LoginPage.html":{}}}],["firebaseauthprovid",{"_index":22,"title":{"injectables/FirebaseAuthProvider.html":{}},"body":{"modules/AppModule.html":{},"injectables/FirebaseAuthProvider.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MyApp.html":{},"coverage.html":{},"index.html":{}}}],["firebaseconfig",{"_index":551,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseDatabaseProvider.html":{}}}],["firebaseconfig.init",{"_index":589,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseDatabaseProvider.html":{}}}],["firebaseconfigprovid",{"_index":23,"title":{"injectables/FirebaseConfigProvider.html":{}},"body":{"modules/AppModule.html":{},"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseConfigProvider.html":{},"injectables/FirebaseDatabaseProvider.html":{},"coverage.html":{},"index.html":{}}}],["firebasedatabas",{"_index":297,"title":{},"body":{"components/DeviceInfoPage.html":{},"injectables/GeofireProvider.html":{}}}],["firebasedatabaseprovid",{"_index":24,"title":{"injectables/FirebaseDatabaseProvider.html":{}},"body":{"modules/AppModule.html":{},"components/DeviceInfoPage.html":{},"components/EventInfoPage.html":{},"components/EventsPage.html":{},"injectables/FirebaseDatabaseProvider.html":{},"injectables/GeofireProvider.html":{},"coverage.html":{},"index.html":{}}}],["first",{"_index":369,"title":{},"body":{"classes/Event.html":{}}}],["firstweekdaythismonth",{"_index":211,"title":{},"body":{"components/CalendarComponent.html":{}}}],["fit",{"_index":171,"title":{},"body":{"components/CalendarComponent.html":{}}}],["flag",{"_index":1018,"title":{},"body":{"components/LoginModal.html":{}}}],["flatmap",{"_index":815,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["for(const",{"_index":430,"title":{},"body":{"components/EventDatePage.html":{},"components/EventsPage.html":{}}}],["for(let",{"_index":219,"title":{},"body":{"components/CalendarComponent.html":{}}}],["form",{"_index":755,"title":{},"body":{"injectables/GeofireProvider.html":{},"components/LoginModal.html":{}}}],["format",{"_index":152,"title":{},"body":{"components/CalendarComponent.html":{}}}],["formbuild",{"_index":980,"title":{},"body":{"components/LoginModal.html":{}}}],["formgroup",{"_index":998,"title":{},"body":{"components/LoginModal.html":{}}}],["found",{"_index":644,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{},"components/HomePage.html":{},"miscellaneous/variables.html":{}}}],["fri",{"_index":230,"title":{},"body":{"components/CalendarComponent.html":{}}}],["frontend",{"_index":401,"title":{},"body":{"components/EventDatePage.html":{}}}],["function",{"_index":367,"title":{},"body":{"classes/Event.html":{},"injectables/GeofireProvider.html":{},"components/LoginModal.html":{}}}],["funni",{"_index":824,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["g_api_key",{"_index":669,"title":{},"body":{"injectables/FirebaseConfigProvider.html":{},"components/MyApp.html":{}}}],["g_auth_domain",{"_index":671,"title":{},"body":{"injectables/FirebaseConfigProvider.html":{}}}],["g_database_url",{"_index":673,"title":{},"body":{"injectables/FirebaseConfigProvider.html":{}}}],["g_messaging_sender_id",{"_index":679,"title":{},"body":{"injectables/FirebaseConfigProvider.html":{}}}],["g_project_id",{"_index":675,"title":{},"body":{"injectables/FirebaseConfigProvider.html":{}}}],["g_project_id.appspot.com",{"_index":677,"title":{},"body":{"injectables/FirebaseConfigProvider.html":{}}}],["gener",{"_index":151,"title":{},"body":{"components/CalendarComponent.html":{},"components/EventsPage.html":{},"injectables/FirebaseDatabaseProvider.html":{},"injectables/GeofireProvider.html":{}}}],["generatequeri",{"_index":741,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["generatequery(map",{"_index":758,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["geocallbackregistr",{"_index":797,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["geofir",{"_index":298,"title":{},"body":{"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventsPage.html":{},"injectables/FirebaseDatabaseProvider.html":{},"injectables/GeofireProvider.html":{},"components/HomePage.html":{},"dependencies.html":{}}}],["geofire(firebasedatabase.getdevicesloc",{"_index":807,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["geofire(firebasedatabase.geteventsloc",{"_index":809,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["geofire.getdevicelocation(this.key",{"_index":332,"title":{},"body":{"components/DeviceInfoPage.html":{}}}],["geofire.geteventlocation(this.key",{"_index":452,"title":{},"body":{"components/EventInfoPage.html":{}}}],["geofire.querycriteria",{"_index":762,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["geofireprovid",{"_index":25,"title":{"injectables/GeofireProvider.html":{}},"body":{"modules/AppModule.html":{},"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventsPage.html":{},"injectables/GeofireProvider.html":{},"components/HomePage.html":{},"coverage.html":{},"index.html":{}}}],["geofireprovider.converttoobj(loc",{"_index":859,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["geofireprovider.converttotuple(camera",{"_index":891,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["geofireprovider.converttotuple(mylocation.latlng",{"_index":823,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["geoitem",{"_index":419,"title":{},"body":{"components/EventDatePage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"injectables/GeofireProvider.html":{},"miscellaneous/typealiases.html":{}}}],["geoqueri",{"_index":796,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["get",{"_index":163,"title":{},"body":{"components/CalendarComponent.html":{},"components/DeviceInfoPage.html":{},"components/EventInfoPage.html":{},"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseDatabaseProvider.html":{},"injectables/GeofireProvider.html":{}}}],["getdaysofmonth",{"_index":111,"title":{},"body":{"components/CalendarComponent.html":{}}}],["getdevic",{"_index":687,"title":{},"body":{"injectables/FirebaseDatabaseProvider.html":{}}}],["getdevice(key",{"_index":693,"title":{},"body":{"injectables/FirebaseDatabaseProvider.html":{}}}],["getdeviceloc",{"_index":742,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["getdevicelocation(key",{"_index":763,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["getdevicesloc",{"_index":688,"title":{},"body":{"injectables/FirebaseDatabaseProvider.html":{}}}],["getev",{"_index":689,"title":{},"body":{"injectables/FirebaseDatabaseProvider.html":{}}}],["getevent(key",{"_index":699,"title":{},"body":{"injectables/FirebaseDatabaseProvider.html":{}}}],["geteventloc",{"_index":743,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["geteventlocation(key",{"_index":766,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["geteventsloc",{"_index":690,"title":{},"body":{"injectables/FirebaseDatabaseProvider.html":{}}}],["getformattedd",{"_index":387,"title":{},"body":{"components/EventDatePage.html":{}}}],["getnearbyev",{"_index":744,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["getnearbyevents(defaultradiu",{"_index":768,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["getnearbygeoev",{"_index":745,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["getnearbygeoevents(defaultradiu",{"_index":774,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["getorgan",{"_index":691,"title":{},"body":{"injectables/FirebaseDatabaseProvider.html":{}}}],["getorganization(key",{"_index":702,"title":{},"body":{"injectables/FirebaseDatabaseProvider.html":{}}}],["getus",{"_index":585,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["give",{"_index":616,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseDatabaseProvider.html":{}}}],["given",{"_index":383,"title":{},"body":{"components/EventDatePage.html":{},"injectables/GeofireProvider.html":{},"components/LoginModal.html":{}}}],["googl",{"_index":581,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MapComponent.html":{}}}],["googlemap",{"_index":759,"title":{},"body":{"injectables/GeofireProvider.html":{},"components/HomePage.html":{},"components/MapComponent.html":{},"dependencies.html":{}}}],["googlemaps.create('map_canva",{"_index":935,"title":{},"body":{"components/HomePage.html":{}}}],["googlemaps.create(this.map_div.nativeel",{"_index":1084,"title":{},"body":{"components/MapComponent.html":{}}}],["googlemapsanimation.bounc",{"_index":956,"title":{},"body":{"components/HomePage.html":{}}}],["googlemapsev",{"_index":791,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["gotolastmonth",{"_index":112,"title":{},"body":{"components/CalendarComponent.html":{}}}],["gotonextmonth",{"_index":113,"title":{},"body":{"components/CalendarComponent.html":{}}}],["group",{"_index":999,"title":{},"body":{"components/LoginModal.html":{}}}],["handl",{"_index":536,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{},"components/LoginModal.html":{}}}],["happen",{"_index":410,"title":{},"body":{"components/EventDatePage.html":{}}}],["here",{"_index":625,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{},"components/HomePage.html":{},"components/MyApp.html":{}}}],["higher",{"_index":1110,"title":{},"body":{"components/MyApp.html":{}}}],["home",{"_index":897,"title":{},"body":{"components/HomePage.html":{},"components/MyApp.html":{},"classes/Organization.html":{}}}],["home'},{'nam",{"_index":246,"title":{},"body":{"components/CalendarComponent.html":{},"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MapComponent.html":{},"components/MyApp.html":{}}}],["home.html",{"_index":898,"title":{},"body":{"components/HomePage.html":{}}}],["homepag",{"_index":17,"title":{"components/HomePage.html":{}},"body":{"modules/AppModule.html":{},"components/CalendarComponent.html":{},"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MapComponent.html":{},"components/MyApp.html":{},"coverage.html":{},"index.html":{}}}],["html",{"_index":233,"title":{},"body":{"components/CalendarComponent.html":{},"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MapComponent.html":{},"components/MyApp.html":{}}}],["https://ionicframework.com/docs/components/#navig",{"_index":474,"title":{},"body":{"components/EventsPage.html":{}}}],["human",{"_index":558,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["icon",{"_index":872,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["id",{"_index":351,"title":{},"body":{"classes/Event.html":{},"injectables/FirebaseDatabaseProvider.html":{},"injectables/GeofireProvider.html":{}}}],["identifi",{"_index":304,"title":{},"body":{"components/DeviceInfoPage.html":{},"coverage.html":{}}}],["if(!diff",{"_index":376,"title":{},"body":{"classes/Event.html":{}}}],["if(!this.devices[key",{"_index":715,"title":{},"body":{"injectables/FirebaseDatabaseProvider.html":{}}}],["if(!this.events[key",{"_index":729,"title":{},"body":{"injectables/FirebaseDatabaseProvider.html":{}}}],["if(!this.map",{"_index":1075,"title":{},"body":{"components/MapComponent.html":{}}}],["if(!this.map_div",{"_index":1083,"title":{},"body":{"components/MapComponent.html":{}}}],["if(!this.mark",{"_index":1077,"title":{},"body":{"components/MapComponent.html":{}}}],["if(!this.organizations[key",{"_index":725,"title":{},"body":{"injectables/FirebaseDatabaseProvider.html":{}}}],["if(!us",{"_index":930,"title":{},"body":{"components/HomePage.html":{}}}],["if(ev",{"_index":222,"title":{},"body":{"components/CalendarComponent.html":{}}}],["if(events[key][0].startd",{"_index":431,"title":{},"body":{"components/EventDatePage.html":{}}}],["if(new",{"_index":523,"title":{},"body":{"components/EventsPage.html":{}}}],["if(onkeyenteredregistr",{"_index":842,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["if(onkeyexitedregistr",{"_index":844,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["if(onkeymovedregistr",{"_index":854,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["if(radiu",{"_index":832,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["if(result",{"_index":613,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["if(success",{"_index":1045,"title":{},"body":{"components/LoginPage.html":{}}}],["if(this._us",{"_index":590,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["if(this.isinit",{"_index":663,"title":{},"body":{"injectables/FirebaseConfigProvider.html":{}}}],["if(this.loginform.statu",{"_index":1011,"title":{},"body":{"components/LoginModal.html":{}}}],["if(this.needaccount",{"_index":990,"title":{},"body":{"components/LoginModal.html":{}}}],["if(us",{"_index":1042,"title":{},"body":{"components/LoginPage.html":{}}}],["if(value[1",{"_index":848,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["if(window.localstorage.getitem(\"auth",{"_index":611,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["ilatlng",{"_index":317,"title":{},"body":{"components/DeviceInfoPage.html":{},"components/EventInfoPage.html":{},"injectables/GeofireProvider.html":{},"components/MapComponent.html":{}}}],["immedi",{"_index":773,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["import",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"components/CalendarComponent.html":{},"modules/ComponentsModule.html":{},"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseConfigProvider.html":{},"injectables/FirebaseDatabaseProvider.html":{},"injectables/GeofireProvider.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MapComponent.html":{},"components/MyApp.html":{}}}],["includ",{"_index":776,"title":{},"body":{"injectables/GeofireProvider.html":{},"components/HomePage.html":{}}}],["index",{"_index":98,"title":{"index.html":{}},"body":{"components/CalendarComponent.html":{},"classes/Device.html":{},"components/DeviceInfoPage.html":{},"classes/Event.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseConfigProvider.html":{},"injectables/FirebaseDatabaseProvider.html":{},"injectables/GeofireProvider.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MapComponent.html":{},"components/MyApp.html":{},"classes/Organization.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":29,"title":{},"body":{"modules/AppModule.html":{},"components/CalendarComponent.html":{},"modules/ComponentsModule.html":{},"classes/Device.html":{},"components/DeviceInfoPage.html":{},"classes/Event.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseConfigProvider.html":{},"injectables/FirebaseDatabaseProvider.html":{},"injectables/GeofireProvider.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MapComponent.html":{},"components/MyApp.html":{},"classes/Organization.html":{}}}],["info'},{'nam",{"_index":241,"title":{},"body":{"components/CalendarComponent.html":{},"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MapComponent.html":{},"components/MyApp.html":{}}}],["info.html",{"_index":289,"title":{},"body":{"components/DeviceInfoPage.html":{},"components/EventInfoPage.html":{}}}],["info.t",{"_index":285,"title":{},"body":{"components/DeviceInfoPage.html":{},"components/EventInfoPage.html":{},"coverage.html":{}}}],["info.ts:20",{"_index":443,"title":{},"body":{"components/EventInfoPage.html":{}}}],["info.ts:24",{"_index":441,"title":{},"body":{"components/EventInfoPage.html":{}}}],["info.ts:28",{"_index":302,"title":{},"body":{"components/DeviceInfoPage.html":{}}}],["info.ts:29",{"_index":445,"title":{},"body":{"components/EventInfoPage.html":{}}}],["info.ts:33",{"_index":306,"title":{},"body":{"components/DeviceInfoPage.html":{}}}],["info.ts:34",{"_index":440,"title":{},"body":{"components/EventInfoPage.html":{}}}],["info.ts:36",{"_index":444,"title":{},"body":{"components/EventInfoPage.html":{}}}],["info.ts:38",{"_index":301,"title":{},"body":{"components/DeviceInfoPage.html":{}}}],["info.ts:43",{"_index":307,"title":{},"body":{"components/DeviceInfoPage.html":{},"components/EventInfoPage.html":{}}}],["info.ts:48",{"_index":299,"title":{},"body":{"components/DeviceInfoPage.html":{}}}],["info.ts:51",{"_index":305,"title":{},"body":{"components/DeviceInfoPage.html":{}}}],["info/devic",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"components/DeviceInfoPage.html":{},"components/HomePage.html":{},"coverage.html":{}}}],["info/ev",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"coverage.html":{}}}],["inform",{"_index":288,"title":{},"body":{"components/DeviceInfoPage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"injectables/FirebaseDatabaseProvider.html":{}}}],["infowindow",{"_index":957,"title":{},"body":{"components/HomePage.html":{}}}],["init",{"_index":322,"title":{},"body":{"components/DeviceInfoPage.html":{},"injectables/FirebaseConfigProvider.html":{},"components/MapComponent.html":{}}}],["initi",{"_index":587,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseConfigProvider.html":{},"injectables/GeofireProvider.html":{},"components/MapComponent.html":{}}}],["initializeapp",{"_index":1089,"title":{},"body":{"components/MyApp.html":{}}}],["initializemap",{"_index":746,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["initializemap(map",{"_index":778,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["inject",{"_index":533,"title":{"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseConfigProvider.html":{},"injectables/FirebaseDatabaseProvider.html":{},"injectables/GeofireProvider.html":{}},"body":{"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseConfigProvider.html":{},"injectables/FirebaseDatabaseProvider.html":{},"injectables/GeofireProvider.html":{},"coverage.html":{},"index.html":{}}}],["input",{"_index":117,"title":{},"body":{"components/CalendarComponent.html":{},"components/EventItemComponent.html":{},"components/MapComponent.html":{}}}],["instead",{"_index":818,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["intern",{"_index":705,"title":{},"body":{"injectables/FirebaseDatabaseProvider.html":{}}}],["invalid",{"_index":1023,"title":{},"body":{"components/LoginModal.html":{}}}],["io",{"_index":1178,"title":{},"body":{"dependencies.html":{}}}],["ionic",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/ComponentsModule.html":{},"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"injectables/GeofireProvider.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MapComponent.html":{},"components/MyApp.html":{},"dependencies.html":{}}}],["ionic/storag",{"_index":1172,"title":{},"body":{"dependencies.html":{}}}],["ionicapp",{"_index":21,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["ionicerrorhandl",{"_index":43,"title":{},"body":{"modules/AppModule.html":{}}}],["ionicmodul",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/ComponentsModule.html":{}}}],["ionicmodule.forroot(myapp",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["ionicon",{"_index":1192,"title":{},"body":{"dependencies.html":{}}}],["ionicpag",{"_index":308,"title":{},"body":{"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventsPage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{}}}],["ionviewdidload",{"_index":438,"title":{},"body":{"components/EventInfoPage.html":{}}}],["ionviewwillent",{"_index":477,"title":{},"body":{"components/EventsPage.html":{}}}],["ionviewwillleav",{"_index":389,"title":{},"body":{"components/EventDatePage.html":{},"components/EventsPage.html":{}}}],["ionviewwillload",{"_index":390,"title":{},"body":{"components/EventDatePage.html":{}}}],["isinit",{"_index":655,"title":{},"body":{"injectables/FirebaseConfigProvider.html":{}}}],["item",{"_index":261,"title":{},"body":{"modules/ComponentsModule.html":{},"components/EventItemComponent.html":{}}}],["item'},{'nam",{"_index":244,"title":{},"body":{"components/CalendarComponent.html":{},"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MapComponent.html":{},"components/MyApp.html":{}}}],["item.html",{"_index":459,"title":{},"body":{"components/EventItemComponent.html":{}}}],["item.t",{"_index":456,"title":{},"body":{"components/EventItemComponent.html":{},"coverage.html":{}}}],["item.ts:18",{"_index":460,"title":{},"body":{"components/EventItemComponent.html":{}}}],["item.ts:26",{"_index":463,"title":{},"body":{"components/EventItemComponent.html":{}}}],["item/ev",{"_index":260,"title":{},"body":{"modules/ComponentsModule.html":{},"components/EventItemComponent.html":{},"coverage.html":{}}}],["january','february','march','april','may','june','july','august','september','october','november','decemb",{"_index":186,"title":{},"body":{"components/CalendarComponent.html":{}}}],["join",{"_index":174,"title":{},"body":{"components/CalendarComponent.html":{}}}],["json",{"_index":334,"title":{},"body":{"components/DeviceInfoPage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{}}}],["key",{"_index":275,"title":{},"body":{"classes/Device.html":{},"components/DeviceInfoPage.html":{},"classes/Event.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventsPage.html":{},"injectables/FirebaseDatabaseProvider.html":{},"injectables/GeofireProvider.html":{},"components/HomePage.html":{}}}],["key).off('valu",{"_index":721,"title":{},"body":{"injectables/FirebaseDatabaseProvider.html":{}}}],["key).on('valu",{"_index":720,"title":{},"body":{"injectables/FirebaseDatabaseProvider.html":{}}}],["key/id",{"_index":498,"title":{},"body":{"components/EventsPage.html":{},"injectables/GeofireProvider.html":{}}}],["keyboard",{"_index":1182,"title":{},"body":{"dependencies.html":{}}}],["last",{"_index":158,"title":{},"body":{"components/CalendarComponent.html":{},"injectables/GeofireProvider.html":{}}}],["lastmonth",{"_index":215,"title":{},"body":{"components/CalendarComponent.html":{}}}],["lastmonth.getd",{"_index":218,"title":{},"body":{"components/CalendarComponent.html":{}}}],["lat",{"_index":881,"title":{},"body":{"injectables/GeofireProvider.html":{},"components/HomePage.html":{}}}],["latitud",{"_index":924,"title":{},"body":{"components/HomePage.html":{},"miscellaneous/variables.html":{}}}],["launch",{"_index":464,"title":{},"body":{"components/EventItemComponent.html":{}}}],["leav",{"_index":394,"title":{},"body":{"components/EventDatePage.html":{}}}],["legend",{"_index":3,"title":{},"body":{"modules/AppModule.html":{},"components/CalendarComponent.html":{},"modules/ComponentsModule.html":{},"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MapComponent.html":{},"components/MyApp.html":{},"index.html":{}}}],["level",{"_index":1111,"title":{},"body":{"components/MyApp.html":{}}}],["limit",{"_index":408,"title":{},"body":{"components/EventDatePage.html":{}}}],["link",{"_index":282,"title":{},"body":{"classes/Device.html":{}}}],["list",{"_index":164,"title":{},"body":{"components/CalendarComponent.html":{},"components/EventDatePage.html":{},"components/EventsPage.html":{}}}],["liter",{"_index":126,"title":{},"body":{"components/CalendarComponent.html":{},"injectables/FirebaseDatabaseProvider.html":{}}}],["lng",{"_index":879,"title":{},"body":{"injectables/GeofireProvider.html":{},"components/HomePage.html":{}}}],["load",{"_index":323,"title":{},"body":{"components/DeviceInfoPage.html":{},"components/HomePage.html":{}}}],["loadingcontrol",{"_index":906,"title":{},"body":{"components/HomePage.html":{}}}],["loadingctrl",{"_index":899,"title":{},"body":{"components/HomePage.html":{}}}],["loadmap",{"_index":903,"title":{},"body":{"components/HomePage.html":{},"components/MapComponent.html":{}}}],["locat",{"_index":291,"title":{},"body":{"components/DeviceInfoPage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"injectables/GeofireProvider.html":{},"components/HomePage.html":{},"components/MapComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["location(loc",{"_index":1074,"title":{},"body":{"components/MapComponent.html":{}}}],["location.lat",{"_index":883,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["location.latlng",{"_index":951,"title":{},"body":{"components/HomePage.html":{}}}],["location.lng",{"_index":884,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["location[0",{"_index":882,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["location[1",{"_index":880,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["locationequ",{"_index":747,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["locationequals(on",{"_index":787,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["locationservic",{"_index":794,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["locationservice.getmylocation().then((myloc",{"_index":820,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["log",{"_index":985,"title":{},"body":{"components/LoginModal.html":{},"components/LoginPage.html":{}}}],["loggin",{"_index":997,"title":{},"body":{"components/LoginModal.html":{}}}],["logic",{"_index":537,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["login",{"_index":247,"title":{},"body":{"components/CalendarComponent.html":{},"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MapComponent.html":{},"components/MyApp.html":{}}}],["login'},{'nam",{"_index":249,"title":{},"body":{"components/CalendarComponent.html":{},"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MapComponent.html":{},"components/MyApp.html":{}}}],["login.html",{"_index":1028,"title":{},"body":{"components/LoginPage.html":{}}}],["login/login",{"_index":920,"title":{},"body":{"components/HomePage.html":{}}}],["loginanonym",{"_index":1029,"title":{},"body":{"components/LoginPage.html":{}}}],["loginemailpassword",{"_index":1030,"title":{},"body":{"components/LoginPage.html":{}}}],["loginform",{"_index":973,"title":{},"body":{"components/LoginModal.html":{}}}],["logingoogl",{"_index":1031,"title":{},"body":{"components/LoginPage.html":{}}}],["loginmod",{"_index":18,"title":{"components/LoginModal.html":{}},"body":{"modules/AppModule.html":{},"components/CalendarComponent.html":{},"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MapComponent.html":{},"components/MyApp.html":{},"coverage.html":{},"index.html":{}}}],["loginmodal.pres",{"_index":1051,"title":{},"body":{"components/LoginPage.html":{}}}],["loginpag",{"_index":19,"title":{"components/LoginPage.html":{}},"body":{"modules/AppModule.html":{},"components/CalendarComponent.html":{},"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MapComponent.html":{},"components/MyApp.html":{},"coverage.html":{},"index.html":{}}}],["longitud",{"_index":921,"title":{},"body":{"components/HomePage.html":{},"miscellaneous/variables.html":{}}}],["main",{"_index":267,"title":{},"body":{"classes/Device.html":{}}}],["maked",{"_index":207,"title":{},"body":{"components/CalendarComponent.html":{}}}],["map",{"_index":268,"title":{},"body":{"classes/Device.html":{},"components/DeviceInfoPage.html":{},"components/EventInfoPage.html":{},"components/EventsPage.html":{},"injectables/GeofireProvider.html":{},"components/HomePage.html":{},"components/MapComponent.html":{},"components/MyApp.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["map'},{'nam",{"_index":251,"title":{},"body":{"components/CalendarComponent.html":{},"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MapComponent.html":{},"components/MyApp.html":{}}}],["map.addeventlistener(googlemapsevent.camera_move_end).subscrib",{"_index":874,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["map.addeventlistener(googlemapsevent.map_ready).subscrib",{"_index":856,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["map.addmark",{"_index":858,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["map.getcameraposition().target",{"_index":890,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["map.getvisibleregion",{"_index":885,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["map.html",{"_index":1056,"title":{},"body":{"components/MapComponent.html":{}}}],["map/map",{"_index":262,"title":{},"body":{"modules/ComponentsModule.html":{}}}],["map_div",{"_index":1057,"title":{},"body":{"components/MapComponent.html":{}}}],["mapcompon",{"_index":250,"title":{"components/MapComponent.html":{}},"body":{"components/CalendarComponent.html":{},"modules/ComponentsModule.html":{},"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MapComponent.html":{},"components/MyApp.html":{},"coverage.html":{},"index.html":{}}}],["mark",{"_index":1070,"title":{},"body":{"components/MapComponent.html":{}}}],["marker",{"_index":782,"title":{},"body":{"injectables/GeofireProvider.html":{},"components/HomePage.html":{},"components/MapComponent.html":{}}}],["marker.on(googlemapsevent.marker_click).subscrib",{"_index":960,"title":{},"body":{"components/HomePage.html":{}}}],["marker.on(googlemapsevent.marker_click).subscribe(onclickgenerator(key",{"_index":861,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["marker.remov",{"_index":867,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["marker.setposition(geofireprovider.converttoobj(loc",{"_index":869,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["marker.setposition(loc",{"_index":1082,"title":{},"body":{"components/MapComponent.html":{}}}],["marker.showinfowindow",{"_index":958,"title":{},"body":{"components/HomePage.html":{}}}],["markers.delete(key",{"_index":868,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["markers[key",{"_index":862,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["markers[key].then((mark",{"_index":866,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["match",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"components/CalendarComponent.html":{},"modules/ComponentsModule.html":{},"classes/Device.html":{},"components/DeviceInfoPage.html":{},"classes/Event.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseConfigProvider.html":{},"injectables/FirebaseDatabaseProvider.html":{},"injectables/GeofireProvider.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MapComponent.html":{},"components/MyApp.html":{},"classes/Organization.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["menu",{"_index":503,"title":{},"body":{"components/EventsPage.html":{},"components/MyApp.html":{}}}],["merg",{"_index":817,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["messag",{"_index":964,"title":{},"body":{"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{}}}],["messagingsenderid",{"_index":678,"title":{},"body":{"injectables/FirebaseConfigProvider.html":{}}}],["metadata",{"_index":94,"title":{},"body":{"components/CalendarComponent.html":{},"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MapComponent.html":{},"components/MyApp.html":{}}}],["method",{"_index":110,"title":{},"body":{"components/CalendarComponent.html":{},"classes/Event.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseConfigProvider.html":{},"injectables/FirebaseDatabaseProvider.html":{},"injectables/GeofireProvider.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MapComponent.html":{},"components/MyApp.html":{}}}],["mile",{"_index":433,"title":{},"body":{"components/EventDatePage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{}}}],["miscellan",{"_index":1207,"title":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mismatch",{"_index":993,"title":{},"body":{"components/LoginModal.html":{}}}],["modal",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{}}}],["modal'},{'nam",{"_index":248,"title":{},"body":{"components/CalendarComponent.html":{},"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MapComponent.html":{},"components/MyApp.html":{}}}],["modal.html",{"_index":971,"title":{},"body":{"components/LoginModal.html":{}}}],["modal.t",{"_index":969,"title":{},"body":{"components/LoginModal.html":{},"coverage.html":{}}}],["modal.ts:19",{"_index":1001,"title":{},"body":{"components/LoginModal.html":{}}}],["modal.ts:24",{"_index":981,"title":{},"body":{"components/LoginModal.html":{}}}],["modal.ts:26",{"_index":1000,"title":{},"body":{"components/LoginModal.html":{}}}],["modal.ts:37",{"_index":984,"title":{},"body":{"components/LoginModal.html":{}}}],["modal.ts:60",{"_index":994,"title":{},"body":{"components/LoginModal.html":{}}}],["modal.ts:70",{"_index":982,"title":{},"body":{"components/LoginModal.html":{}}}],["modal.ts:77",{"_index":987,"title":{},"body":{"components/LoginModal.html":{}}}],["modal/login",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"coverage.html":{}}}],["modalcontrol",{"_index":1033,"title":{},"body":{"components/LoginPage.html":{}}}],["modalctrl",{"_index":1032,"title":{},"body":{"components/LoginPage.html":{}}}],["model",{"_index":264,"title":{},"body":{"classes/Device.html":{},"classes/Event.html":{},"classes/Organization.html":{}}}],["models/devic",{"_index":313,"title":{},"body":{"components/DeviceInfoPage.html":{},"injectables/FirebaseDatabaseProvider.html":{}}}],["models/ev",{"_index":420,"title":{},"body":{"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"injectables/FirebaseDatabaseProvider.html":{},"injectables/GeofireProvider.html":{}}}],["models/organ",{"_index":312,"title":{},"body":{"components/DeviceInfoPage.html":{},"components/EventInfoPage.html":{},"injectables/FirebaseDatabaseProvider.html":{}}}],["modul",{"_index":0,"title":{"modules/AppModule.html":{},"modules/ComponentsModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/ComponentsModule.html":{},"index.html":{},"modules.html":{}}}],["moment",{"_index":504,"title":{},"body":{"components/EventsPage.html":{}}}],["mon",{"_index":226,"title":{},"body":{"components/CalendarComponent.html":{}}}],["month",{"_index":146,"title":{},"body":{"components/CalendarComponent.html":{},"components/EventsPage.html":{}}}],["monthclass",{"_index":114,"title":{},"body":{"components/CalendarComponent.html":{}}}],["monthclasses(day",{"_index":148,"title":{},"body":{"components/CalendarComponent.html":{}}}],["monthnam",{"_index":108,"title":{},"body":{"components/CalendarComponent.html":{}}}],["more",{"_index":287,"title":{},"body":{"components/DeviceInfoPage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{}}}],["move",{"_index":144,"title":{},"body":{"components/CalendarComponent.html":{},"components/HomePage.html":{}}}],["multipl",{"_index":661,"title":{},"body":{"injectables/FirebaseConfigProvider.html":{}}}],["myapp",{"_index":20,"title":{"components/MyApp.html":{}},"body":{"modules/AppModule.html":{},"components/CalendarComponent.html":{},"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MapComponent.html":{},"components/MyApp.html":{},"coverage.html":{},"index.html":{}}}],["myloc",{"_index":795,"title":{},"body":{"injectables/GeofireProvider.html":{},"components/HomePage.html":{}}}],["name",{"_index":155,"title":{},"body":{"components/CalendarComponent.html":{},"classes/Device.html":{},"components/DeviceInfoPage.html":{},"classes/Event.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseDatabaseProvider.html":{},"injectables/GeofireProvider.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MapComponent.html":{},"components/MyApp.html":{},"classes/Organization.html":{}}}],["nativ",{"_index":1112,"title":{},"body":{"components/MyApp.html":{}}}],["native/cor",{"_index":1169,"title":{},"body":{"dependencies.html":{}}}],["native/googl",{"_index":318,"title":{},"body":{"components/DeviceInfoPage.html":{},"components/EventInfoPage.html":{},"injectables/GeofireProvider.html":{},"components/HomePage.html":{},"components/MapComponent.html":{},"components/MyApp.html":{},"dependencies.html":{}}}],["native/splash",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"components/MyApp.html":{},"dependencies.html":{}}}],["native/statu",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"components/MyApp.html":{},"dependencies.html":{}}}],["nav",{"_index":1087,"title":{},"body":{"components/MyApp.html":{}}}],["navcontrol",{"_index":296,"title":{},"body":{"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{}}}],["navctrl",{"_index":292,"title":{},"body":{"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{}}}],["navctrl.pop",{"_index":1043,"title":{},"body":{"components/LoginPage.html":{}}}],["navig",{"_index":475,"title":{},"body":{"components/EventsPage.html":{},"components/MyApp.html":{}}}],["navparam",{"_index":293,"title":{},"body":{"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventsPage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{}}}],["navparams.get(\"key",{"_index":321,"title":{},"body":{"components/DeviceInfoPage.html":{}}}],["navparams.get('d",{"_index":421,"title":{},"body":{"components/EventDatePage.html":{}}}],["navparams.get('ev",{"_index":447,"title":{},"body":{"components/EventInfoPage.html":{}}}],["navparams.get('rang",{"_index":423,"title":{},"body":{"components/EventDatePage.html":{}}}],["near",{"_index":532,"title":{},"body":{"components/EventsPage.html":{}}}],["nearbi",{"_index":495,"title":{},"body":{"components/EventsPage.html":{},"injectables/GeofireProvider.html":{}}}],["need",{"_index":588,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseConfigProvider.html":{},"injectables/GeofireProvider.html":{},"components/MapComponent.html":{},"components/MyApp.html":{}}}],["needaccount",{"_index":974,"title":{},"body":{"components/LoginModal.html":{}}}],["new",{"_index":191,"title":{},"body":{"components/CalendarComponent.html":{},"classes/Event.html":{},"components/EventDatePage.html":{},"components/EventsPage.html":{},"injectables/FirebaseAuthProvider.html":{},"injectables/GeofireProvider.html":{},"coverage.html":{}}}],["newaccount",{"_index":542,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["newaccount(email",{"_index":560,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["newobserv",{"_index":722,"title":{},"body":{"injectables/FirebaseDatabaseProvider.html":{}}}],["next",{"_index":160,"title":{},"body":{"components/CalendarComponent.html":{}}}],["ngfor",{"_index":1104,"title":{},"body":{"components/MyApp.html":{}}}],["ngmodul",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"modules/ComponentsModule.html":{}}}],["ngoninit",{"_index":904,"title":{},"body":{"components/HomePage.html":{}}}],["nice",{"_index":557,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["noth",{"_index":1020,"title":{},"body":{"components/LoginModal.html":{}}}],["nov",{"_index":357,"title":{},"body":{"classes/Event.html":{},"components/EventDatePage.html":{}}}],["null",{"_index":300,"title":{},"body":{"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventsPage.html":{},"injectables/FirebaseAuthProvider.html":{},"injectables/GeofireProvider.html":{}}}],["number",{"_index":115,"title":{},"body":{"components/CalendarComponent.html":{},"classes/Event.html":{},"components/EventDatePage.html":{},"components/EventsPage.html":{},"injectables/GeofireProvider.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["number(ev",{"_index":161,"title":{},"body":{"components/CalendarComponent.html":{}}}],["object",{"_index":754,"title":{},"body":{"injectables/GeofireProvider.html":{},"components/LoginModal.html":{}}}],["observ",{"_index":189,"title":{},"body":{"components/CalendarComponent.html":{},"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventsPage.html":{},"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseDatabaseProvider.html":{},"injectables/GeofireProvider.html":{},"components/LoginModal.html":{}}}],["observable.create(gener",{"_index":846,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["observable.create(generator).shar",{"_index":723,"title":{},"body":{"injectables/FirebaseDatabaseProvider.html":{}}}],["observable.create(generator).sharereplay(1",{"_index":727,"title":{},"body":{"injectables/FirebaseDatabaseProvider.html":{}}}],["observable.interval(2000).switchmap",{"_index":876,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["observer.asobserv",{"_index":638,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["observer.complet",{"_index":640,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["observer.error(firebaseauthprovider.converterrorcode(error",{"_index":637,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["observer.next([key",{"_index":838,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["observer.next(ev",{"_index":732,"title":{},"body":{"injectables/FirebaseDatabaseProvider.html":{}}}],["observer.next(result",{"_index":636,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["observer.next(value.v",{"_index":718,"title":{},"body":{"injectables/FirebaseDatabaseProvider.html":{}}}],["obtain",{"_index":355,"title":{},"body":{"classes/Event.html":{}}}],["offer",{"_index":736,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["offset",{"_index":180,"title":{},"body":{"components/CalendarComponent.html":{}}}],["okay",{"_index":1107,"title":{},"body":{"components/MyApp.html":{}}}],["old",{"_index":871,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["on",{"_index":368,"title":{},"body":{"classes/Event.html":{},"injectables/GeofireProvider.html":{}}}],["onclickgener",{"_index":779,"title":{},"body":{"injectables/GeofireProvider.html":{},"components/HomePage.html":{}}}],["one.endtime).valueof",{"_index":378,"title":{},"body":{"classes/Event.html":{}}}],["one.lat",{"_index":892,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["one.lng",{"_index":894,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["one.starttime).valueof",{"_index":373,"title":{},"body":{"classes/Event.html":{}}}],["onkeyenteredregistr",{"_index":810,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["onkeyenteredregistration.cancel",{"_index":843,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["onkeyexitedregistr",{"_index":811,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["onkeyexitedregistration.cancel",{"_index":845,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["onkeymovedregistr",{"_index":852,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["onkeymovedregistration.cancel",{"_index":855,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["onto",{"_index":784,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["open",{"_index":490,"title":{},"body":{"components/EventsPage.html":{}}}],["openpag",{"_index":1090,"title":{},"body":{"components/MyApp.html":{}}}],["openpage(pag",{"_index":1094,"title":{},"body":{"components/MyApp.html":{}}}],["option",{"_index":156,"title":{},"body":{"components/CalendarComponent.html":{},"classes/Device.html":{},"components/DeviceInfoPage.html":{},"classes/Event.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseDatabaseProvider.html":{},"injectables/GeofireProvider.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MapComponent.html":{},"components/MyApp.html":{}}}],["order",{"_index":505,"title":{},"body":{"components/EventsPage.html":{}}}],["organ",{"_index":277,"title":{"classes/Organization.html":{}},"body":{"classes/Device.html":{},"components/DeviceInfoPage.html":{},"classes/Event.html":{},"components/EventInfoPage.html":{},"injectables/FirebaseDatabaseProvider.html":{},"classes/Organization.html":{},"coverage.html":{}}}],["otherwis",{"_index":1019,"title":{},"body":{"components/LoginModal.html":{}}}],["out",{"_index":28,"title":{},"body":{"modules/AppModule.html":{},"modules/ComponentsModule.html":{},"injectables/FirebaseAuthProvider.html":{},"components/LoginModal.html":{},"components/MyApp.html":{},"index.html":{}}}],["output",{"_index":118,"title":{},"body":{"components/CalendarComponent.html":{}}}],["overview",{"_index":1201,"title":{"index.html":{}},"body":{"index.html":{}}}],["own",{"_index":276,"title":{},"body":{"classes/Device.html":{},"components/DeviceInfoPage.html":{},"classes/Event.html":{},"components/EventInfoPage.html":{}}}],["owner",{"_index":270,"title":{},"body":{"classes/Device.html":{},"components/DeviceInfoPage.html":{},"classes/Event.html":{},"components/EventInfoPage.html":{}}}],["owner.nam",{"_index":338,"title":{},"body":{"components/DeviceInfoPage.html":{},"components/EventInfoPage.html":{}}}],["owner_key",{"_index":294,"title":{},"body":{"components/DeviceInfoPage.html":{}}}],["p.titl",{"_index":1124,"title":{},"body":{"components/MyApp.html":{}}}],["packag",{"_index":1162,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":239,"title":{},"body":{"components/CalendarComponent.html":{},"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MapComponent.html":{},"components/MyApp.html":{}}}],["pages/devic",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["pages/ev",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"components/EventItemComponent.html":{}}}],["pages/events/ev",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"components/MyApp.html":{}}}],["pages/home/hom",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"components/MyApp.html":{}}}],["pages/login",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["pages/login/login",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["param",{"_index":221,"title":{},"body":{"components/CalendarComponent.html":{},"classes/Event.html":{},"components/EventDatePage.html":{},"components/EventsPage.html":{},"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseDatabaseProvider.html":{},"injectables/GeofireProvider.html":{}}}],["paramet",{"_index":154,"title":{},"body":{"components/CalendarComponent.html":{},"components/DeviceInfoPage.html":{},"classes/Event.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseDatabaseProvider.html":{},"injectables/GeofireProvider.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MapComponent.html":{},"components/MyApp.html":{}}}],["parent",{"_index":128,"title":{},"body":{"components/CalendarComponent.html":{},"components/MapComponent.html":{}}}],["particular",{"_index":707,"title":{},"body":{"injectables/FirebaseDatabaseProvider.html":{}}}],["pass",{"_index":493,"title":{},"body":{"components/EventsPage.html":{},"components/MapComponent.html":{}}}],["password",{"_index":561,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{}}}],["password).then((result",{"_index":635,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["passwordcheck",{"_index":1009,"title":{},"body":{"components/LoginModal.html":{}}}],["platform",{"_index":908,"title":{},"body":{"components/HomePage.html":{},"components/MyApp.html":{}}}],["pleas",{"_index":945,"title":{},"body":{"components/HomePage.html":{}}}],["plugin",{"_index":954,"title":{},"body":{"components/HomePage.html":{},"components/MyApp.html":{},"dependencies.html":{}}}],["posit",{"_index":777,"title":{},"body":{"injectables/GeofireProvider.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MapComponent.html":{}}}],["potenti",{"_index":281,"title":{},"body":{"classes/Device.html":{},"components/LoginModal.html":{}}}],["prepar",{"_index":481,"title":{},"body":{"components/EventsPage.html":{}}}],["present",{"_index":967,"title":{},"body":{"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{}}}],["prevent",{"_index":659,"title":{},"body":{"injectables/FirebaseConfigProvider.html":{}}}],["previou",{"_index":182,"title":{},"body":{"components/CalendarComponent.html":{}}}],["prevnumofday",{"_index":217,"title":{},"body":{"components/CalendarComponent.html":{}}}],["privat",{"_index":290,"title":{},"body":{"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventsPage.html":{},"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseConfigProvider.html":{},"injectables/FirebaseDatabaseProvider.html":{},"injectables/GeofireProvider.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MyApp.html":{}}}],["project'",{"_index":681,"title":{},"body":{"injectables/FirebaseConfigProvider.html":{}}}],["projectid",{"_index":674,"title":{},"body":{"injectables/FirebaseConfigProvider.html":{}}}],["promis",{"_index":596,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{},"components/MapComponent.html":{}}}],["properti",{"_index":99,"title":{},"body":{"components/CalendarComponent.html":{},"classes/Device.html":{},"components/DeviceInfoPage.html":{},"classes/Event.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventsPage.html":{},"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseConfigProvider.html":{},"injectables/FirebaseDatabaseProvider.html":{},"injectables/GeofireProvider.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MapComponent.html":{},"components/MyApp.html":{},"classes/Organization.html":{}}}],["provid",{"_index":6,"title":{},"body":{"modules/AppModule.html":{},"modules/ComponentsModule.html":{},"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseConfigProvider.html":{},"injectables/GeofireProvider.html":{},"index.html":{}}}],["providers/firebas",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"components/DeviceInfoPage.html":{},"components/EventInfoPage.html":{},"components/EventsPage.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MyApp.html":{}}}],["providers/geofire/geofir",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"components/HomePage.html":{}}}],["public",{"_index":269,"title":{},"body":{"classes/Device.html":{},"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventsPage.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MyApp.html":{}}}],["pull",{"_index":772,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["purpos",{"_index":271,"title":{},"body":{"classes/Device.html":{},"components/DeviceInfoPage.html":{}}}],["put",{"_index":783,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["queri",{"_index":761,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["query.on(\"key_ent",{"_index":835,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["query.on(\"key_exit",{"_index":839,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["query.on(\"key_mov",{"_index":853,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["query.updatecriteria(this.generatequery(map",{"_index":875,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["query.updatecriteria({radiu",{"_index":833,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["radiu",{"_index":769,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["radius.subscribe((radiu",{"_index":831,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["rang",{"_index":388,"title":{},"body":{"components/EventDatePage.html":{},"components/EventsPage.html":{}}}],["rangechang",{"_index":391,"title":{},"body":{"components/EventDatePage.html":{},"components/EventsPage.html":{}}}],["rangechange(valu",{"_index":398,"title":{},"body":{"components/EventDatePage.html":{},"components/EventsPage.html":{}}}],["react",{"_index":129,"title":{},"body":{"components/CalendarComponent.html":{}}}],["readabl",{"_index":559,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["readi",{"_index":1108,"title":{},"body":{"components/MyApp.html":{}}}],["readonli",{"_index":107,"title":{},"body":{"components/CalendarComponent.html":{}}}],["realtim",{"_index":686,"title":{},"body":{"injectables/FirebaseDatabaseProvider.html":{}}}],["recent",{"_index":695,"title":{},"body":{"injectables/FirebaseDatabaseProvider.html":{}}}],["redirect",{"_index":582,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["refer",{"_index":698,"title":{},"body":{"injectables/FirebaseDatabaseProvider.html":{},"components/HomePage.html":{},"components/MapComponent.html":{}}}],["regard",{"_index":153,"title":{},"body":{"components/CalendarComponent.html":{}}}],["relev",{"_index":482,"title":{},"body":{"components/EventsPage.html":{},"components/LoginPage.html":{}}}],["remov",{"_index":865,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["replac",{"_index":680,"title":{},"body":{"injectables/FirebaseConfigProvider.html":{}}}],["repres",{"_index":265,"title":{},"body":{"classes/Device.html":{},"classes/Event.html":{}}}],["reset",{"_index":27,"title":{},"body":{"modules/AppModule.html":{},"modules/ComponentsModule.html":{},"components/MyApp.html":{},"index.html":{}}}],["respons",{"_index":610,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{},"components/LoginModal.html":{}}}],["result",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"components/CalendarComponent.html":{},"modules/ComponentsModule.html":{},"classes/Device.html":{},"components/DeviceInfoPage.html":{},"classes/Event.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseConfigProvider.html":{},"injectables/FirebaseDatabaseProvider.html":{},"injectables/GeofireProvider.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MapComponent.html":{},"components/MyApp.html":{},"classes/Organization.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["result.credenti",{"_index":615,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["result.credential.accesstoken",{"_index":620,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["result.subscribe((result",{"_index":1014,"title":{},"body":{"components/LoginModal.html":{}}}],["result.us",{"_index":621,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["return",{"_index":138,"title":{},"body":{"components/CalendarComponent.html":{},"components/DeviceInfoPage.html":{},"classes/Event.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseConfigProvider.html":{},"injectables/FirebaseDatabaseProvider.html":{},"injectables/GeofireProvider.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MapComponent.html":{},"components/MyApp.html":{}}}],["rootpag",{"_index":1088,"title":{},"body":{"components/MyApp.html":{}}}],["rotat",{"_index":873,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["run",{"_index":785,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["rxj",{"_index":1194,"title":{},"body":{"dependencies.html":{}}}],["rxjs/add/observable/def",{"_index":507,"title":{},"body":{"components/EventsPage.html":{}}}],["rxjs/add/observable/interv",{"_index":803,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["rxjs/add/observable/of",{"_index":802,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["rxjs/add/operator/combinelatest",{"_index":798,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["rxjs/add/operator/concatmap",{"_index":309,"title":{},"body":{"components/DeviceInfoPage.html":{}}}],["rxjs/add/operator/delay",{"_index":508,"title":{},"body":{"components/EventsPage.html":{}}}],["rxjs/add/operator/distinctuntilchang",{"_index":311,"title":{},"body":{"components/DeviceInfoPage.html":{}}}],["rxjs/add/operator/do",{"_index":800,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["rxjs/add/operator/map",{"_index":310,"title":{},"body":{"components/DeviceInfoPage.html":{}}}],["rxjs/add/operator/mergemap",{"_index":801,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["rxjs/add/operator/scan",{"_index":799,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["rxjs/add/operator/shar",{"_index":509,"title":{},"body":{"components/EventsPage.html":{}}}],["rxjs/add/operator/sharereplay",{"_index":712,"title":{},"body":{"injectables/FirebaseDatabaseProvider.html":{},"injectables/GeofireProvider.html":{}}}],["rxjs/add/operator/switchmap",{"_index":510,"title":{},"body":{"components/EventsPage.html":{}}}],["rxjs/observ",{"_index":190,"title":{},"body":{"components/CalendarComponent.html":{},"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventsPage.html":{},"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseDatabaseProvider.html":{},"injectables/GeofireProvider.html":{},"components/LoginModal.html":{}}}],["rxjs/subject",{"_index":315,"title":{},"body":{"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventsPage.html":{},"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseDatabaseProvider.html":{}}}],["rxjs/subscript",{"_index":711,"title":{},"body":{"injectables/FirebaseDatabaseProvider.html":{},"injectables/GeofireProvider.html":{}}}],["same",{"_index":411,"title":{},"body":{"components/EventDatePage.html":{}}}],["sat",{"_index":231,"title":{},"body":{"components/CalendarComponent.html":{}}}],["save",{"_index":570,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["scan",{"_index":816,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["scan((acc",{"_index":847,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["scenario",{"_index":1121,"title":{},"body":{"components/MyApp.html":{}}}],["schema",{"_index":34,"title":{},"body":{"modules/AppModule.html":{}}}],["screen",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"components/MyApp.html":{},"dependencies.html":{}}}],["search",{"_index":166,"title":{},"body":{"components/CalendarComponent.html":{}}}],["second",{"_index":370,"title":{},"body":{"classes/Event.html":{},"injectables/GeofireProvider.html":{}}}],["see",{"_index":473,"title":{},"body":{"components/EventsPage.html":{},"injectables/FirebaseAuthProvider.html":{}}}],["seem",{"_index":830,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["select",{"_index":119,"title":{},"body":{"components/CalendarComponent.html":{},"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{}}}],["selectedd",{"_index":478,"title":{},"body":{"components/EventsPage.html":{}}}],["selecteddate(d",{"_index":488,"title":{},"body":{"components/EventsPage.html":{}}}],["selector",{"_index":95,"title":{},"body":{"components/CalendarComponent.html":{},"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MapComponent.html":{},"components/MyApp.html":{}}}],["servic",{"_index":1037,"title":{},"body":{"components/LoginPage.html":{}}}],["session",{"_index":568,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["set",{"_index":133,"title":{},"body":{"components/CalendarComponent.html":{},"components/EventsPage.html":{},"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseConfigProvider.html":{},"components/MapComponent.html":{}}}],["setlocation(loc",{"_index":1072,"title":{},"body":{"components/MapComponent.html":{}}}],["setsignedin",{"_index":543,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["setsignedin(method",{"_index":566,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["show",{"_index":286,"title":{},"body":{"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MyApp.html":{}}}],["shown",{"_index":266,"title":{},"body":{"classes/Device.html":{},"components/EventDatePage.html":{},"components/EventsPage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{}}}],["sign",{"_index":571,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{},"components/LoginModal.html":{},"components/MyApp.html":{}}}],["signinanonym",{"_index":544,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["signinwithcr",{"_index":545,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["signinwithcreds(email",{"_index":576,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["signinwithgoogl",{"_index":546,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["signout",{"_index":547,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{},"components/MyApp.html":{}}}],["singl",{"_index":1055,"title":{},"body":{"components/MapComponent.html":{}}}],["snippet",{"_index":683,"title":{},"body":{"injectables/FirebaseConfigProvider.html":{},"components/HomePage.html":{}}}],["someth",{"_index":814,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["sort",{"_index":165,"title":{},"body":{"components/CalendarComponent.html":{},"classes/Event.html":{},"components/EventsPage.html":{}}}],["sourc",{"_index":30,"title":{},"body":{"modules/AppModule.html":{},"components/CalendarComponent.html":{},"modules/ComponentsModule.html":{},"classes/Device.html":{},"components/DeviceInfoPage.html":{},"classes/Event.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseConfigProvider.html":{},"injectables/FirebaseDatabaseProvider.html":{},"injectables/GeofireProvider.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MapComponent.html":{},"components/MyApp.html":{},"classes/Organization.html":{}}}],["specifi",{"_index":578,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["spheric",{"_index":793,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["spherical.computedistancebetween(visibleregion.northeast",{"_index":887,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["spherical.computehead",{"_index":870,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["splashscreen",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"components/MyApp.html":{},"dependencies.html":{}}}],["splice(1).join",{"_index":413,"title":{},"body":{"components/EventDatePage.html":{}}}],["src/.../geofire.t",{"_index":1210,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../home.t",{"_index":1211,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.t",{"_index":1085,"title":{},"body":{"components/MyApp.html":{},"coverage.html":{}}}],["src/app/app.component.ts:15",{"_index":1098,"title":{},"body":{"components/MyApp.html":{}}}],["src/app/app.component.ts:17",{"_index":1100,"title":{},"body":{"components/MyApp.html":{}}}],["src/app/app.component.ts:19",{"_index":1092,"title":{},"body":{"components/MyApp.html":{}}}],["src/app/app.component.ts:21",{"_index":1099,"title":{},"body":{"components/MyApp.html":{}}}],["src/app/app.component.ts:32",{"_index":1093,"title":{},"body":{"components/MyApp.html":{}}}],["src/app/app.component.ts:45",{"_index":1095,"title":{},"body":{"components/MyApp.html":{}}}],["src/app/app.component.ts:51",{"_index":1096,"title":{},"body":{"components/MyApp.html":{}}}],["src/app/app.module.t",{"_index":32,"title":{},"body":{"modules/AppModule.html":{}}}],["src/components/calendar/calendar.t",{"_index":86,"title":{},"body":{"components/CalendarComponent.html":{},"coverage.html":{}}}],["src/components/calendar/calendar.ts:121",{"_index":140,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/components/calendar/calendar.ts:129",{"_index":147,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/components/calendar/calendar.ts:138",{"_index":169,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/components/calendar/calendar.ts:146",{"_index":149,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/components/calendar/calendar.ts:159",{"_index":162,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/components/calendar/calendar.ts:16",{"_index":127,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/components/calendar/calendar.ts:21",{"_index":131,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/components/calendar/calendar.ts:27",{"_index":188,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/components/calendar/calendar.ts:32",{"_index":178,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/components/calendar/calendar.ts:37",{"_index":184,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/components/calendar/calendar.ts:42",{"_index":181,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/components/calendar/calendar.ts:47",{"_index":183,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/components/calendar/calendar.ts:52",{"_index":170,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/components/calendar/calendar.ts:57",{"_index":187,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/components/calendar/calendar.ts:62",{"_index":176,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/components/calendar/calendar.ts:67",{"_index":122,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/components/calendar/calendar.ts:79",{"_index":132,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/components/components.module.t",{"_index":256,"title":{},"body":{"modules/ComponentsModule.html":{}}}],["src/components/ev",{"_index":455,"title":{},"body":{"components/EventItemComponent.html":{},"coverage.html":{}}}],["src/components/map/map.t",{"_index":1053,"title":{},"body":{"components/MapComponent.html":{},"coverage.html":{}}}],["src/components/map/map.ts:16",{"_index":1063,"title":{},"body":{"components/MapComponent.html":{}}}],["src/components/map/map.ts:21",{"_index":1069,"title":{},"body":{"components/MapComponent.html":{}}}],["src/components/map/map.ts:26",{"_index":1067,"title":{},"body":{"components/MapComponent.html":{}}}],["src/components/map/map.ts:34",{"_index":1060,"title":{},"body":{"components/MapComponent.html":{}}}],["src/components/map/map.ts:52",{"_index":1061,"title":{},"body":{"components/MapComponent.html":{}}}],["src/components/map/map.ts:59",{"_index":1062,"title":{},"body":{"components/MapComponent.html":{}}}],["src/models/device.t",{"_index":263,"title":{},"body":{"classes/Device.html":{},"coverage.html":{}}}],["src/models/device.ts:14",{"_index":274,"title":{},"body":{"classes/Device.html":{}}}],["src/models/device.ts:19",{"_index":278,"title":{},"body":{"classes/Device.html":{}}}],["src/models/device.ts:25",{"_index":280,"title":{},"body":{"classes/Device.html":{}}}],["src/models/device.ts:9",{"_index":273,"title":{},"body":{"classes/Device.html":{}}}],["src/models/event.t",{"_index":339,"title":{},"body":{"classes/Event.html":{},"coverage.html":{}}}],["src/models/event.ts:13",{"_index":362,"title":{},"body":{"classes/Event.html":{}}}],["src/models/event.ts:18",{"_index":352,"title":{},"body":{"classes/Event.html":{}}}],["src/models/event.ts:23",{"_index":353,"title":{},"body":{"classes/Event.html":{}}}],["src/models/event.ts:28",{"_index":360,"title":{},"body":{"classes/Event.html":{}}}],["src/models/event.ts:33",{"_index":346,"title":{},"body":{"classes/Event.html":{}}}],["src/models/event.ts:38",{"_index":348,"title":{},"body":{"classes/Event.html":{}}}],["src/models/event.ts:45",{"_index":365,"title":{},"body":{"classes/Event.html":{}}}],["src/models/event.ts:8",{"_index":350,"title":{},"body":{"classes/Event.html":{}}}],["src/models/organization.t",{"_index":1125,"title":{},"body":{"classes/Organization.html":{},"coverage.html":{}}}],["src/models/organization.ts:14",{"_index":1126,"title":{},"body":{"classes/Organization.html":{}}}],["src/models/organization.ts:9",{"_index":1128,"title":{},"body":{"classes/Organization.html":{}}}],["src/pages/devic",{"_index":284,"title":{},"body":{"components/DeviceInfoPage.html":{},"coverage.html":{}}}],["src/pages/ev",{"_index":381,"title":{},"body":{"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"coverage.html":{}}}],["src/pages/events/events.t",{"_index":472,"title":{},"body":{"components/EventsPage.html":{},"coverage.html":{}}}],["src/pages/events/events.ts:101",{"_index":483,"title":{},"body":{"components/EventsPage.html":{}}}],["src/pages/events/events.ts:110",{"_index":489,"title":{},"body":{"components/EventsPage.html":{}}}],["src/pages/events/events.ts:33",{"_index":501,"title":{},"body":{"components/EventsPage.html":{}}}],["src/pages/events/events.ts:38",{"_index":491,"title":{},"body":{"components/EventsPage.html":{}}}],["src/pages/events/events.ts:43",{"_index":506,"title":{},"body":{"components/EventsPage.html":{}}}],["src/pages/events/events.ts:48",{"_index":496,"title":{},"body":{"components/EventsPage.html":{}}}],["src/pages/events/events.ts:53",{"_index":499,"title":{},"body":{"components/EventsPage.html":{}}}],["src/pages/events/events.ts:58",{"_index":479,"title":{},"body":{"components/EventsPage.html":{}}}],["src/pages/events/events.ts:60",{"_index":500,"title":{},"body":{"components/EventsPage.html":{}}}],["src/pages/events/events.ts:68",{"_index":484,"title":{},"body":{"components/EventsPage.html":{}}}],["src/pages/events/events.ts:76",{"_index":480,"title":{},"body":{"components/EventsPage.html":{}}}],["src/pages/home/home.t",{"_index":896,"title":{},"body":{"components/HomePage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/pages/home/home.ts:35",{"_index":917,"title":{},"body":{"components/HomePage.html":{}}}],["src/pages/home/home.ts:40",{"_index":910,"title":{},"body":{"components/HomePage.html":{}}}],["src/pages/home/home.ts:43",{"_index":916,"title":{},"body":{"components/HomePage.html":{}}}],["src/pages/home/home.ts:44",{"_index":918,"title":{},"body":{"components/HomePage.html":{}}}],["src/pages/home/home.ts:45",{"_index":919,"title":{},"body":{"components/HomePage.html":{}}}],["src/pages/home/home.ts:52",{"_index":913,"title":{},"body":{"components/HomePage.html":{}}}],["src/pages/home/home.ts:64",{"_index":912,"title":{},"body":{"components/HomePage.html":{}}}],["src/pages/home/home.ts:83",{"_index":911,"title":{},"body":{"components/HomePage.html":{}}}],["src/pages/login",{"_index":968,"title":{},"body":{"components/LoginModal.html":{},"coverage.html":{}}}],["src/pages/login/login.t",{"_index":1027,"title":{},"body":{"components/LoginPage.html":{},"coverage.html":{}}}],["src/pages/login/login.ts:14",{"_index":1034,"title":{},"body":{"components/LoginPage.html":{}}}],["src/pages/login/login.ts:16",{"_index":1040,"title":{},"body":{"components/LoginPage.html":{}}}],["src/pages/login/login.ts:27",{"_index":1035,"title":{},"body":{"components/LoginPage.html":{}}}],["src/pages/login/login.ts:44",{"_index":1039,"title":{},"body":{"components/LoginPage.html":{}}}],["src/pages/login/login.ts:51",{"_index":1038,"title":{},"body":{"components/LoginPage.html":{}}}],["src/providers/firebas",{"_index":534,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseConfigProvider.html":{},"injectables/FirebaseDatabaseProvider.html":{},"coverage.html":{}}}],["src/providers/geofire/geofire.t",{"_index":735,"title":{},"body":{"injectables/GeofireProvider.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/providers/geofire/geofire.ts:158",{"_index":781,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["src/providers/geofire/geofire.ts:203",{"_index":764,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["src/providers/geofire/geofire.ts:211",{"_index":767,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["src/providers/geofire/geofire.ts:219",{"_index":751,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["src/providers/geofire/geofire.ts:230",{"_index":757,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["src/providers/geofire/geofire.ts:238",{"_index":760,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["src/providers/geofire/geofire.ts:248",{"_index":788,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["src/providers/geofire/geofire.ts:29",{"_index":789,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["src/providers/geofire/geofire.ts:34",{"_index":749,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["src/providers/geofire/geofire.ts:46",{"_index":770,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["src/providers/geofire/geofire.ts:98",{"_index":775,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["start",{"_index":354,"title":{},"body":{"classes/Event.html":{},"components/EventsPage.html":{},"injectables/GeofireProvider.html":{},"components/HomePage.html":{},"miscellaneous/variables.html":{}}}],["startdat",{"_index":342,"title":{},"body":{"classes/Event.html":{}}}],["startlat",{"_index":925,"title":{},"body":{"components/HomePage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["startlong",{"_index":922,"title":{},"body":{"components/HomePage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["starttim",{"_index":343,"title":{},"body":{"classes/Event.html":{}}}],["statement",{"_index":1133,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":106,"title":{},"body":{"components/CalendarComponent.html":{},"classes/Event.html":{},"injectables/FirebaseAuthProvider.html":{},"injectables/GeofireProvider.html":{}}}],["statusbar",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"components/MyApp.html":{},"dependencies.html":{}}}],["storagebucket",{"_index":676,"title":{},"body":{"injectables/FirebaseConfigProvider.html":{}}}],["string",{"_index":167,"title":{},"body":{"components/CalendarComponent.html":{},"classes/Device.html":{},"components/DeviceInfoPage.html":{},"classes/Event.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventsPage.html":{},"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseDatabaseProvider.html":{},"injectables/GeofireProvider.html":{},"classes/Organization.html":{}}}],["subject",{"_index":314,"title":{},"body":{"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventsPage.html":{},"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseDatabaseProvider.html":{}}}],["submit",{"_index":976,"title":{},"body":{"components/LoginModal.html":{}}}],["subscrib",{"_index":584,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["subscript",{"_index":804,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["subscriptions[key",{"_index":836,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["subscriptions[key].unsubscrib",{"_index":840,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["success",{"_index":575,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["success.asobserv",{"_index":602,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["success.complet",{"_index":600,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["success.next(fals",{"_index":599,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["success.next(tru",{"_index":601,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["sun",{"_index":225,"title":{},"body":{"components/CalendarComponent.html":{}}}],["support",{"_index":1205,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1206,"title":{},"body":{"modules.html":{}}}],["sw",{"_index":1196,"title":{},"body":{"dependencies.html":{}}}],["switch",{"_index":1002,"title":{},"body":{"components/LoginModal.html":{}}}],["switch(error.errorcod",{"_index":641,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["sync",{"_index":996,"title":{},"body":{"components/LoginModal.html":{}}}],["t",{"_index":805,"title":{},"body":{"injectables/GeofireProvider.html":{},"miscellaneous/typealiases.html":{}}}],["tabl",{"_index":1161,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":1160,"title":{},"body":{"coverage.html":{}}}],["target",{"_index":936,"title":{},"body":{"components/HomePage.html":{}}}],["teardownlog",{"_index":710,"title":{},"body":{"injectables/FirebaseDatabaseProvider.html":{}}}],["templat",{"_index":83,"title":{},"body":{"components/CalendarComponent.html":{},"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MapComponent.html":{},"components/MyApp.html":{}}}],["templateurl",{"_index":96,"title":{},"body":{"components/CalendarComponent.html":{},"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MapComponent.html":{},"components/MyApp.html":{}}}],["then((mark",{"_index":860,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["thing",{"_index":1113,"title":{},"body":{"components/MyApp.html":{}}}],["this._rang",{"_index":427,"title":{},"body":{"components/EventDatePage.html":{}}}],["this._range).map((ev",{"_index":516,"title":{},"body":{"components/EventsPage.html":{}}}],["this._range.next(this.rang",{"_index":513,"title":{},"body":{"components/EventsPage.html":{}}}],["this._range.next(valu",{"_index":424,"title":{},"body":{"components/EventDatePage.html":{},"components/EventsPage.html":{}}}],["this._us",{"_index":591,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["this._user.next(firebase.auth().currentus",{"_index":592,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["this._user.next(us",{"_index":594,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["this.checkpassword",{"_index":1010,"title":{},"body":{"components/LoginModal.html":{}}}],["this.currentmonth",{"_index":202,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.currentyear",{"_index":204,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.dat",{"_index":196,"title":{},"body":{"components/CalendarComponent.html":{},"components/EventDatePage.html":{}}}],["this.date.getfullyear",{"_index":205,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.date.getmonth",{"_index":213,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.date.split",{"_index":412,"title":{},"body":{"components/EventDatePage.html":{}}}],["this.daysinlastmonth",{"_index":200,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.daysinnextmonth",{"_index":201,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.daysinthismonth",{"_index":199,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.devic",{"_index":324,"title":{},"body":{"components/DeviceInfoPage.html":{}}}],["this.device$.map((devic",{"_index":327,"title":{},"body":{"components/DeviceInfoPage.html":{}}}],["this.devices[key",{"_index":724,"title":{},"body":{"injectables/FirebaseDatabaseProvider.html":{}}}],["this.devicesgeofir",{"_index":806,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["this.devicesgeofire.get(key).then(geofireprovider.converttoobj)).distinctuntilchanged(geofireprovider.locationequ",{"_index":877,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["this.devicesgeofire.query(this.generatequery(map",{"_index":857,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["this.ev",{"_index":425,"title":{},"body":{"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventsPage.html":{}}}],["this.event$.map((ev",{"_index":449,"title":{},"body":{"components/EventInfoPage.html":{}}}],["this.event[0].key",{"_index":467,"title":{},"body":{"components/EventItemComponent.html":{}}}],["this.events.map((ev",{"_index":429,"title":{},"body":{"components/EventDatePage.html":{}}}],["this.events[key",{"_index":734,"title":{},"body":{"injectables/FirebaseDatabaseProvider.html":{}}}],["this.eventsgeofir",{"_index":808,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["this.eventsgeofire.get(key).then(geofireprovider.converttoobj)).distinctuntilchanged(geofireprovider.locationequ",{"_index":878,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["this.eventsgeofire.queri",{"_index":821,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["this.filt",{"_index":428,"title":{},"body":{"components/EventDatePage.html":{}}}],["this.firebase.getorganization(key",{"_index":451,"title":{},"body":{"components/EventInfoPage.html":{}}}],["this.firebaseauth.newaccount(this.loginform.controls.email.valu",{"_index":1012,"title":{},"body":{"components/LoginModal.html":{}}}],["this.firebaseauth.signinanonymously().subscribe((success",{"_index":1044,"title":{},"body":{"components/LoginPage.html":{}}}],["this.firebaseauth.signinwithcreds(this.loginform.controls.email.valu",{"_index":1013,"title":{},"body":{"components/LoginModal.html":{}}}],["this.firebaseauth.signinwithgoogl",{"_index":1049,"title":{},"body":{"components/LoginPage.html":{}}}],["this.firebaseauth.signout",{"_index":1123,"title":{},"body":{"components/MyApp.html":{}}}],["this.firebaseauth.user.subscribe((us",{"_index":929,"title":{},"body":{"components/HomePage.html":{}}}],["this.firebasedatabase.getdevice(this.key",{"_index":325,"title":{},"body":{"components/DeviceInfoPage.html":{}}}],["this.firebasedatabase.getevent(key).subscribe(ev",{"_index":837,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["this.firebasedatabase.getorganization(key",{"_index":330,"title":{},"body":{"components/DeviceInfoPage.html":{}}}],["this.formbuilder.group",{"_index":1005,"title":{},"body":{"components/LoginModal.html":{}}}],["this.geofire.getnearbyevents(+this.rang",{"_index":515,"title":{},"body":{"components/EventsPage.html":{}}}],["this.geofire.getnearbygeoevents(+this.rang",{"_index":521,"title":{},"body":{"components/EventsPage.html":{}}}],["this.geofire.getnearbygeoevents(this.rang",{"_index":426,"title":{},"body":{"components/EventDatePage.html":{}}}],["this.geofire.initializemap(this.map",{"_index":941,"title":{},"body":{"components/HomePage.html":{}}}],["this.getdaysofmonth",{"_index":198,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.initializeapp",{"_index":1102,"title":{},"body":{"components/MyApp.html":{}}}],["this.isinit",{"_index":664,"title":{},"body":{"injectables/FirebaseConfigProvider.html":{}}}],["this.key",{"_index":320,"title":{},"body":{"components/DeviceInfoPage.html":{},"components/EventInfoPage.html":{}}}],["this.load",{"_index":942,"title":{},"body":{"components/HomePage.html":{}}}],["this.loading.dismiss",{"_index":948,"title":{},"body":{"components/HomePage.html":{}}}],["this.loading.pres",{"_index":946,"title":{},"body":{"components/HomePage.html":{}}}],["this.loadingctrl.cr",{"_index":943,"title":{},"body":{"components/HomePage.html":{}}}],["this.loadmap",{"_index":934,"title":{},"body":{"components/HomePage.html":{},"components/MapComponent.html":{}}}],["this.loc",{"_index":331,"title":{},"body":{"components/DeviceInfoPage.html":{},"components/EventInfoPage.html":{}}}],["this.loginform",{"_index":1004,"title":{},"body":{"components/LoginModal.html":{}}}],["this.loginform.controls.password.valu",{"_index":992,"title":{},"body":{"components/LoginModal.html":{}}}],["this.map",{"_index":514,"title":{},"body":{"components/EventsPage.html":{},"components/HomePage.html":{},"components/MapComponent.html":{}}}],["this.map.addmark",{"_index":1080,"title":{},"body":{"components/MapComponent.html":{}}}],["this.map.addmarkersync",{"_index":953,"title":{},"body":{"components/HomePage.html":{}}}],["this.map.animatecamera",{"_index":950,"title":{},"body":{"components/HomePage.html":{}}}],["this.map.getmylocation().then((loc",{"_index":947,"title":{},"body":{"components/HomePage.html":{}}}],["this.map.setcameratarget(loc",{"_index":1076,"title":{},"body":{"components/MapComponent.html":{}}}],["this.map.setcamerazoom(15",{"_index":1078,"title":{},"body":{"components/MapComponent.html":{}}}],["this.mark",{"_index":1079,"title":{},"body":{"components/MapComponent.html":{}}}],["this.marker.then((mark",{"_index":1081,"title":{},"body":{"components/MapComponent.html":{}}}],["this.modalctrl.create(loginmod",{"_index":1050,"title":{},"body":{"components/LoginPage.html":{}}}],["this.nav.setroot(page.compon",{"_index":1122,"title":{},"body":{"components/MyApp.html":{}}}],["this.navctrl.pop",{"_index":1015,"title":{},"body":{"components/LoginModal.html":{},"components/LoginPage.html":{}}}],["this.navctrl.push(deviceinfopag",{"_index":940,"title":{},"body":{"components/HomePage.html":{}}}],["this.navctrl.push(eventdatepag",{"_index":530,"title":{},"body":{"components/EventsPage.html":{}}}],["this.navctrl.push(eventinfopag",{"_index":466,"title":{},"body":{"components/EventItemComponent.html":{}}}],["this.navctrl.push(loginpag",{"_index":931,"title":{},"body":{"components/HomePage.html":{}}}],["this.needaccount",{"_index":1022,"title":{},"body":{"components/LoginModal.html":{}}}],["this.organizations[key",{"_index":728,"title":{},"body":{"injectables/FirebaseDatabaseProvider.html":{}}}],["this.own",{"_index":326,"title":{},"body":{"components/DeviceInfoPage.html":{},"components/EventInfoPage.html":{}}}],["this.owner_key",{"_index":329,"title":{},"body":{"components/DeviceInfoPage.html":{}}}],["this.pag",{"_index":1105,"title":{},"body":{"components/MyApp.html":{}}}],["this.platform.readi",{"_index":933,"title":{},"body":{"components/HomePage.html":{}}}],["this.platform.ready().then",{"_index":1106,"title":{},"body":{"components/MyApp.html":{}}}],["this.rang",{"_index":422,"title":{},"body":{"components/EventDatePage.html":{},"components/EventsPage.html":{}}}],["this.setsignedin(\"googl",{"_index":603,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["this.showtoast('click",{"_index":961,"title":{},"body":{"components/HomePage.html":{}}}],["this.sort",{"_index":520,"title":{},"body":{"components/EventsPage.html":{}}}],["this.splashscreen.hid",{"_index":1118,"title":{},"body":{"components/MyApp.html":{}}}],["this.statusbar.styledefault",{"_index":1117,"title":{},"body":{"components/MyApp.html":{}}}],["this.toastctrl.cr",{"_index":963,"title":{},"body":{"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{}}}],["this.today",{"_index":192,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.today.getd",{"_index":195,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.today.getmonth",{"_index":194,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.viewctrl.dismiss",{"_index":1021,"title":{},"body":{"components/LoginModal.html":{}}}],["those",{"_index":409,"title":{},"body":{"components/EventDatePage.html":{}}}],["through",{"_index":538,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["thu",{"_index":229,"title":{},"body":{"components/CalendarComponent.html":{}}}],["thumbnail",{"_index":272,"title":{},"body":{"classes/Device.html":{}}}],["tilt",{"_index":938,"title":{},"body":{"components/HomePage.html":{},"components/MapComponent.html":{}}}],["time",{"_index":349,"title":{},"body":{"classes/Event.html":{},"injectables/FirebaseConfigProvider.html":{}}}],["titl",{"_index":344,"title":{},"body":{"classes/Event.html":{},"components/HomePage.html":{},"components/MyApp.html":{}}}],["titlecasepip",{"_index":316,"title":{},"body":{"components/DeviceInfoPage.html":{}}}],["toastcontrol",{"_index":907,"title":{},"body":{"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{}}}],["toastctrl",{"_index":900,"title":{},"body":{"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{}}}],["today",{"_index":109,"title":{},"body":{"components/CalendarComponent.html":{}}}],["todo",{"_index":283,"title":{},"body":{"classes/Device.html":{},"components/DeviceInfoPage.html":{},"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseConfigProvider.html":{},"injectables/GeofireProvider.html":{}}}],["togeth",{"_index":175,"title":{},"body":{"components/CalendarComponent.html":{}}}],["toggl",{"_index":977,"title":{},"body":{"components/LoginModal.html":{}}}],["token",{"_index":618,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["toolbox",{"_index":1197,"title":{},"body":{"dependencies.html":{}}}],["top",{"_index":1048,"title":{},"body":{"components/LoginPage.html":{}}}],["track",{"_index":442,"title":{},"body":{"components/EventInfoPage.html":{}}}],["tracker",{"_index":706,"title":{},"body":{"injectables/FirebaseDatabaseProvider.html":{}}}],["tree",{"_index":85,"title":{},"body":{"components/CalendarComponent.html":{},"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MapComponent.html":{},"components/MyApp.html":{}}}],["trigger",{"_index":116,"title":{},"body":{"components/CalendarComponent.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{}}}],["trigger(day",{"_index":168,"title":{},"body":{"components/CalendarComponent.html":{}}}],["true",{"_index":665,"title":{},"body":{"injectables/FirebaseConfigProvider.html":{},"components/LoginModal.html":{}}}],["tue",{"_index":227,"title":{},"body":{"components/CalendarComponent.html":{},"classes/Event.html":{},"components/EventDatePage.html":{}}}],["tupl",{"_index":753,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["two",{"_index":364,"title":{},"body":{"classes/Event.html":{},"components/EventsPage.html":{},"injectables/GeofireProvider.html":{}}}],["two.endtime).valueof",{"_index":380,"title":{},"body":{"classes/Event.html":{}}}],["two.lat",{"_index":893,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["two.lng",{"_index":895,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["two.starttime).valueof",{"_index":375,"title":{},"body":{"classes/Event.html":{}}}],["two[0",{"_index":529,"title":{},"body":{"components/EventsPage.html":{}}}],["type",{"_index":125,"title":{},"body":{"components/CalendarComponent.html":{},"classes/Device.html":{},"components/DeviceInfoPage.html":{},"classes/Event.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseDatabaseProvider.html":{},"injectables/GeofireProvider.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MapComponent.html":{},"components/MyApp.html":{},"classes/Organization.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealias",{"_index":1208,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["ui",{"_index":141,"title":{},"body":{"components/CalendarComponent.html":{},"components/EventsPage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{}}}],["undefin",{"_index":780,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["up",{"_index":134,"title":{},"body":{"components/CalendarComponent.html":{},"components/DeviceInfoPage.html":{},"components/EventInfoPage.html":{},"components/EventsPage.html":{},"injectables/FirebaseConfigProvider.html":{},"injectables/FirebaseDatabaseProvider.html":{},"components/LoginModal.html":{},"components/MapComponent.html":{}}}],["updat",{"_index":486,"title":{},"body":{"components/EventsPage.html":{},"injectables/FirebaseAuthProvider.html":{},"injectables/GeofireProvider.html":{}}}],["url",{"_index":1127,"title":{},"body":{"classes/Organization.html":{}}}],["us",{"_index":303,"title":{},"body":{"components/DeviceInfoPage.html":{},"components/EventInfoPage.html":{},"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseConfigProvider.html":{},"injectables/GeofireProvider.html":{},"components/MapComponent.html":{},"components/MyApp.html":{}}}],["useclass",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":89,"title":{},"body":{"components/CalendarComponent.html":{},"components/EventDatePage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"injectables/FirebaseAuthProvider.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{}}}],["user'",{"_index":462,"title":{},"body":{"components/EventItemComponent.html":{},"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseConfigProvider.html":{},"injectables/GeofireProvider.html":{},"components/HomePage.html":{}}}],["usernam",{"_index":970,"title":{},"body":{"components/LoginModal.html":{}}}],["util",{"_index":150,"title":{},"body":{"components/CalendarComponent.html":{}}}],["valid",{"_index":647,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{},"components/LoginModal.html":{}}}],["validators.compose([validators.requir",{"_index":1006,"title":{},"body":{"components/LoginModal.html":{}}}],["validators.email",{"_index":1007,"title":{},"body":{"components/LoginModal.html":{}}}],["validators.minlength(8",{"_index":1008,"title":{},"body":{"components/LoginModal.html":{}}}],["valu",{"_index":185,"title":{},"body":{"components/CalendarComponent.html":{},"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventsPage.html":{},"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseConfigProvider.html":{},"injectables/FirebaseDatabaseProvider.html":{},"injectables/GeofireProvider.html":{},"components/LoginModal.html":{},"components/MyApp.html":{},"miscellaneous/variables.html":{}}}],["value.v",{"_index":730,"title":{},"body":{"injectables/FirebaseDatabaseProvider.html":{}}}],["value[1",{"_index":850,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["var",{"_index":236,"title":{},"body":{"components/CalendarComponent.html":{},"components/DeviceInfoPage.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"injectables/FirebaseAuthProvider.html":{},"injectables/GeofireProvider.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MapComponent.html":{},"components/MyApp.html":{}}}],["variabl",{"_index":569,"title":{"miscellaneous/variables.html":{}},"body":{"injectables/FirebaseAuthProvider.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["via",{"_index":1052,"title":{},"body":{"components/LoginPage.html":{}}}],["view",{"_index":93,"title":{},"body":{"components/CalendarComponent.html":{},"components/DeviceInfoPage.html":{},"components/EventsPage.html":{}}}],["viewchild",{"_index":1073,"title":{},"body":{"components/MapComponent.html":{},"components/MyApp.html":{}}}],["viewchild('map",{"_index":1066,"title":{},"body":{"components/MapComponent.html":{}}}],["viewchild(nav",{"_index":1097,"title":{},"body":{"components/MyApp.html":{}}}],["viewcontrol",{"_index":979,"title":{},"body":{"components/LoginModal.html":{}}}],["viewctrl",{"_index":978,"title":{},"body":{"components/LoginModal.html":{}}}],["visibleregion",{"_index":792,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["visibleregion.southwest",{"_index":888,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["visual",{"_index":1054,"title":{},"body":{"components/MapComponent.html":{}}}],["void",{"_index":139,"title":{},"body":{"components/CalendarComponent.html":{},"components/EventDatePage.html":{},"components/EventInfoPage.html":{},"components/EventItemComponent.html":{},"components/EventsPage.html":{},"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseConfigProvider.html":{},"injectables/GeofireProvider.html":{},"components/HomePage.html":{},"components/LoginModal.html":{},"components/LoginPage.html":{},"components/MapComponent.html":{},"components/MyApp.html":{}}}],["wait",{"_index":915,"title":{},"body":{"components/HomePage.html":{}}}],["want",{"_index":123,"title":{},"body":{"components/CalendarComponent.html":{},"components/MyApp.html":{}}}],["way",{"_index":825,"title":{},"body":{"injectables/GeofireProvider.html":{}}}],["webview",{"_index":1184,"title":{},"body":{"dependencies.html":{}}}],["wed",{"_index":228,"title":{},"body":{"components/CalendarComponent.html":{}}}],["whenev",{"_index":487,"title":{},"body":{"components/EventsPage.html":{}}}],["whether",{"_index":574,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{},"injectables/FirebaseDatabaseProvider.html":{},"components/LoginModal.html":{}}}],["whitelist",{"_index":1187,"title":{},"body":{"dependencies.html":{}}}],["window",{"_index":173,"title":{},"body":{"components/CalendarComponent.html":{},"injectables/GeofireProvider.html":{}}}],["window.localstorage.setitem(\"auth",{"_index":633,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["within",{"_index":407,"title":{},"body":{"components/EventDatePage.html":{},"components/EventsPage.html":{}}}],["wouldn't",{"_index":1119,"title":{},"body":{"components/MyApp.html":{}}}],["wrong",{"_index":651,"title":{},"body":{"injectables/FirebaseAuthProvider.html":{}}}],["xxxx",{"_index":359,"title":{},"body":{"classes/Event.html":{},"components/EventDatePage.html":{}}}],["year",{"_index":177,"title":{},"body":{"components/CalendarComponent.html":{}}}],["zone.j",{"_index":1199,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":26,"title":{},"body":{"modules/AppModule.html":{},"modules/ComponentsModule.html":{},"components/HomePage.html":{},"components/MapComponent.html":{},"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nDeviceInfoPage\n\nDeviceInfoPage\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nDeviceInfoPage->AppModule\n\n\n\n\n\nEventDatePage\n\nEventDatePage\n\nAppModule -->\n\nEventDatePage->AppModule\n\n\n\n\n\nEventInfoPage\n\nEventInfoPage\n\nAppModule -->\n\nEventInfoPage->AppModule\n\n\n\n\n\nEventsPage\n\nEventsPage\n\nAppModule -->\n\nEventsPage->AppModule\n\n\n\n\n\nHomePage\n\nHomePage\n\nAppModule -->\n\nHomePage->AppModule\n\n\n\n\n\nLoginModal\n\nLoginModal\n\nAppModule -->\n\nLoginModal->AppModule\n\n\n\n\n\nLoginPage\n\nLoginPage\n\nAppModule -->\n\nLoginPage->AppModule\n\n\n\n\n\nMyApp\n\nMyApp\n\nAppModule -->\n\nMyApp->AppModule\n\n\n\n\n\nIonicApp \n\nIonicApp \n\nIonicApp  -->\n\nAppModule->IonicApp \n\n\n\n\n\nFirebaseAuthProvider\n\nFirebaseAuthProvider\n\nAppModule -->\n\nFirebaseAuthProvider->AppModule\n\n\n\n\n\nFirebaseConfigProvider\n\nFirebaseConfigProvider\n\nAppModule -->\n\nFirebaseConfigProvider->AppModule\n\n\n\n\n\nFirebaseDatabaseProvider\n\nFirebaseDatabaseProvider\n\nAppModule -->\n\nFirebaseDatabaseProvider->AppModule\n\n\n\n\n\nGeofireProvider\n\nGeofireProvider\n\nAppModule -->\n\nGeofireProvider->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DeviceInfoPage\n                        \n                        \n                            EventDatePage\n                        \n                        \n                            EventInfoPage\n                        \n                        \n                            EventsPage\n                        \n                        \n                            HomePage\n                        \n                        \n                            LoginModal\n                        \n                        \n                            LoginPage\n                        \n                        \n                            MyApp\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            DeviceInfoPage\n                        \n                        \n                            EventDatePage\n                        \n                        \n                            EventInfoPage\n                        \n                        \n                            EventsPage\n                        \n                        \n                            HomePage\n                        \n                        \n                            LoginModal\n                        \n                        \n                            LoginPage\n                        \n                        \n                            MyApp\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            FirebaseAuthProvider\n                        \n                        \n                            FirebaseConfigProvider\n                        \n                        \n                            FirebaseDatabaseProvider\n                        \n                        \n                            GeofireProvider\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            IonicApp\n                        \n                    \n                \n                \n                    Schemas\n                    \n                        \n                            CUSTOM_ELEMENTS_SCHEMA\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { ErrorHandler, NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { IonicApp, IonicErrorHandler, IonicModule } from 'ionic-angular';\n\nimport { MyApp } from './app.component';\nimport { HomePage } from '../pages/home/home';\n\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { FirebaseConfigProvider } from '../providers/firebase-config/firebase-config';\nimport { FirebaseAuthProvider } from '../providers/firebase-auth/firebase-auth';\nimport { LoginPage } from '../pages/login/login';\nimport { LoginModal } from '../pages/login-modal/login-modal';\nimport { FirebaseDatabaseProvider } from '../providers/firebase-database/firebase-database';\nimport { GeofireProvider } from '../providers/geofire/geofire';\nimport { DeviceInfoPage } from '../pages/device-info/device-info';\nimport { EventsPage } from '../pages/events/events';\nimport { ComponentsModule } from '../components/components.module';\nimport { EventDatePage } from '../pages/event-date/event-date';\nimport { EventInfoPage } from '../pages/event-info/event-info';\n\n@NgModule({\n  declarations: [\n    MyApp,\n    HomePage,\n    EventsPage,\n    EventDatePage,\n    EventInfoPage,\n    LoginPage,\n    LoginModal,\n    DeviceInfoPage\n  ],\n  imports: [\n    BrowserModule,\n    IonicModule.forRoot(MyApp),\n    ComponentsModule\n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    MyApp,\n    HomePage,\n    EventsPage,\n    EventDatePage,\n    EventInfoPage,\n    LoginPage,\n    LoginModal,\n    DeviceInfoPage\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    {provide: ErrorHandler, useClass: IonicErrorHandler},\n    FirebaseConfigProvider,\n    FirebaseAuthProvider,\n    FirebaseDatabaseProvider,\n    GeofireProvider\n  ],\n  schemas: [\n    CUSTOM_ELEMENTS_SCHEMA\n  ]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CalendarComponent.html":{"url":"components/CalendarComponent.html","title":"component - CalendarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CalendarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/components/calendar/calendar.ts\n\n\n    \n        Description\n    \n    \n        A component that allows a user to browse events in a calendar view\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                calendar\n            \n\n\n\n\n            \n                templateUrl\n                calendar.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                calendarDays\n                            \n                            \n                                currentMonth\n                            \n                            \n                                currentYear\n                            \n                            \n                                date\n                            \n                            \n                                daysInLastMonth\n                            \n                            \n                                daysInNextMonth\n                            \n                            \n                                daysInThisMonth\n                            \n                            \n                                    Static\n                                    Readonly\n                                monthNames\n                            \n                            \n                                today\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDaysOfMonth\n                            \n                            \n                                goToLastMonth\n                            \n                            \n                                goToNextMonth\n                            \n                            \n                                monthClasses\n                            \n                            \n                                number\n                            \n                            \n                                trigger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                events\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                select\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/components/calendar/calendar.ts:67\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        events\n                    \n                    \n                        All the events that you want to display\n\n                            \n                            Type :    literal type\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/components/calendar/calendar.ts:16\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        select\n                    \n                    \n                        Allows a parent component to react when a date is selected\n\n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/components/calendar/calendar.ts:21\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getDaysOfMonth\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetDaysOfMonth()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/calendar/calendar.ts:79\n                            \n                        \n\n\n                \n                    \n                            Sets up all the date arrays based on the date field\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            goToLastMonth\n                            \n                            \n                        \n                    \n                \n                \n                    \ngoToLastMonth()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/calendar/calendar.ts:121\n                            \n                        \n\n\n                \n                    \n                            UI driven action moving the user back a month\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            goToNextMonth\n                            \n                            \n                        \n                    \n                \n                \n                    \ngoToNextMonth()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/calendar/calendar.ts:129\n                            \n                        \n\n\n                \n                    \n                            UI driven method moving the user back a month\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            monthClasses\n                            \n                            \n                        \n                    \n                \n                \n                    \nmonthClasses(day: Date)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/calendar/calendar.ts:146\n                            \n                        \n\n\n                \n                    \n                            Utility method to generate the formatting classes for dates, in regards to the month they are in\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        day\n                                                        \n                                                                    Date\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the date to generate classes for\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     { 'last-month': boolean; 'next-month': boolean; }\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            number\n                            \n                            \n                        \n                    \n                \n                \n                    \nnumber(events: literal type, date: Date)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/calendar/calendar.ts:159\n                            \n                        \n\n\n                \n                    \n                            Gets the number of events on a day\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        events\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the list of all events, sorted by event date\n\n                                                        \n                                                \n                                                \n                                                        date\n                                                        \n                                                                    Date\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the date to search for\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            trigger\n                            \n                            \n                        \n                    \n                \n                \n                    \ntrigger(day: Date)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/calendar/calendar.ts:138\n                            \n                        \n\n\n                \n                    \n                            Triggers an output event when the user selects a day in the UI\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        day\n                                                        \n                                                                    Date\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the selected day\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            calendarDays\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        calendarDays:     Date[]\n\n                    \n                \n                    \n                        \n                            Type :     Date[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/components/calendar/calendar.ts:52\n                            \n                        \n\n                \n                    \n                        All the dates fitting on the current calendar window, joined together\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentMonth\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentMonth:     String\n\n                    \n                \n                    \n                        \n                            Type :     String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/components/calendar/calendar.ts:62\n                            \n                        \n\n                \n                    \n                        The name of the current month\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentYear\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentYear:     Number\n\n                    \n                \n                    \n                        \n                            Type :     Number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/components/calendar/calendar.ts:67\n                            \n                        \n\n                \n                    \n                        The current year\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            date\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        date:     Date\n\n                    \n                \n                    \n                        \n                            Type :     Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/components/calendar/calendar.ts:32\n                            \n                        \n\n                \n                    \n                        A date in the month selected, defaults to today, but is offset by months\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            daysInLastMonth\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        daysInLastMonth:     Date[]\n\n                    \n                \n                    \n                        \n                            Type :     Date[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/components/calendar/calendar.ts:42\n                            \n                        \n\n                \n                    \n                        All the dates that would fit on the calendar in the previous month\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            daysInNextMonth\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        daysInNextMonth:     Date[]\n\n                    \n                \n                    \n                        \n                            Type :     Date[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/components/calendar/calendar.ts:47\n                            \n                        \n\n                \n                    \n                        All the dates in the next month that would fit in the calendar\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            daysInThisMonth\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        daysInThisMonth:     Date[]\n\n                    \n                \n                    \n                        \n                            Type :     Date[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/components/calendar/calendar.ts:37\n                            \n                        \n\n                \n                    \n                        All the dates in the current month\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            monthNames\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        monthNames:     String[]\n\n                    \n                \n                    \n                        \n                            Type :     String[]\n\n                        \n                    \n                    \n                        \n                            Default value : ['January','February','March','April','May','June','July','August','September','October','November','December']\n                        \n                    \n                        \n                            \n                                    Defined in src/components/calendar/calendar.ts:57\n                            \n                        \n\n                \n                    \n                        The names of all the months\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            today\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        today:     Date\n\n                    \n                \n                    \n                        \n                            Type :     Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/components/calendar/calendar.ts:27\n                            \n                        \n\n                \n                    \n                        The current day\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Output, EventEmitter, Input } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\n\n/**\n* A component that allows a user to browse events in a calendar view\n*/\n@Component({\n  selector: 'calendar',\n  templateUrl: 'calendar.html'\n})\nexport class CalendarComponent {\n\n  /**\n   * All the events that you want to display\n   */\n  @Input() events: {[date: string]: Event[]};\n  \n  /**\n   * Allows a parent component to react when a date is selected\n   */\n  @Output() select: EventEmitter = new EventEmitter();\n\n\n  /**\n   * The current day\n   */\n  today: Date\n  \n  /**\n   * A date in the month selected, defaults to today, but is offset by months\n  */\n  date: Date;\n\n  /**\n   * All the dates in the current month\n   */\n  daysInThisMonth: Date[];\n\n  /**\n   * All the dates that would fit on the calendar in the previous month\n   */\n  daysInLastMonth: Date[];\n\n  /**\n   * All the dates in the next month that would fit in the calendar\n   */\n  daysInNextMonth: Date[];\n\n  /**\n   * All the dates fitting on the current calendar window, joined together\n   */\n  calendarDays: Date[];\n\n  /**\n   * The names of all the months\n   */\n  static readonly monthNames: String[] = ['January','February','March','April','May','June','July','August','September','October','November','December'];\n  \n  /**\n   * The name of the current month\n   */\n  currentMonth: String;\n\n  /**\n   * The current year\n   */\n  currentYear: Number;\n  \n  constructor() {\n    this.today = new Date();\n    this.today = new Date(this.today.getFullYear(), this.today.getMonth(), this.today.getDate());\n    this.date = new Date(this.today);\n    this.getDaysOfMonth();\n  }\n\n  /**\n   * Sets up all the date arrays based on the date field\n   */\n  getDaysOfMonth(): void {\n    this.daysInThisMonth = new Array();\n    this.daysInLastMonth = new Array();\n    this.daysInNextMonth = new Array();\n    this.currentMonth = CalendarComponent.monthNames[this.date.getMonth()];\n    this.currentYear = this.date.getFullYear();\n\n    const makeDate = (baseDate, date) => {\n      let day = new Date(baseDate);\n      day.setDate(date);\n      return day;\n    }\n  \n    let firstWeekdayThisMonth = new Date(this.date.getFullYear(), this.date.getMonth(), 1).getDay();\n    let lastMonth = new Date(this.date.getFullYear(), this.date.getMonth(), 0);\n    let prevNumOfDays = lastMonth.getDate();\n    for(let i = prevNumOfDays-(firstWeekdayThisMonth-1); i  this.date\n    }\n  }\n\n  /**\n   * Gets the number of events on a day\n   * @param events the list of all events, sorted by event date\n   * @param date the date to search for\n   */\n  number(events: {[date: string]: Event[]}, date: Date): string {\n    if(events && events[date.toDateString()]){\n      return events[date.toDateString()].length + ' events';\n    }\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      \n      {{currentMonth}} {{currentYear}}\n      \n    \n  \n  \n    \n      \n        Sun\n        Mon\n        Tue\n        Wed\n        Thu\n        Fri\n        Sat\n      \n      \n        \n          {{day.getDate()}}\n          \n          {{ number(events, day) }}\n        \n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  {{currentMonth}} {{currentYear}}                                Sun        Mon        Tue        Wed        Thu        Fri        Sat                              {{day.getDate()}}                    {{ number(events, day) }}                    '\n    var COMPONENTS = [{'name': 'CalendarComponent', 'selector': 'calendar'},{'name': 'DeviceInfoPage', 'selector': 'page-device-info'},{'name': 'EventDatePage', 'selector': 'page-event-date'},{'name': 'EventInfoPage', 'selector': 'page-event-info'},{'name': 'EventItemComponent', 'selector': 'event-item'},{'name': 'EventsPage', 'selector': 'page-events'},{'name': 'HomePage', 'selector': 'page-home'},{'name': 'LoginModal', 'selector': 'page-login-modal'},{'name': 'LoginPage', 'selector': 'page-login'},{'name': 'MapComponent', 'selector': 'map'},{'name': 'MyApp', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CalendarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ComponentsModule.html":{"url":"modules/ComponentsModule.html","title":"module - ComponentsModule","body":"\n                   \n\n\n\n\n    Modules\n    ComponentsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ComponentsModule\n\n\n\ncluster_ComponentsModule_declarations\n\n\n\ncluster_ComponentsModule_exports\n\n\n\n\nCalendarComponent\n\nCalendarComponent\n\n\n\nComponentsModule\n\nComponentsModule\n\nComponentsModule -->\n\nCalendarComponent->ComponentsModule\n\n\n\n\n\nEventItemComponent\n\nEventItemComponent\n\nComponentsModule -->\n\nEventItemComponent->ComponentsModule\n\n\n\n\n\nMapComponent\n\nMapComponent\n\nComponentsModule -->\n\nMapComponent->ComponentsModule\n\n\n\n\n\nCalendarComponent \n\nCalendarComponent \n\nCalendarComponent  -->\n\nComponentsModule->CalendarComponent \n\n\n\n\n\nEventItemComponent \n\nEventItemComponent \n\nEventItemComponent  -->\n\nComponentsModule->EventItemComponent \n\n\n\n\n\nMapComponent \n\nMapComponent \n\nMapComponent  -->\n\nComponentsModule->MapComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/components/components.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CalendarComponent\n                        \n                        \n                            EventItemComponent\n                        \n                        \n                            MapComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CalendarComponent\n                        \n                        \n                            EventItemComponent\n                        \n                        \n                            MapComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CalendarComponent } from './calendar/calendar';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from 'ionic-angular';\nimport { EventItemComponent } from './event-item/event-item';\nimport { MapComponent } from './map/map';\n\n@NgModule({\n\tdeclarations: [\n\t\tCalendarComponent,\n    \tEventItemComponent,\n    \tMapComponent\n\t],\n\timports: [\n\t\tCommonModule,\n\t\tIonicModule\n\t],\n\texports: [\n\t\tCalendarComponent,\n    \tEventItemComponent,\n    \tMapComponent\n\t]\n})\nexport class ComponentsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Device.html":{"url":"classes/Device.html","title":"class - Device","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Device\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/device.ts\n        \n\n            \n                Description\n            \n            \n                Model representing a device, as would be shown on the main map\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                owner\n                            \n                            \n                                    Public\n                                purpose\n                            \n                            \n                                    Public\n                                    Optional\n                                thumbnail\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/device.ts:9\n                            \n                        \n\n                \n                    \n                        The name of the device\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            owner\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        owner:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/device.ts:14\n                            \n                        \n\n                \n                    \n                        The key of the owning organization\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            purpose\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        purpose:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/device.ts:19\n                            \n                        \n\n                \n                    \n                        The purpose for this device - e.g. what does it do\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            thumbnail\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        thumbnail:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/device.ts:25\n                            \n                        \n\n                \n                    \n                        A potential link to the thumbnail of the device\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export default class Device {\n    \n    /**\n     * The name of the device\n     */\n    public name: string;\n    \n    /**\n     * The key of the owning organization\n     */\n    public owner: string;\n    \n    /**\n     * The purpose for this device - e.g. what does it do\n     */\n    public purpose: string;\n    \n    /**\n     * A potential link to the thumbnail of the device\n     */\n    //TODO\n    public thumbnail?: string;\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DeviceInfoPage.html":{"url":"components/DeviceInfoPage.html","title":"component - DeviceInfoPage","body":"\n                   \n\n\n\n\n\n  Components\n  DeviceInfoPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/pages/device-info/device-info.ts\n\n\n    \n        Description\n    \n    \n        Page showing more information about the selected device on the map\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                page-device-info\n            \n\n\n\n\n            \n                templateUrl\n                device-info.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                device$\n                            \n                            \n                                    Private\n                                key\n                            \n                            \n                                location$\n                            \n                            \n                                    Public\n                                navCtrl\n                            \n                            \n                                    Public\n                                navParams\n                            \n                            \n                                    Private\n                                owner_key\n                            \n                            \n                                    Private\n                                owner$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(navCtrl: NavController, navParams: NavParams, firebaseDatabase: FirebaseDatabaseProvider, geofire: GeofireProvider)\n                    \n                \n                        \n                            \n                                Defined in src/pages/device-info/device-info.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        navCtrl\n                                                  \n                                                        \n                                                                    NavController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        navParams\n                                                  \n                                                        \n                                                                    NavParams\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        firebaseDatabase\n                                                  \n                                                        \n                                                                    FirebaseDatabaseProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        geofire\n                                                  \n                                                        \n                                                                    GeofireProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            device$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        device$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/device-info/device-info.ts:38\n                            \n                        \n\n                \n                    \n                        The observable getting the most up-to-date information about the device\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            key\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        key:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/pages/device-info/device-info.ts:28\n                            \n                        \n\n                \n                    \n                        The key used to identify this device\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            location$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        location$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/device-info/device-info.ts:48\n                            \n                        \n\n                \n                    \n                        An observable getting the most up-to-date information about where the device is located - used for the map component\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            navCtrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        navCtrl:     NavController\n\n                    \n                \n                    \n                        \n                            Type :     NavController\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/device-info/device-info.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            navParams\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        navParams:     NavParams\n\n                    \n                \n                    \n                        \n                            Type :     NavParams\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/device-info/device-info.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            owner_key\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        owner_key:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/device-info/device-info.ts:33\n                            \n                        \n\n                \n                    \n                        The key used to identify the owning organization\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            owner$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        owner$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/device-info/device-info.ts:43\n                            \n                        \n\n                \n                    \n                        The observable getting the most up-to-date information about the organization\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\nimport { FirebaseDatabaseProvider } from '../../providers/firebase-database/firebase-database';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/concatMap';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/distinctUntilChanged';\nimport Organization from '../../models/organization';\nimport Device from '../../models/device';\nimport { Subject } from 'rxjs/Subject';\nimport { TitleCasePipe } from '@angular/common';\nimport { GeofireProvider } from '../../providers/geofire/geofire';\nimport { ILatLng } from '@ionic-native/google-maps';\n\n/**\n * Page showing more information about the selected device on the map\n */\n@IonicPage()\n@Component({\n  selector: 'page-device-info',\n  templateUrl: 'device-info.html',\n})\nexport class DeviceInfoPage {\n\n  /**\n   * The key used to identify this device\n   */\n  private key;\n\n  /**\n   * The key used to identify the owning organization\n   */\n  private owner_key: string;\n\n  /**\n   * The observable getting the most up-to-date information about the device\n   */\n  private device$: Observable = null;\n\n  /**\n   * The observable getting the most up-to-date information about the organization\n   */\n  private owner$: Observable = null;\n\n  /**\n   * An observable getting the most up-to-date information about where the device is located - used for the map component\n   */\n  location$: Observable;\n  \n  \n  constructor(public navCtrl: NavController, public navParams: NavParams, private firebaseDatabase: FirebaseDatabaseProvider, private geofire: GeofireProvider) {\n    this.key = navParams.get(\"key\");\n    \n    //TODO should observables be inited in constructor or in view will load\n    this.device$ = this.firebaseDatabase.getDevice(this.key);\n    this.owner$ = this.device$.map((device : Device) => device.owner).distinctUntilChanged().concatMap((key) => {\n      this.owner_key = key;\n      return this.firebaseDatabase.getOrganization(key);\n    });\n    this.location$ = geofire.getDeviceLocation(this.key);\n  }\n  \n}\n\n    \n\n    \n        \n\n  \n  \n    DeviceInfo\n  \n  \n\n\n\n\n  \n    {{device | json}}\n    Name:\n    {{device.name}}\n    Type:\n    {{device.type}}\n    Purpose:\n    {{device.purpose}}\n  \n  \n    {{owner | json}}\n    Owned by:\n    {{owner.name}}\n  \n  \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        DeviceInfo          {{device | json}}    Name:    {{device.name}}    Type:    {{device.type}}    Purpose:    {{device.purpose}}        {{owner | json}}    Owned by:    {{owner.name}}          '\n    var COMPONENTS = [{'name': 'CalendarComponent', 'selector': 'calendar'},{'name': 'DeviceInfoPage', 'selector': 'page-device-info'},{'name': 'EventDatePage', 'selector': 'page-event-date'},{'name': 'EventInfoPage', 'selector': 'page-event-info'},{'name': 'EventItemComponent', 'selector': 'event-item'},{'name': 'EventsPage', 'selector': 'page-events'},{'name': 'HomePage', 'selector': 'page-home'},{'name': 'LoginModal', 'selector': 'page-login-modal'},{'name': 'LoginPage', 'selector': 'page-login'},{'name': 'MapComponent', 'selector': 'map'},{'name': 'MyApp', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DeviceInfoPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Event.html":{"url":"classes/Event.html","title":"class - Event","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Event\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/event.ts\n        \n\n            \n                Description\n            \n            \n                Model representing an event\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                endDate\n                            \n                            \n                                endTime\n                            \n                            \n                                key\n                            \n                            \n                                owner\n                            \n                            \n                                startDate\n                            \n                            \n                                startTime\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                compare\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            endDate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        endDate:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/event.ts:33\n                            \n                        \n\n                \n                    \n                        The ending date of the event\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            endTime\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        endTime:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/event.ts:38\n                            \n                        \n\n                \n                    \n                        The ending time of the event\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            key\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        key:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/event.ts:8\n                            \n                        \n\n                \n                    \n                        The id / key of the event\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            owner\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        owner:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/event.ts:18\n                            \n                        \n\n                \n                    \n                        The key of the owning organization of the event\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            startDate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        startDate:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/event.ts:23\n                            \n                        \n\n                \n                    \n                        The starting date of the event, as obtained by Date.toDateString(), e.g. 'Tue Nov 9 XXXX'\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            startTime\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        startTime:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/event.ts:28\n                            \n                        \n\n                \n                    \n                        The starting time of the event as obtained by Date.toTimeString()\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/event.ts:13\n                            \n                        \n\n                \n                    \n                        The title of the event\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            compare\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        compare(one: Event, two: Event)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/models/event.ts:45\n                            \n                        \n\n\n                \n                    \n                            Comparison function for two events, sorting by date\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        one\n                                                        \n                                                                    Event\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the first event\n\n                                                        \n                                                \n                                                \n                                                        two\n                                                        \n                                                                    Event\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the second event\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export class Event {\n    /**\n     * The id / key of the event\n     */\n    key: string;\n\n    /**\n     * The title of the event\n     */\n    title: string;\n\n    /**\n     * The key of the owning organization of the event\n     */\n    owner: string;\n\n    /**\n     * The starting date of the event, as obtained by Date.toDateString(), e.g. 'Tue Nov 9 XXXX'\n     */\n    startDate: string;\n\n    /**\n     * The starting time of the event as obtained by Date.toTimeString()\n     */\n    startTime: string;\n    \n    /**\n     * The ending date of the event\n     */\n    endDate: string;\n\n    /**\n     * The ending time of the event\n     */\n    endTime: string;\n\n    /**\n     * Comparison function for two events, sorting by date\n     * @param one the first event\n     * @param two the second event\n     */\n    static compare(one: Event, two: Event): number {\n        let diff = new Date(one.startDate + \" \" + one.startTime).valueOf() - new Date(two.startDate + \" \" + two.startTime).valueOf();\n        if(!diff)\n            return new Date(one.endDate + \" \" + one.endTime).valueOf() - new Date(two.endDate + \" \" + two.endTime).valueOf();\n        return diff;\n    }\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EventDatePage.html":{"url":"components/EventDatePage.html","title":"component - EventDatePage","body":"\n                   \n\n\n\n\n\n  Components\n  EventDatePage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/pages/event-date/event-date.ts\n\n\n    \n        Description\n    \n    \n        A page showing all the events on a given date\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                page-event-date\n            \n\n\n\n\n            \n                templateUrl\n                event-date.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _range\n                            \n                            \n                                date\n                            \n                            \n                                events\n                            \n                            \n                                filtered\n                            \n                            \n                                getFormattedDate\n                            \n                            \n                                    Public\n                                navCtrl\n                            \n                            \n                                    Public\n                                navParams\n                            \n                            \n                                range\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ionViewWillLeave\n                            \n                            \n                                ionViewWillLoad\n                            \n                            \n                                rangeChange\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(navCtrl: NavController, navParams: NavParams, geofire: GeofireProvider)\n                    \n                \n                        \n                            \n                                Defined in src/pages/event-date/event-date.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        navCtrl\n                                                  \n                                                        \n                                                                    NavController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        navParams\n                                                  \n                                                        \n                                                                    NavParams\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        geofire\n                                                  \n                                                        \n                                                                    GeofireProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ionViewWillLeave\n                            \n                            \n                        \n                    \n                \n                \n                    \nionViewWillLeave()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/pages/event-date/event-date.ts:76\n                            \n                        \n\n\n                \n                    \n                            When leaving, clear the observables\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ionViewWillLoad\n                            \n                            \n                        \n                    \n                \n                \n                    \nionViewWillLoad()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/pages/event-date/event-date.ts:60\n                            \n                        \n\n\n                \n                    \n                            Before the page is shown to the user, get the observables\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rangeChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nrangeChange(value: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/pages/event-date/event-date.ts:52\n                            \n                        \n\n\n                \n                    \n                            Method called by the frontend when the range is changed\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                new value of the range selector\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _range\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _range:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/event-date/event-date.ts:31\n                            \n                        \n\n                \n                    \n                        The range of events to display, selected by the user, as an observable\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            date\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        date:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/event-date/event-date.ts:21\n                            \n                        \n\n                \n                    \n                        The selected date\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            events\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        events:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/event-date/event-date.ts:36\n                            \n                        \n\n                \n                    \n                        An observable containing events within a given range of the user\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filtered\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        filtered:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/event-date/event-date.ts:41\n                            \n                        \n\n                \n                    \n                        An observable limiting the list of events to only those happening on the same day\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getFormattedDate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        getFormattedDate:     \n\n                    \n                \n                    \n                        \n                            Default value : (): string => {\n    return this.date.split(' ').splice(1).join(' ');\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/event-date/event-date.ts:84\n                            \n                        \n\n                \n                    \n                        Convert the date from 'Tue Nov 9 XXXX' to just 'Nov 9 XXXX'\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            navCtrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        navCtrl:     NavController\n\n                    \n                \n                    \n                        \n                            Type :     NavController\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/event-date/event-date.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            navParams\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        navParams:     NavParams\n\n                    \n                \n                    \n                        \n                            Type :     NavParams\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/event-date/event-date.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            range\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        range:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 5\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/event-date/event-date.ts:26\n                            \n                        \n\n                \n                    \n                        The range of events to display, selected by the user\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\nimport { GeofireProvider, GeoItem } from '../../providers/geofire/geofire';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Observable';\nimport { Event } from '../../models/event';\n\n/**\n* A page showing all the events on a given date\n*/\n@IonicPage()\n@Component({\n  selector: 'page-event-date',\n  templateUrl: 'event-date.html',\n})\nexport class EventDatePage {\n  \n  /**\n   * The selected date\n   */\n  date: string;\n  \n  /**\n   * The range of events to display, selected by the user\n   */\n  range: number = 5;\n\n  /**\n   * The range of events to display, selected by the user, as an observable\n   */\n  private _range: Subject = new Subject();\n\n  /**\n   * An observable containing events within a given range of the user\n   */\n  events: Observable}>;\n\n  /**\n   * An observable limiting the list of events to only those happening on the same day\n   */\n  filtered: Observable[]>;\n  \n  constructor(public navCtrl: NavController, public navParams: NavParams, private geofire: GeofireProvider) {\n    this.date = navParams.get('date');\n    this.range = +navParams.get('range');\n  }\n  \n  /**\n   * Method called by the frontend when the range is changed\n   * @param value new value of the range selector\n   */\n  rangeChange(value: number){\n    this.range = +value;\n    this._range.next(value);\n  }\n  \n  /**\n   * Before the page is shown to the user, get the observables\n   */\n  ionViewWillLoad() {\n    this.events = this.geofire.getNearbyGeoEvents(this.range, this._range);\n    this.filtered = this.events.map((events) => {\n      let dates: GeoItem[] = [];\n      for(const key in events){\n        if(events[key][0].startDate == this.date){\n          dates.push(events[key]);\n        }\n      }\n      return dates;\n    });\n  }\n\n  /**\n   * When leaving, clear the observables\n   */\n  ionViewWillLeave(){\n    this.events = null;\n  }\n\n  /**\n   * Convert the date from 'Tue Nov 9 XXXX' to just 'Nov 9 XXXX'\n   * @returns the new date\n   */\n  getFormattedDate = (): string => {\n    return this.date.split(' ').splice(1).join(' ');\n  }\n  \n}\n\n    \n\n    \n        \n\n  \n  \n    Events on {{getFormattedDate()}}\n  \n  \n\n\n\n  \n    Range\n    \n      5 Miles\n      10 Miles\n      20 Miles\n      50 Miles\n    \n  \n  \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        Events on {{getFormattedDate()}}          Range          5 Miles      10 Miles      20 Miles      50 Miles              '\n    var COMPONENTS = [{'name': 'CalendarComponent', 'selector': 'calendar'},{'name': 'DeviceInfoPage', 'selector': 'page-device-info'},{'name': 'EventDatePage', 'selector': 'page-event-date'},{'name': 'EventInfoPage', 'selector': 'page-event-info'},{'name': 'EventItemComponent', 'selector': 'event-item'},{'name': 'EventsPage', 'selector': 'page-events'},{'name': 'HomePage', 'selector': 'page-home'},{'name': 'LoginModal', 'selector': 'page-login-modal'},{'name': 'LoginPage', 'selector': 'page-login'},{'name': 'MapComponent', 'selector': 'map'},{'name': 'MyApp', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EventDatePage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EventInfoPage.html":{"url":"components/EventInfoPage.html","title":"component - EventInfoPage","body":"\n                   \n\n\n\n\n\n  Components\n  EventInfoPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/pages/event-info/event-info.ts\n\n\n    \n        Description\n    \n    \n        A page showing more detailed information about an event\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                page-event-info\n            \n\n\n\n\n            \n                templateUrl\n                event-info.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                event$\n                            \n                            \n                                key\n                            \n                            \n                                location$\n                            \n                            \n                                    Public\n                                navCtrl\n                            \n                            \n                                    Public\n                                navParams\n                            \n                            \n                                owner$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ionViewDidLoad\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(navCtrl: NavController, navParams: NavParams, firebase: FirebaseDatabaseProvider, geofire: GeofireProvider)\n                    \n                \n                        \n                            \n                                Defined in src/pages/event-info/event-info.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        navCtrl\n                                                  \n                                                        \n                                                                    NavController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        navParams\n                                                  \n                                                        \n                                                                    NavParams\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        firebase\n                                                  \n                                                        \n                                                                    FirebaseDatabaseProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        geofire\n                                                  \n                                                        \n                                                                    GeofireProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ionViewDidLoad\n                            \n                            \n                        \n                    \n                \n                \n                    \nionViewDidLoad()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/pages/event-info/event-info.ts:43\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            event$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        event$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/event-info/event-info.ts:24\n                            \n                        \n\n                \n                    \n                        The observable tracking changes to the selected observable\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            key\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        key:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/event-info/event-info.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            location$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        location$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/event-info/event-info.ts:34\n                            \n                        \n\n                \n                    \n                        An observable getting the most up-to-date information about where the event is located - used for the map component\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            navCtrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        navCtrl:     NavController\n\n                    \n                \n                    \n                        \n                            Type :     NavController\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/event-info/event-info.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            navParams\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        navParams:     NavParams\n\n                    \n                \n                    \n                        \n                            Type :     NavParams\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/event-info/event-info.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            owner$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        owner$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/event-info/event-info.ts:29\n                            \n                        \n\n                \n                    \n                        An observable getting the most up-to-date information about the event's owner\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\nimport { FirebaseDatabaseProvider } from '../../providers/firebase-database/firebase-database';\nimport { Event } from '../../models/event';\nimport { Observable } from 'rxjs/Observable';\nimport { GeofireProvider } from '../../providers/geofire/geofire';\nimport { ILatLng } from '@ionic-native/google-maps';\nimport Organization from '../../models/organization';\n\n/**\n * A page showing more detailed information about an event\n */\n@IonicPage()\n@Component({\n  selector: 'page-event-info',\n  templateUrl: 'event-info.html',\n})\nexport class EventInfoPage {\n\n  key: string;\n  /**\n   * The observable tracking changes to the selected observable\n   */\n  event$: Observable;\n\n  /**\n   * An observable getting the most up-to-date information about the event's owner\n   */\n  owner$: Observable;\n\n  /**\n   * An observable getting the most up-to-date information about where the event is located - used for the map component\n   */\n  location$: Observable;\n  \n  constructor(public navCtrl: NavController, public navParams: NavParams, private firebase: FirebaseDatabaseProvider, private geofire: GeofireProvider) {\n    this.key = navParams.get('event');\n    this.event$ = firebase.getEvent(this.key);\n    this.owner$ = this.event$.map((event : Event) => event.owner).distinctUntilChanged().concatMap((key) => this.firebase.getOrganization(key));\n    this.location$ = geofire.getEventLocation(this.key);\n  }\n  \n  ionViewDidLoad() {\n  }\n  \n}\n\n    \n\n    \n        \n\n\n  \n    {{(event$ | async).title}}\n  \n\n\n\n\n  \n    {{event | json}}\n    Name:\n    {{event.title}}\n  \n  \n    {{owner | json}}\n    Owned by:\n    {{owner.name}}\n  \n  \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{(event$ | async).title}}        {{event | json}}    Name:    {{event.title}}        {{owner | json}}    Owned by:    {{owner.name}}          '\n    var COMPONENTS = [{'name': 'CalendarComponent', 'selector': 'calendar'},{'name': 'DeviceInfoPage', 'selector': 'page-device-info'},{'name': 'EventDatePage', 'selector': 'page-event-date'},{'name': 'EventInfoPage', 'selector': 'page-event-info'},{'name': 'EventItemComponent', 'selector': 'event-item'},{'name': 'EventsPage', 'selector': 'page-events'},{'name': 'HomePage', 'selector': 'page-home'},{'name': 'LoginModal', 'selector': 'page-login-modal'},{'name': 'LoginPage', 'selector': 'page-login'},{'name': 'MapComponent', 'selector': 'map'},{'name': 'MyApp', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EventInfoPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EventItemComponent.html":{"url":"components/EventItemComponent.html","title":"component - EventItemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EventItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/components/event-item/event-item.ts\n\n\n    \n        Description\n    \n    \n        An item showing a brief bit of information about an event\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                event-item\n            \n\n\n\n\n            \n                templateUrl\n                event-item.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                selected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                event\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(navCtrl: NavController)\n                    \n                \n                        \n                            \n                                Defined in src/components/event-item/event-item.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        navCtrl\n                                                  \n                                                        \n                                                                    NavController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        event\n                    \n                    \n                        The event, containing the distance it is from the user's location\n\n                            \n                            Type :    GeoItem\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/components/event-item/event-item.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selected\n                            \n                            \n                        \n                    \n                \n                \n                    \nselected()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/event-item/event-item.ts:26\n                            \n                        \n\n\n                \n                    \n                            When selected, launch the user into a more descriptive page about the event\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { NavController } from 'ionic-angular';\nimport { EventInfoPage } from '../../pages/event-info/event-info';\nimport { Event } from '../../models/event';\nimport { GeoItem } from '../../providers/geofire/geofire';\n\n/**\n * An item showing a brief bit of information about an event\n */\n@Component({\n  selector: 'event-item',\n  templateUrl: 'event-item.html'\n})\nexport class EventItemComponent {\n  /**\n   * The event, containing the distance it is from the user's location\n   */\n  @Input() event: GeoItem;\n\n  constructor(private navCtrl: NavController) {\n  }\n\n  /**\n   * When selected, launch the user into a more descriptive page about the event\n   */\n  selected(){\n    this.navCtrl.push(EventInfoPage, { event: this.event[0].key });\n  }\n\n}\n\n    \n\n    \n        \n  {{event[0].title}}\n  {{1.6 * event[2]}} miles away\n  {{event | json}}\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{event[0].title}}  {{1.6 * event[2]}} miles away  {{event | json}}'\n    var COMPONENTS = [{'name': 'CalendarComponent', 'selector': 'calendar'},{'name': 'DeviceInfoPage', 'selector': 'page-device-info'},{'name': 'EventDatePage', 'selector': 'page-event-date'},{'name': 'EventInfoPage', 'selector': 'page-event-info'},{'name': 'EventItemComponent', 'selector': 'event-item'},{'name': 'EventsPage', 'selector': 'page-events'},{'name': 'HomePage', 'selector': 'page-home'},{'name': 'LoginModal', 'selector': 'page-login-modal'},{'name': 'LoginPage', 'selector': 'page-login'},{'name': 'MapComponent', 'selector': 'map'},{'name': 'MyApp', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EventItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EventsPage.html":{"url":"components/EventsPage.html","title":"component - EventsPage","body":"\n                   \n\n\n\n\n\n  Components\n  EventsPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/pages/events/events.ts\n\n\n    \n        Description\n    \n    \n        Generated class for the EventsPage page.\nSee https://ionicframework.com/docs/components/#navigation for more info on\nIonic pages and navigation.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                page-events\n            \n\n\n\n\n            \n                templateUrl\n                events.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _range\n                            \n                            \n                                events\n                            \n                            \n                                mapped\n                            \n                            \n                                    Public\n                                navCtrl\n                            \n                            \n                                    Public\n                                navParams\n                            \n                            \n                                range\n                            \n                            \n                                sorted\n                            \n                            \n                                view\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ionViewWillEnter\n                            \n                            \n                                ionViewWillLeave\n                            \n                            \n                                rangeChange\n                            \n                            \n                                selectedDate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(navCtrl: NavController, navParams: NavParams, geofire: GeofireProvider)\n                    \n                \n                        \n                            \n                                Defined in src/pages/events/events.ts:58\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        navCtrl\n                                                  \n                                                        \n                                                                    NavController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        navParams\n                                                  \n                                                        \n                                                                    NavParams\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        geofire\n                                                  \n                                                        \n                                                                    GeofireProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ionViewWillEnter\n                            \n                            \n                        \n                    \n                \n                \n                    \nionViewWillEnter()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/pages/events/events.ts:76\n                            \n                        \n\n\n                \n                    \n                            Before the view is about to be shown, prepare the relevant observables\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ionViewWillLeave\n                            \n                            \n                        \n                    \n                \n                \n                    \nionViewWillLeave()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/pages/events/events.ts:101\n                            \n                        \n\n\n                \n                    \n                            Clear the relevant observables\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rangeChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nrangeChange(value: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/pages/events/events.ts:68\n                            \n                        \n\n\n                \n                    \n                            Method bound to the UI to update whenever a range is selected\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the new value\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedDate\n                            \n                            \n                        \n                    \n                \n                \n                    \nselectedDate(date: Date)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/pages/events/events.ts:110\n                            \n                        \n\n\n                \n                    \n                            Open up the list of events on the date that was selected\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        date\n                                                        \n                                                                    Date\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the date that was selected\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _range\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _range:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/events/events.ts:38\n                            \n                        \n\n                \n                    \n                        The range, expressed as a Subject to pass along values to the nearby events\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            events\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        events:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/events/events.ts:48\n                            \n                        \n\n                \n                    \n                        All the events within range of the user, associated with their key/id\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mapped\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mapped:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/events/events.ts:53\n                            \n                        \n\n                \n                    \n                        All the events within range of the user, mapped to the date they start on\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            navCtrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        navCtrl:     NavController\n\n                    \n                \n                    \n                        \n                            Type :     NavController\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/events/events.ts:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            navParams\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        navParams:     NavParams\n\n                    \n                \n                    \n                        \n                            Type :     NavParams\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/events/events.ts:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            range\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        range:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 5\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/events/events.ts:33\n                            \n                        \n\n                \n                    \n                        The range, as set by the dropdown menu\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sorted\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sorted:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/events/events.ts:58\n                            \n                        \n\n                \n                    \n                        All the events within range and after this moment, in sorted order\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            view\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        view:     String\n\n                    \n                \n                    \n                        \n                            Type :     String\n\n                        \n                    \n                    \n                        \n                            Default value : 'month'\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/events/events.ts:43\n                            \n                        \n\n                \n                    \n                        The current view of the calendar selected\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\nimport { EventDatePage } from '../event-date/event-date';\nimport { GeofireProvider, GeoItem } from '../../providers/geofire/geofire';\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\nimport { Event } from '../../models/event';\n\nimport 'rxjs/add/observable/defer';\nimport 'rxjs/add/operator/delay';\nimport 'rxjs/add/operator/share';\nimport 'rxjs/add/operator/switchMap';\nimport { FirebaseDatabaseProvider } from '../../providers/firebase-database/firebase-database';\nimport { _createNgProbe } from '@angular/platform-browser/src/dom/debug/ng_probe';\n\n/**\n* Generated class for the EventsPage page.\n*\n* See https://ionicframework.com/docs/components/#navigation for more info on\n* Ionic pages and navigation.\n*/\n\n@IonicPage()\n@Component({\n  selector: 'page-events',\n  templateUrl: 'events.html',\n})\nexport class EventsPage {\n  \n  /**\n   * The range, as set by the dropdown menu\n   */\n  range: number = 5;\n\n  /**\n   * The range, expressed as a Subject to pass along values to the nearby events\n   */\n  private _range: Subject = new Subject();\n\n  /**\n   * The current view of the calendar selected\n   */\n  view: String = 'month';\n  \n  /**\n   * All the events within range of the user, associated with their key/id\n   */\n  events: Observable;\n\n  /**\n   * All the events within range of the user, mapped to the date they start on\n   */\n  mapped: Observable;\n\n  /**\n   * All the events within range and after this moment, in sorted order\n   */\n  sorted: Observable[]>;\n  \n  constructor(public navCtrl: NavController, public navParams: NavParams, private geofire: GeofireProvider) {\n    this._range.next(this.range);\n  }\n  \n  /**\n   * Method bound to the UI to update whenever a range is selected\n   * @param value the new value\n   */\n  rangeChange(value: number){\n    this.range = value;\n    this._range.next(value);\n  }\n  \n  /**\n   * Before the view is about to be shown, prepare the relevant observables\n   */\n  ionViewWillEnter() {\n    this.mapped = this.geofire.getNearbyEvents(+this.range, this._range).map((events) => {\n      let dates: {[date: string] : Event[]} = {};\n      for(const key in events){\n        let arr = dates[events[key].startDate] || [];\n        arr.push(events[key]);\n        dates[events[key].startDate] = arr;\n      }\n      return dates;\n    });\n    this.sorted = this.geofire.getNearbyGeoEvents(+this.range, this._range).map((events) => {\n      let arr: GeoItem[] = [];\n      for(const key in events){\n        let event = events[key];\n        if(new Date() > new Date(event[0].startDate + \" \" + event[0].startTime)){\n          arr.push(event);\n        }\n      }\n      return arr.sort((one, two) => Event.compare(one[0], two[0]));\n    });\n  }\n\n  /**\n   * Clear the relevant observables\n   */\n  ionViewWillLeave(){\n    this.events = null;\n    this.mapped = null;\n  }\n  \n  /**\n   * Open up the list of events on the date that was selected\n   * @param date the date that was selected\n   */\n  selectedDate(date: Date){\n    this.navCtrl.push(EventDatePage, {\n      'date': date.toDateString(),\n      'range': this.range\n    });\n  }\n  \n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    Events\n  \n\n\n\n  \n    \n      \n        View\n        \n          Month\n          Agenda\n        \n      \n    \n    \n      \n        Range\n        \n          5 Miles\n          10 Miles\n          20 Miles\n          50 Miles\n        \n      \n    \n  \n  \n    No events near you.\n  \n   \n    \n  \n   \n    \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Events                      View                  Month          Agenda                                    Range                  5 Miles          10 Miles          20 Miles          50 Miles                          No events near you.                              '\n    var COMPONENTS = [{'name': 'CalendarComponent', 'selector': 'calendar'},{'name': 'DeviceInfoPage', 'selector': 'page-device-info'},{'name': 'EventDatePage', 'selector': 'page-event-date'},{'name': 'EventInfoPage', 'selector': 'page-event-info'},{'name': 'EventItemComponent', 'selector': 'event-item'},{'name': 'EventsPage', 'selector': 'page-events'},{'name': 'HomePage', 'selector': 'page-home'},{'name': 'LoginModal', 'selector': 'page-login-modal'},{'name': 'LoginPage', 'selector': 'page-login'},{'name': 'MapComponent', 'selector': 'map'},{'name': 'MyApp', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EventsPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FirebaseAuthProvider.html":{"url":"injectables/FirebaseAuthProvider.html","title":"injectable - FirebaseAuthProvider","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FirebaseAuthProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/providers/firebase-auth/firebase-auth.ts\n        \n\n            \n                Description\n            \n            \n                Provider handling user logic through Firebase\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkSignedIn\n                            \n                            \n                                    Private\n                                    Static\n                                convertErrorCode\n                            \n                            \n                                newAccount\n                            \n                            \n                                setSignedIn\n                            \n                            \n                                signInAnonymously\n                            \n                            \n                                signInWithCreds\n                            \n                            \n                                signInWithGoogle\n                            \n                            \n                                signOut\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    user\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(firebaseConfig: FirebaseConfigProvider)\n                    \n                \n                        \n                            \n                                Defined in src/providers/firebase-auth/firebase-auth.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        firebaseConfig\n                                                  \n                                                        \n                                                                    FirebaseConfigProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkSignedIn\n                            \n                            \n                        \n                    \n                \n                \n                    \ncheckSignedIn()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/providers/firebase-auth/firebase-auth.ts:66\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            convertErrorCode\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        convertErrorCode(error: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/providers/firebase-auth/firebase-auth.ts:141\n                            \n                        \n\n\n                \n                    \n                            Converts the error code into a nice, human-readable string\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the error code provide from Firebase\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newAccount\n                            \n                            \n                        \n                    \n                \n                \n                    \nnewAccount(email: string, password: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/providers/firebase-auth/firebase-auth.ts:125\n                            \n                        \n\n\n                \n                    \n                            Creates a new account for the user\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the user's email\n\n                                                        \n                                                \n                                                \n                                                        password\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the user's password\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setSignedIn\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetSignedIn(method: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/providers/firebase-auth/firebase-auth.ts:101\n                            \n                        \n\n\n                \n                    \n                            Sets a session variable to save how the user had signed in\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        method\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                how the user signed in\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signInAnonymously\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignInAnonymously()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/providers/firebase-auth/firebase-auth.ts:39\n                            \n                        \n\n\n                \n                    \n                            Signs the user in anonymously\n\n\n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    Whether the result was successful\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signInWithCreds\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignInWithCreds(email: string, password: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/providers/firebase-auth/firebase-auth.ts:110\n                            \n                        \n\n\n                \n                    \n                            Signs the user in with the specified credentials\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the user's email\n\n                                                        \n                                                \n                                                \n                                                        password\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the user's password\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signInWithGoogle\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignInWithGoogle()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/providers/firebase-auth/firebase-auth.ts:56\n                            \n                        \n\n\n                \n                    \n                            Signs the user in with Google - redirecting the user\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signOut\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignOut()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/providers/firebase-auth/firebase-auth.ts:159\n                            \n                        \n\n\n                \n                    \n                            Signs the user out\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _user\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _user:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/providers/firebase-auth/firebase-auth.ts:15\n                            \n                        \n\n                \n                    \n                        A subject that subscribes to updates to the user\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        user\n                    \n                \n\n                \n                    \n                        getuser()\n                    \n                \n                            \n                                \n                                    Defined in src/providers/firebase-auth/firebase-auth.ts:24\n                                \n                            \n                    \n                        \n                                Gets the private _user, initializing it if needed\n\n\n                                \n                                    Returns :     Observable\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { FirebaseConfigProvider } from '../firebase-config/firebase-config';\nimport { Observable } from 'rxjs/Observable';\nimport firebase from 'firebase';\n\n/**\n * Provider handling user logic through Firebase\n */\n@Injectable()\nexport class FirebaseAuthProvider {\n  /**\n   * A subject that subscribes to updates to the user\n   */\n  private _user: Subject = null;\n  \n  constructor(firebaseConfig: FirebaseConfigProvider) {\n    firebaseConfig.init();\n  }\n  \n  /**\n   * Gets the private _user, initializing it if needed\n   */\n  get user(): Observable {\n    if(this._user == null){\n      this._user = new Subject();\n      this._user.next(firebase.auth().currentUser);\n      firebase.auth().onAuthStateChanged((user) => {\n        this._user.next(user);\n      });\n    }\n    return this._user;\n  }\n  \n  /**\n   * Signs the user in anonymously\n   * @returns Whether the result was successful\n   */\n  signInAnonymously(): Observable {\n    //TODO consider whether using a subject is needed or whether just using a promise is fine\n    let success: Subject = new Subject();\n    firebase.auth().signInAnonymously().catch((error) => {\n      success.next(false);\n      success.complete();\n      //TODO: handle errors\n    }).then(() => {\n      success.next(true);\n      success.complete();\n    });\n    return success.asObservable();\n  }\n  \n  /**\n   * Signs the user in with Google - redirecting the user\n   */\n  signInWithGoogle(): void {\n    this.setSignedIn(\"google\");\n    \n    var provider = new firebase.auth.GoogleAuthProvider();\n    firebase.auth().signInWithRedirect(provider);\n  }\n  \n  /**\n   * @deprecated\n   */\n  checkSignedIn() {\n    //check cookies to see if expecting a response\n    /*\n    if(window.localStorage.getItem(\"AUTH\") == \"google\"){\n      firebase.auth().getRedirectResult().then((result) => {\n        if(result != null)\n        \n        console.log(result);\n        \n        if (result.credential) {\n          // This gives you a Google Access Token. You can use it to access the Google API.\n          //var token = result.credential.accessToken;\n          // ...\n        }\n        // The signed-in user info.\n        var user = result.user;\n      }).catch((error) => {\n        console.log(\"hello\");\n        console.error(error);\n        // Handle Errors here.\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        // The email of the user's account used.\n        var email = error.email;\n        // The firebase.auth.AuthCredential type that was used.\n        var credential = error.credential;\n        // ...\n      });\n    } */\n  }\n  \n  /**\n   * Sets a session variable to save how the user had signed in\n   * @param method how the user signed in\n   */\n  setSignedIn(method : string){\n    window.localStorage.setItem(\"AUTH\", method);\n  }\n  \n  /**\n   * Signs the user in with the specified credentials\n   * @param email the user's email\n   * @param password the user's password\n   */\n  signInWithCreds(email: string, password: string): Observable {\n    let observer: Subject = new Subject();\n    firebase.auth().signInWithEmailAndPassword(email, password).then((result) =>{\n      observer.next(result);\n    }).catch((error) => {\n      observer.error(FirebaseAuthProvider.convertErrorCode(error));\n    });\n    return observer.asObservable();\n  }\n  \n  /**\n   * Creates a new account for the user\n   * @param email the user's email\n   * @param password the user's password\n   */\n  newAccount(email: string, password: string): Observable {\n    let observer: Subject = new Subject();\n    // TODO also consider whether to use the subject\n    firebase.auth().createUserWithEmailAndPassword(email, password).then((result) =>{\n      observer.next(result);\n      observer.complete();\n    }).catch((error) => {\n      observer.error(FirebaseAuthProvider.convertErrorCode(error));\n    });\n    return observer.asObservable();\n  }\n  \n  /**\n   * Converts the error code into a nice, human-readable string\n   * @param error the error code provide from Firebase\n   */\n  private static convertErrorCode(error: any): string{\n    switch(error.errorCode){\n      case 'auth/user-not-found':\n       return 'This user does not exist';\n      case 'auth/invalid-email':\n        return 'Not a valid email address';\n      case 'auth/user-disabled':\n        return 'Your account is currently disabled';\n      case 'auth/wrong-password':\n        return 'Wrong password for this account';\n      default:\n       return 'Could not complete that action';\n    }\n  }\n  \n  /**\n   * Signs the user out\n   */\n  signOut(): void {\n    firebase.auth().signOut();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FirebaseConfigProvider.html":{"url":"injectables/FirebaseConfigProvider.html","title":"injectable - FirebaseConfigProvider","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FirebaseConfigProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/providers/firebase-config/firebase-config.ts\n        \n\n            \n                Description\n            \n            \n                Provider that needs to be injected and initialized as a dependency for providers using Firebase\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                isInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/providers/firebase-config/firebase-config.ts:13\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            init\n                            \n                            \n                        \n                    \n                \n                \n                    \ninit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/providers/firebase-config/firebase-config.ts:21\n                            \n                        \n\n\n                \n                    \n                            Sets up Firebase with the user's credentials\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isInit:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/providers/firebase-config/firebase-config.ts:13\n                            \n                        \n\n                \n                    \n                        Prevents Firebase from being initialized multiple times\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport firebase from 'firebase/app';\n\n/**\n * Provider that needs to be injected and initialized as a dependency for providers using Firebase\n */\n@Injectable()\nexport class FirebaseConfigProvider {\n\n  /**\n   * Prevents Firebase from being initialized multiple times\n   */\n  private isInit = false;\n  \n  constructor() {\n  }\n  \n  /**\n   * Sets up Firebase with the user's credentials\n   */\n  init(): void {\n    if(this.isInit) return;\n    this.isInit = true;\n    const config = {\n      //FB CRED\n      apiKey: \"G_API_KEY\",\n      authDomain: \"G_AUTH_DOMAIN\",\n      databaseURL: \"G_DATABASE_URL\",\n      projectId: \"G_PROJECT_ID\",\n      storageBucket: \"G_PROJECT_ID.appspot.com\",\n      messagingSenderId: \"G_MESSAGING_SENDER_ID\"\n      //END FB CRED\n      // TODO: Replace with your project's customized code snippet\n    };\n    firebase.initializeApp(config);\n  }\n  \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FirebaseDatabaseProvider.html":{"url":"injectables/FirebaseDatabaseProvider.html","title":"injectable - FirebaseDatabaseProvider","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FirebaseDatabaseProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/providers/firebase-database/firebase-database.ts\n        \n\n            \n                Description\n            \n            \n                Injectable class giving access to the Firebase Realtime Database.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                devices\n                            \n                            \n                                    Private\n                                events\n                            \n                            \n                                    Private\n                                organizations\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDevice\n                            \n                            \n                                getDevicesLocations\n                            \n                            \n                                getEvent\n                            \n                            \n                                getEventsLocations\n                            \n                            \n                                getOrganization\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(firebaseConfig: FirebaseConfigProvider)\n                    \n                \n                        \n                            \n                                Defined in src/providers/firebase-database/firebase-database.ts:115\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        firebaseConfig\n                                                  \n                                                        \n                                                                    FirebaseConfigProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getDevice\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetDevice(key: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/providers/firebase-database/firebase-database.ts:44\n                            \n                        \n\n\n                \n                    \n                            Gets an observable with the most up-to-date information about the device\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the id of the device\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    An observable containing the most recent information of the device\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getDevicesLocations\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetDevicesLocations()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/providers/firebase-database/firebase-database.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                            \n                            \n                                Returns :     database.Reference\n\n                            \n                                \n                                    A reference to the devices' geofire\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getEvent\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetEvent(key: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/providers/firebase-database/firebase-database.ts:98\n                            \n                        \n\n\n                \n                    \n                            Gets an observable with the most up-to-date information about the event\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the id of the event\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    An observable containing the most recent information of the event\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getEventsLocations\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetEventsLocations()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/providers/firebase-database/firebase-database.ts:30\n                            \n                        \n\n\n                \n                    \n\n                            \n                            \n                            \n                                Returns :     database.Reference\n\n                            \n                                \n                                    A reference to the events' geofire\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getOrganization\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetOrganization(key: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/providers/firebase-database/firebase-database.ts:71\n                            \n                        \n\n\n                \n                    \n                            Gets an observable with the most up-to-date information about the organization\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the id of the organization\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    An observable containing the most recent information of the organization\n\n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            devices\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        devices:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/providers/firebase-database/firebase-database.ts:37\n                            \n                        \n\n                \n                    \n                        Internal tracker of whether an observable has been created for a particular device\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            events\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        events:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/providers/firebase-database/firebase-database.ts:91\n                            \n                        \n\n                \n                    \n                        Internal tracker of whether an observable has been created for a particular event\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            organizations\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizations:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/providers/firebase-database/firebase-database.ts:64\n                            \n                        \n\n                \n                    \n                        Internal tracker of whether an observable has been created for a particular organization\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { database } from 'firebase';\nimport { FirebaseConfigProvider } from '../firebase-config/firebase-config';\nimport firebase from 'firebase';\nimport { Subject } from 'rxjs/Subject';\nimport Organization from '../../models/organization';\nimport Device from '../../models/device';\nimport { Observable } from 'rxjs/Observable';\nimport { Event } from '../../models/event';\nimport { Observer } from 'rxjs/Observer';\nimport { TeardownLogic } from 'rxjs/Subscription';\nimport 'rxjs/add/operator/shareReplay';\n\n/**\n * Injectable class giving access to the Firebase Realtime Database.\n */\n@Injectable()\nexport class FirebaseDatabaseProvider {\n  \n  /**\n   * @returns A reference to the devices' geofire\n   */\n  getDevicesLocations(): database.Reference {\n    return firebase.database().ref('/devices/locations');\n  }\n\n  /**\n   * @returns A reference to the events' geofire\n   */\n  getEventsLocations(): database.Reference {\n    return firebase.database().ref('/events/locations');\n  }\n  \n  /**\n   * Internal tracker of whether an observable has been created for a particular device\n   */\n  private devices: { [key: string] : Observable } = {};\n  \n  /**\n   * Gets an observable with the most up-to-date information about the device\n   * @param {string} key the id of the device\n   * @returns An observable containing the most recent information of the device\n   */\n  getDevice(key: string): Observable {\n    if(!this.devices[key]){\n      let generator = (observer: Observer): TeardownLogic => {\n        let callback = (value: database.DataSnapshot) => {\n          observer.next(value.val());\n        };\n        firebase.database().ref('/devices/metadata/' + key).on('value', callback);\n        return () => {\n          firebase.database().ref('/devices/metadata/' + key).off('value', callback);\n        };\n      };\n      let newObservable: Observable = Observable.create(generator).share();\n      this.devices[key] = newObservable;\n    }\n    return this.devices[key];\n  }\n  \n  /**\n   * Internal tracker of whether an observable has been created for a particular organization\n   */\n  private organizations: { [key: string] : Observable } = {};\n  \n  /**\n   * Gets an observable with the most up-to-date information about the organization\n   * @param {string} key the id of the organization\n   * @returns An observable containing the most recent information of the organization\n   */\n  getOrganization(key: string): Observable {\n    if(!this.organizations[key]){\n      let generator = (observer: Observer): TeardownLogic => {\n        let callback = (value: database.DataSnapshot) => {\n          observer.next(value.val());\n        };\n        firebase.database().ref('/organizations/' + key).on('value', callback);\n        return () => {\n          firebase.database().ref('/organizations/' + key).off('value', callback);\n        };\n      };\n      let newObservable: Observable = Observable.create(generator).shareReplay(1);\n      this.organizations[key] = newObservable;\n    }\n    return this.organizations[key];\n  }\n\n  /**\n   * Internal tracker of whether an observable has been created for a particular event\n   */\n  private events: { [key: string] : Observable } = {};\n  \n  /**\n   * Gets an observable with the most up-to-date information about the event\n   * @param {string} key the id of the event\n   * @returns An observable containing the most recent information of the event\n   */\n  getEvent(key: string): Observable {\n    if(!this.events[key]){\n      let generator = (observer: Observer): TeardownLogic => {\n        let callback = (value: database.DataSnapshot) => {\n          let event = value.val();\n          event.key = key;\n          observer.next(event);\n        };\n        firebase.database().ref('/events/metadata/' + key).on('value', callback);\n        return () => {\n          firebase.database().ref('/events/metadata/' + key).off('value', callback);\n        };\n      };\n      let newObservable: Observable = Observable.create(generator).shareReplay(1);\n      this.events[key] = newObservable;\n    }\n    return this.events[key];\n  }\n  \n  constructor(private firebaseConfig: FirebaseConfigProvider) {\n    firebaseConfig.init();\n  }\n  \n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GeofireProvider.html":{"url":"injectables/GeofireProvider.html","title":"injectable - GeofireProvider","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GeofireProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/providers/geofire/geofire.ts\n        \n\n            \n                Description\n            \n            \n                Provider offering methods to access Geofire\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                devicesGeoFire\n                            \n                            \n                                    Private\n                                eventsGeofire\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                convertToObj\n                            \n                            \n                                    Private\n                                    Static\n                                convertToTuple\n                            \n                            \n                                    Private\n                                generateQuery\n                            \n                            \n                                getDeviceLocation\n                            \n                            \n                                getEventLocation\n                            \n                            \n                                getNearbyEvents\n                            \n                            \n                                getNearbyGeoEvents\n                            \n                            \n                                initializeMap\n                            \n                            \n                                    Private\n                                    Static\n                                locationEquals\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(firebaseDatabase: FirebaseDatabaseProvider)\n                    \n                \n                        \n                            \n                                Defined in src/providers/geofire/geofire.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        firebaseDatabase\n                                                  \n                                                        \n                                                                    FirebaseDatabaseProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            convertToObj\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        convertToObj(location: [number, number])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/providers/geofire/geofire.ts:219\n                            \n                        \n\n\n                \n                    \n                            Converts a location between tuple and object form\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        location\n                                                        \n                                                                    [number, number]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                location as a tuple\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ILatLng\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            convertToTuple\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        convertToTuple(location: ILatLng)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/providers/geofire/geofire.ts:230\n                            \n                        \n\n\n                \n                    \n                            Converts a location between object and tuple form\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        location\n                                                        \n                                                                    ILatLng\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                location as an object\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            generateQuery\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        generateQuery(map: GoogleMap)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/providers/geofire/geofire.ts:238\n                            \n                        \n\n\n                \n                    \n                            Generates the query based on the current map window\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        map\n                                                        \n                                                                    GoogleMap\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the map to generate the query for\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     GeoFire.QueryCriteria\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getDeviceLocation\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetDeviceLocation(key: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/providers/geofire/geofire.ts:203\n                            \n                        \n\n\n                \n                    \n                            Gets the location of the device as an observable updating every 2 seconds\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the key/id of the device\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getEventLocation\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetEventLocation(key: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/providers/geofire/geofire.ts:211\n                            \n                        \n\n\n                \n                    \n                            Gets the location of the event as an observable updating every 2 seconds\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the key/id of the event\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getNearbyEvents\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetNearbyEvents(defaultRadius: number, radius: Observable)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/providers/geofire/geofire.ts:46\n                            \n                        \n\n\n                \n                    \n                            Gets nearby events based on the given radius\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        defaultRadius\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the radius to start pulling events for immediately\n\n                                                        \n                                                \n                                                \n                                                        radius\n                                                        \n                                                                    Observable\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                an observable that updates the query radius\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getNearbyGeoEvents\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetNearbyGeoEvents(defaultRadius: number, radius: Observable)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/providers/geofire/geofire.ts:98\n                            \n                        \n\n\n                \n                    \n                            Gets nearby events based on the given radius, including their distance from the user's position\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        defaultRadius\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the radius to start pulling events for immediately\n\n                                                        \n                                                \n                                                \n                                                        radius\n                                                        \n                                                                    Observable\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                an observable that updates the query radius\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initializeMap\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitializeMap(map: GoogleMap, onClickGenerator: (undefined) => void)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/providers/geofire/geofire.ts:158\n                            \n                        \n\n\n                \n                    \n                            Initializes the map to pull the markers from Geofire\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        map\n                                                        \n                                                                    GoogleMap\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the map to put the markers onto\n\n                                                        \n                                                \n                                                \n                                                        onClickGenerator\n                                                        \n                                                                    function\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the function to run when a marker is clicked on\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            locationEquals\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        locationEquals(one: ILatLng, two: ILatLng)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/providers/geofire/geofire.ts:248\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        one\n                                                        \n                                                                    ILatLng\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        two\n                                                        \n                                                                    ILatLng\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            devicesGeoFire\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        devicesGeoFire:     GeoFire\n\n                    \n                \n                    \n                        \n                            Type :     GeoFire\n\n                        \n                    \n                        \n                            \n                                    Defined in src/providers/geofire/geofire.ts:29\n                            \n                        \n\n                \n                    \n                        The geofire initialized around devices\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            eventsGeofire\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        eventsGeofire:     GeoFire\n\n                    \n                \n                    \n                        \n                            Type :     GeoFire\n\n                        \n                    \n                        \n                            \n                                    Defined in src/providers/geofire/geofire.ts:34\n                            \n                        \n\n                \n                    \n                        The geofire initialized around events\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { GoogleMap, GoogleMapsEvent, VisibleRegion, Spherical, Marker, ILatLng, LocationService, MyLocation } from '@ionic-native/google-maps';\nimport GeoFire, { GeoQuery, GeoCallbackRegistration } from 'geofire';\nimport { FirebaseDatabaseProvider } from '../firebase-database/firebase-database';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\nimport 'rxjs/add/operator/combineLatest';\nimport 'rxjs/add/operator/shareReplay';\nimport 'rxjs/add/operator/scan';\nimport 'rxjs/add/operator/do';\nimport 'rxjs/add/operator/mergeMap';\nimport 'rxjs/add/observable/of';\nimport 'rxjs/add/observable/interval';\nimport { Event } from '../../models/event';\nimport { Subscription } from 'rxjs/Subscription';\n\ndeclare type Location = [number, number];\nexport declare type GeoItem = [T, Location, number];\n\n/**\n * Provider offering methods to access Geofire\n */\n@Injectable()\nexport class GeofireProvider {\n\n  /**\n   * The geofire initialized around devices\n   */\n  private devicesGeoFire: GeoFire;\n  \n  /**\n   * The geofire initialized around events\n   */\n  private eventsGeofire: GeoFire;\n  \n  constructor(private firebaseDatabase: FirebaseDatabaseProvider) {\n    this.devicesGeoFire = new GeoFire(firebaseDatabase.getDevicesLocations());\n    this.eventsGeofire = new GeoFire(firebaseDatabase.getEventsLocations());\n  }\n  \n  /**\n   * Gets nearby events based on the given radius\n   * @param defaultRadius the radius to start pulling events for immediately\n   * @param radius an observable that updates the query radius\n   */\n  getNearbyEvents(defaultRadius: number, radius: Observable): Observable {    \n    let generator = (observer: Observer) => {\n      let onKeyEnteredRegistration: GeoCallbackRegistration, onKeyExitedRegistration: GeoCallbackRegistration;\n      \n      let subscriptions: {[id: string]: Subscription} = {};\n      \n      let query: GeoQuery;\n      //TODO if location is changing, use a combineLatest\n      //eventually use something like flatMap() or .scan() to merge observables instead of current approach\n      LocationService.getMyLocation().then((myLocation: MyLocation) => {\n        query = this.eventsGeofire.query({\n          center: GeofireProvider.convertToTuple(myLocation.latLng),\n          radius: defaultRadius\n        });\n        let last = -1; // funny way of doing distinctUntilChanged since this edition doesn't seem to have it\n        radius.subscribe((radius) => {\n          if(radius != last){\n            last = radius;\n            query.updateCriteria({radius : 1.61 * radius});\n          }\n        });\n        onKeyEnteredRegistration = query.on(\"key_entered\", (key, location, distance) => {\n          subscriptions[key] = this.firebaseDatabase.getEvent(key).subscribe(event => observer.next([key, event]));\n        });\n        \n        onKeyExitedRegistration = query.on(\"key_exited\", (key, location, distance) => {\n          subscriptions[key].unsubscribe();\n          delete subscriptions[key];\n          observer.next([key, null]);\n        });\n      });\n      return () => {\n        if(onKeyEnteredRegistration) onKeyEnteredRegistration.cancel();\n        \n        if(onKeyExitedRegistration) onKeyExitedRegistration.cancel();\n      }\n    }\n    return Observable.create(generator)\n    .scan((acc: {[key: string] : Event}, value: [string, Event], index: number) => {\n      if(value[1])\n        acc[value[0]] = value[1];\n      else\n        delete acc[value[0]];\n      return acc;\n    }, {});\n  }\n  \n  /**\n   * Gets nearby events based on the given radius, including their distance from the user's position\n   * @param defaultRadius the radius to start pulling events for immediately\n   * @param radius an observable that updates the query radius\n   */\n  getNearbyGeoEvents(defaultRadius: number, radius: Observable): Observable}> {    \n    let generator = (observer: Observer) => {\n      let onKeyEnteredRegistration: GeoCallbackRegistration, onKeyMovedRegistration: GeoCallbackRegistration, onKeyExitedRegistration: GeoCallbackRegistration;\n      \n      let subscriptions: {[id: string]: Subscription} = {};\n      \n      let query: GeoQuery;\n      //TODO if location is changing, use a combineLatest\n      //eventually use something like flatMap() or .scan() to merge observables instead of current approach\n      LocationService.getMyLocation().then((myLocation: MyLocation) => {\n        query = this.eventsGeofire.query({\n          center: GeofireProvider.convertToTuple(myLocation.latLng),\n          radius: defaultRadius\n        });\n        let last = -1; // funny way of doing distinctUntilChanged since this edition doesn't seem to have it\n        radius.subscribe((radius) => {\n          if(radius != last){\n            last = radius;\n            query.updateCriteria({radius : 1.61 * radius});\n          }\n        });\n        onKeyEnteredRegistration = query.on(\"key_entered\", (key, location, distance) => {\n          subscriptions[key] = this.firebaseDatabase.getEvent(key).subscribe(event => observer.next([key, [event, location, distance]]));\n        });\n\n        onKeyMovedRegistration = query.on(\"key_moved\", (key, location, distance) => {\n          subscriptions[key].unsubscribe();\n          subscriptions[key] = this.firebaseDatabase.getEvent(key).subscribe(event => observer.next([key, [event, location, distance]]));\n        });\n        \n        onKeyExitedRegistration = query.on(\"key_exited\", (key, location, distance) => {\n          subscriptions[key].unsubscribe();\n          delete subscriptions[key];\n          observer.next([key, null]);\n        });\n      });\n      return () => {\n        if(onKeyEnteredRegistration) onKeyEnteredRegistration.cancel();\n\n        if(onKeyMovedRegistration) onKeyMovedRegistration.cancel();\n        \n        if(onKeyExitedRegistration) onKeyExitedRegistration.cancel();\n      }\n    }\n    return Observable.create(generator)\n    .scan((acc: {[key: string] : Event}, value: [string, Event], index: number) => {\n      if(value[1])\n        acc[value[0]] = value[1];\n      else\n        delete acc[value[0]];\n      return acc;\n    }, {});\n  }\n  \n  /**\n   * Initializes the map to pull the markers from Geofire\n   * @param map the map to put the markers onto\n   * @param onClickGenerator the function to run when a marker is clicked on\n   * @deprecated Needs to change\n   */\n  initializeMap(map: GoogleMap, onClickGenerator: (key) => (any) => any){\n    let query: GeoQuery;\n    let markers: Map> = new Map();\n    map.addEventListener(GoogleMapsEvent.MAP_READY).subscribe(() => {\n      query = this.devicesGeoFire.query(this.generateQuery(map));\n      var onKeyEnteredRegistration = query.on(\"key_entered\", (key, location, distance) => {\n        let marker = map.addMarker({\n          position: GeofireProvider.convertToObj(location)\n        }).then((marker) => {\n          marker.on(GoogleMapsEvent.MARKER_CLICK).subscribe(onClickGenerator(key));\n          return marker;\n        });\n        markers[key] = marker;\n        return marker;\n        //add marker at position\n        //add it to dict based on key\n      });\n      \n      var onKeyExitedRegistration = query.on(\"key_exited\", (key, location, distance) => {\n        //remove marker at index\n        markers[key].then((marker: Marker) => {\n          marker.remove();\n        });\n        markers.delete(key);\n        return null;\n      });\n      \n      var onKeyMovedRegistration = query.on(\"key_moved\", (key, location, distance) => {\n        //update marker at index\n        markers[key] = markers[key].then((marker: Marker) => {\n          marker.setPosition(GeofireProvider.convertToObj(location));\n          return marker;\n          //use Spherical.computeHeading() with old to get icon rotation\n        });\n      });\n    });\n    map.addEventListener(GoogleMapsEvent.CAMERA_MOVE_END).subscribe(()=>{\n      query.updateCriteria(this.generateQuery(map));\n    });\n  }\n\n  /**\n   * Gets the location of the device as an observable updating every 2 seconds\n   * @param key the key/id of the device\n   */\n  getDeviceLocation(key: string): Observable {\n    return Observable.interval(2000).switchMap(() => this.devicesGeoFire.get(key).then(GeofireProvider.convertToObj)).distinctUntilChanged(GeofireProvider.locationEquals);\n  }\n\n  /**\n   * Gets the location of the event as an observable updating every 2 seconds\n   * @param key the key/id of the event\n   */\n  getEventLocation(key: string): Observable {\n    return Observable.interval(2000).switchMap(() => this.eventsGeofire.get(key).then(GeofireProvider.convertToObj)).distinctUntilChanged(GeofireProvider.locationEquals);\n  }\n  \n  /**\n   * Converts a location between tuple and object form\n   * @param {[number, number]} location location as a tuple\n   */\n  private static convertToObj(location: [number, number]): ILatLng {\n    return {\n      lng: location[1],\n      lat: location[0]\n    };\n  }\n  \n  /**\n   * Converts a location between object and tuple form\n   * @param {ILatLng} location location as an object\n   */\n  private static convertToTuple(location: ILatLng): [number, number] {\n    return [location.lat, location.lng];\n  }\n  \n  /**\n   * Generates the query based on the current map window\n   * @param {GoogleMap} map the map to generate the query for\n   */\n  private generateQuery(map: GoogleMap): GeoFire.QueryCriteria {\n    let visibleRegion: VisibleRegion = map.getVisibleRegion();\n    let diameter = Spherical.computeDistanceBetween(visibleRegion.northeast, visibleRegion.southwest);\n    let camera = map.getCameraPosition().target;\n    return {\n      center: GeofireProvider.convertToTuple(camera),\n      radius: diameter\n    };\n  }\n\n  private static locationEquals(one: ILatLng, two: ILatLng){\n    return one && two && one.lat == two.lat && one.lng == two.lng;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomePage.html":{"url":"components/HomePage.html","title":"component - HomePage","body":"\n                   \n\n\n\n\n\n  Components\n  HomePage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/pages/home/home.ts\n\n\n    \n        Description\n    \n    \n        Home page\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                page-home\n            \n\n\n\n\n            \n                templateUrl\n                home.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loading\n                            \n                            \n                                    Public\n                                loadingCtrl\n                            \n                            \n                                    Private\n                                map\n                            \n                            \n                                    Public\n                                navCtrl\n                            \n                            \n                                    Public\n                                toastCtrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                centerOnUser\n                            \n                            \n                                loadMap\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(loadingCtrl: LoadingController, navCtrl: NavController, toastCtrl: ToastController, platform: Platform, firebaseAuth: FirebaseAuthProvider, geofire: GeofireProvider)\n                    \n                \n                        \n                            \n                                Defined in src/pages/home/home.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loadingCtrl\n                                                  \n                                                        \n                                                                    LoadingController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        navCtrl\n                                                  \n                                                        \n                                                                    NavController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastCtrl\n                                                  \n                                                        \n                                                                    ToastController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        firebaseAuth\n                                                  \n                                                        \n                                                                    FirebaseAuthProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        geofire\n                                                  \n                                                        \n                                                                    GeofireProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            centerOnUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        centerOnUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/pages/home/home.ts:83\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadMap\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadMap()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/pages/home/home.ts:64\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/pages/home/home.ts:52\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loading:     Loading\n\n                    \n                \n                    \n                        \n                            Type :     Loading\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/home/home.ts:40\n                            \n                        \n\n                \n                    \n                        Loading dialog that shows while waiting to get the user's location\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loadingCtrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loadingCtrl:     LoadingController\n\n                    \n                \n                    \n                        \n                            Type :     LoadingController\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/home/home.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            map\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        map:     GoogleMap\n\n                    \n                \n                    \n                        \n                            Type :     GoogleMap\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/home/home.ts:35\n                            \n                        \n\n                \n                    \n                        reference to the included Google Maps element\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            navCtrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        navCtrl:     NavController\n\n                    \n                \n                    \n                        \n                            Type :     NavController\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/home/home.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toastCtrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toastCtrl:     ToastController\n\n                    \n                \n                    \n                        \n                            Type :     ToastController\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/home/home.ts:45\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport {\n  GoogleMaps,\n  GoogleMap,\n  Marker,\n  MyLocation\n} from '@ionic-native/google-maps';\nimport { LoadingController, ToastController, Platform, NavController, Loading } from 'ionic-angular';\nimport { FirebaseAuthProvider } from '../../providers/firebase-auth/firebase-auth';\nimport { LoginPage } from '../login/login';\nimport { GeofireProvider } from '../../providers/geofire/geofire';\nimport { DeviceInfoPage } from '../device-info/device-info';\n\n/**\n * Starting longitude for the map if location is not found\n */\nconst startLong = -86.2379;\n\n/**\n * Starting latitude for the map if location is not found\n */\nconst startLat = 41.7002;\n\n/**\n * Home page\n */\n@Component({\n  selector: 'page-home',\n  templateUrl: 'home.html'\n})\nexport class HomePage {\n  /**\n   * reference to the included Google Maps element\n   */\n  private map: GoogleMap;\n\n  /**\n   * Loading dialog that shows while waiting to get the user's location\n   */\n  loading: Loading;\n  \n  constructor(\n    public loadingCtrl: LoadingController,\n    public navCtrl: NavController,\n    public toastCtrl: ToastController,\n    private platform: Platform,\n    private firebaseAuth: FirebaseAuthProvider,\n    private geofire: GeofireProvider\n  ) {\n  }\n  \n  async ngOnInit() {\n    // Since ngOnInit() is executed before `deviceready` event,\n    // you have to wait the event.\n    this.firebaseAuth.user.subscribe((user) => {\n      if(!user)\n        \n      this.navCtrl.push(LoginPage);\n    });\n    await this.platform.ready();\n    await this.loadMap();\n  }\n  \n  loadMap() {\n    this.map = GoogleMaps.create('map_canvas', {\n      camera: {\n        target: {\n          lat: startLat,\n          lng: startLong\n        },\n        zoom: 15,\n        tilt: 30\n      }\n    });\n    let onClickGenerator = (key: any) => {\n      return () => {\n        this.navCtrl.push(DeviceInfoPage, {key: key});\n      };\n    }\n    this.geofire.initializeMap(this.map, onClickGenerator);\n  }\n  \n  async centerOnUser() {\n    this.loading = this.loadingCtrl.create({\n      content: 'Please wait...'\n    });\n    this.loading.present();\n    \n    // Get the location of you\n    this.map.getMyLocation().then((location: MyLocation) => {\n      this.loading.dismiss();\n      \n      // Move the map camera to the location with animation\n      this.map.animateCamera({\n        target: location.latLng,\n        zoom: 17,\n        tilt: 30\n      });\n      \n      /*\n      // add a marker\n      let marker: Marker = this.map.addMarkerSync({\n        //title: 'You are here',\n        //snippet: 'This plugin is awesome!',\n        position: location.latLng,\n        //animation: GoogleMapsAnimation.BOUNCE\n      });\n      */\n      /*\n      // show the infoWindow\n      marker.showInfoWindow();\n      \n      // If clicked it, display the alert\n      marker.on(GoogleMapsEvent.MARKER_CLICK).subscribe(() => {\n        this.showToast('clicked!');\n      });*/\n    })\n    .catch(err => {\n      this.loading.dismiss();\n      this.toastCtrl.create({\n        message: err.error_message,\n        position: 'bottom'\n      }).present();\n    });\n  }\n}\n    \n\n    \n        \n  \n    \n      \n    \n    Home\n  \n\n\n\n  Center on User\n  \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Home    Center on User    '\n    var COMPONENTS = [{'name': 'CalendarComponent', 'selector': 'calendar'},{'name': 'DeviceInfoPage', 'selector': 'page-device-info'},{'name': 'EventDatePage', 'selector': 'page-event-date'},{'name': 'EventInfoPage', 'selector': 'page-event-info'},{'name': 'EventItemComponent', 'selector': 'event-item'},{'name': 'EventsPage', 'selector': 'page-events'},{'name': 'HomePage', 'selector': 'page-home'},{'name': 'LoginModal', 'selector': 'page-login-modal'},{'name': 'LoginPage', 'selector': 'page-login'},{'name': 'MapComponent', 'selector': 'map'},{'name': 'MyApp', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomePage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginModal.html":{"url":"components/LoginModal.html","title":"component - LoginModal","body":"\n                   \n\n\n\n\n\n  Components\n  LoginModal\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/pages/login-modal/login-modal.ts\n\n\n    \n        Description\n    \n    \n        Modal that allows for a user to sign in or sign up with their username and password\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                page-login-modal\n            \n\n\n\n\n            \n                templateUrl\n                login-modal.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                checkPasswords\n                            \n                            \n                                    Private\n                                loginForm\n                            \n                            \n                                    Public\n                                navCtrl\n                            \n                            \n                                    Public\n                                navParams\n                            \n                            \n                                    Private\n                                needAccount\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                closeModal\n                            \n                            \n                                submit\n                            \n                            \n                                    Private\n                                toggle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(navCtrl: NavController, navParams: NavParams, viewCtrl: ViewController, formBuilder: FormBuilder, firebaseAuth: FirebaseAuthProvider, toastCtrl: ToastController)\n                    \n                \n                        \n                            \n                                Defined in src/pages/login-modal/login-modal.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        navCtrl\n                                                  \n                                                        \n                                                                    NavController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        navParams\n                                                  \n                                                        \n                                                                    NavParams\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        viewCtrl\n                                                  \n                                                        \n                                                                    ViewController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        firebaseAuth\n                                                  \n                                                        \n                                                                    FirebaseAuthProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastCtrl\n                                                  \n                                                        \n                                                                    ToastController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            closeModal\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        closeModal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/pages/login-modal/login-modal.ts:70\n                            \n                        \n\n\n                \n                    \n                            UI triggered action that closes the modal\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submit\n                            \n                            \n                        \n                    \n                \n                \n                    \nsubmit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/pages/login-modal/login-modal.ts:37\n                            \n                        \n\n\n                \n                    \n                            Submits the login form, logs in or signs up the user, and handles response appropiately\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            toggle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggle()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/pages/login-modal/login-modal.ts:77\n                            \n                        \n\n\n                \n                    \n                            UI driven toggle between signing in and signing up\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkPasswords\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        checkPasswords:     \n\n                    \n                \n                    \n                        \n                            Default value : (control: AbstractControl) => {\n    if(this.needAccount && control.value != this.loginForm.controls.password.value){\n      return { mismatch: true };\n    }\n    return;\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/login-modal/login-modal.ts:60\n                            \n                        \n\n                \n                    \n                        Function that checks whether the confirm password field is in sync with the password field - given whether the user is loggin in or signing up\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loginForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loginForm:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/login-modal/login-modal.ts:24\n                            \n                        \n\n                \n                    \n                        Form group containing the username, password, and potentially confirm password\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            navCtrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        navCtrl:     NavController\n\n                    \n                \n                    \n                        \n                            Type :     NavController\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/login-modal/login-modal.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            navParams\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        navParams:     NavParams\n\n                    \n                \n                    \n                        \n                            Type :     NavParams\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/login-modal/login-modal.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            needAccount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        needAccount:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/login-modal/login-modal.ts:19\n                            \n                        \n\n                \n                    \n                        Switch changing whether the user is shown the sign up or sign in content\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams, ViewController, ToastController } from 'ionic-angular';\nimport { FormBuilder, FormGroup, Validators, AbstractControl } from '@angular/forms';\nimport { FirebaseAuthProvider } from '../../providers/firebase-auth/firebase-auth';\nimport { Observable } from 'rxjs/Observable';\n\n/**\n * Modal that allows for a user to sign in or sign up with their username and password\n */\n@IonicPage()\n@Component({\n  selector: 'page-login-modal',\n  templateUrl: 'login-modal.html',\n})\nexport class LoginModal {\n  /**\n   * Switch changing whether the user is shown the sign up or sign in content\n   */\n  private needAccount = false;\n\n  /**\n   * Form group containing the username, password, and potentially confirm password\n   */\n  private loginForm : FormGroup;\n  \n  constructor(public navCtrl: NavController, public navParams: NavParams, private viewCtrl: ViewController, private formBuilder: FormBuilder, private firebaseAuth: FirebaseAuthProvider, private toastCtrl: ToastController) {\n    this.loginForm = this.formBuilder.group({\n      email: ['', Validators.compose([Validators.required, Validators.email])],\n      password: ['', Validators.compose([Validators.required, Validators.minLength(8)])],\n      passwordCheck: ['', this.checkPasswords]\n    });\n  }\n  \n  /**\n   * Submits the login form, logs in or signs up the user, and handles response appropiately\n   */\n  submit(): void {\n    if(this.loginForm.status == \"VALID\"){\n      let result: Observable;\n      if(this.needAccount){\n        result = this.firebaseAuth.newAccount(this.loginForm.controls.email.value, this.loginForm.controls.password.value);\n      } else {\n        result = this.firebaseAuth.signInWithCreds(this.loginForm.controls.email.value, this.loginForm.controls.password.value);\n      }\n      result.subscribe((result) =>{\n        this.navCtrl.pop();\n      }, (error) => {\n        this.toastCtrl.create({\n          message: error,\n          duration: 2000\n        }).present();\n      });\n    }\n  }\n  \n  /**\n   * Function that checks whether the confirm password field is in sync with the password field - given whether the user is loggin in or signing up\n   * @returns an object with the mismatch flag if out of sync, otherwise nothing\n   */\n  checkPasswords = (control: AbstractControl) => {\n    if(this.needAccount && control.value != this.loginForm.controls.password.value){\n      return { mismatch: true };\n    }\n    return;\n  }\n  \n  /**\n   * UI triggered action that closes the modal\n   */\n  private closeModal(){\n    this.viewCtrl.dismiss();\n  }\n  \n  /**\n   * UI driven toggle between signing in and signing up\n   */\n  private toggle(){\n    this.needAccount = !this.needAccount;\n  }\n  \n}\n\n    \n\n    \n        \n  \n    Login\n    \n      Close\n    \n  \n\n\n\n  \n    \n      \n        Email\n        \n        Invalid email\n      \n      \n        Password\n        \n        \n      \n      \n        Confirm Password\n        \n        \n      \n      \n      Submit\n      {{needAccount ? 'Already have an account?' : 'Don\\\\'t have an account?'}}\n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Login          Close                          Email                Invalid email                    Password                                    Confirm Password                                  Submit      {{needAccount ? \\'Already have an account?\\' : \\'Don\\\\\\'t have an account?\\'}}      '\n    var COMPONENTS = [{'name': 'CalendarComponent', 'selector': 'calendar'},{'name': 'DeviceInfoPage', 'selector': 'page-device-info'},{'name': 'EventDatePage', 'selector': 'page-event-date'},{'name': 'EventInfoPage', 'selector': 'page-event-info'},{'name': 'EventItemComponent', 'selector': 'event-item'},{'name': 'EventsPage', 'selector': 'page-events'},{'name': 'HomePage', 'selector': 'page-home'},{'name': 'LoginModal', 'selector': 'page-login-modal'},{'name': 'LoginPage', 'selector': 'page-login'},{'name': 'MapComponent', 'selector': 'map'},{'name': 'MyApp', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginModal'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginPage.html":{"url":"components/LoginPage.html","title":"component - LoginPage","body":"\n                   \n\n\n\n\n\n  Components\n  LoginPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/pages/login/login.ts\n\n\n    \n        Description\n    \n    \n        Page that the user is shown if they are not logged in\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                page-login\n            \n\n\n\n\n            \n                templateUrl\n                login.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                firebaseAuth\n                            \n                            \n                                    Public\n                                navCtrl\n                            \n                            \n                                    Public\n                                navParams\n                            \n                            \n                                    Public\n                                toastCtrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loginAnonymously\n                            \n                            \n                                loginEmailPassword\n                            \n                            \n                                loginGoogle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(navCtrl: NavController, navParams: NavParams, firebaseAuth: FirebaseAuthProvider, toastCtrl: ToastController, modalCtrl: ModalController)\n                    \n                \n                        \n                            \n                                Defined in src/pages/login/login.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        navCtrl\n                                                  \n                                                        \n                                                                    NavController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        navParams\n                                                  \n                                                        \n                                                                    NavParams\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        firebaseAuth\n                                                  \n                                                        \n                                                                    FirebaseAuthProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastCtrl\n                                                  \n                                                        \n                                                                    ToastController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalCtrl\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginAnonymously\n                            \n                            \n                        \n                    \n                \n                \n                    \nloginAnonymously()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/pages/login/login.ts:27\n                            \n                        \n\n\n                \n                    \n                            Method called by UI to trigger backend service to login the user and show relevant error message\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginEmailPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \nloginEmailPassword()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/pages/login/login.ts:51\n                            \n                        \n\n\n                \n                    \n                            Method called by the UI to trigger the login with email and password modal\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginGoogle\n                            \n                            \n                        \n                    \n                \n                \n                    \nloginGoogle()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/pages/login/login.ts:44\n                            \n                        \n\n\n                \n                    \n                            Method called by UI to trigger backend service to login the user with Google\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            firebaseAuth\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        firebaseAuth:     FirebaseAuthProvider\n\n                    \n                \n                    \n                        \n                            Type :     FirebaseAuthProvider\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/login/login.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            navCtrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        navCtrl:     NavController\n\n                    \n                \n                    \n                        \n                            Type :     NavController\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/login/login.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            navParams\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        navParams:     NavParams\n\n                    \n                \n                    \n                        \n                            Type :     NavParams\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/login/login.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toastCtrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toastCtrl:     ToastController\n\n                    \n                \n                    \n                        \n                            Type :     ToastController\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/login/login.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams, ToastController, ModalController } from 'ionic-angular';\nimport { FirebaseAuthProvider } from '../../providers/firebase-auth/firebase-auth';\nimport { LoginModal } from '../login-modal/login-modal';\n\n/**\n * Page that the user is shown if they are not logged in\n */\n@IonicPage()\n@Component({\n  selector: 'page-login',\n  templateUrl: 'login.html',\n})\nexport class LoginPage {\n  \n  constructor(public navCtrl: NavController, public navParams: NavParams, public firebaseAuth: FirebaseAuthProvider, public toastCtrl: ToastController, private modalCtrl: ModalController) {\n    firebaseAuth.user.subscribe((user) => {\n      if(user){\n        navCtrl.pop();\n      }\n    });\n  }\n  \n  /**\n   * Method called by UI to trigger backend service to login the user and show relevant error message\n   */\n  loginAnonymously(){\n    this.firebaseAuth.signInAnonymously().subscribe((successful) => {\n      if(successful){\n        this.navCtrl.pop();\n      } else {\n        this.toastCtrl.create({\n          message: 'Failed to login anonymously',\n          duration: 3000,\n          position: 'top'\n        }).present();\n      }\n    });\n  }\n  \n  /**\n   * Method called by UI to trigger backend service to login the user with Google\n   */\n  loginGoogle(){\n    this.firebaseAuth.signInWithGoogle();\n  }\n  \n  /**\n   * Method called by the UI to trigger the login with email and password modal\n   */\n  loginEmailPassword(){\n    let loginModal = this.modalCtrl.create(LoginModal);\n    loginModal.present();\n  }\n  \n}\n\n    \n\n    \n        \n\n  \n  \n    Login\n  \n  \n\n\n\n\n  Log-in via Google\n  \n  Log-in with Email and Password\n  \n  Log-in Anonymously\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        Login      Log-in via Google    Log-in with Email and Password    Log-in Anonymously'\n    var COMPONENTS = [{'name': 'CalendarComponent', 'selector': 'calendar'},{'name': 'DeviceInfoPage', 'selector': 'page-device-info'},{'name': 'EventDatePage', 'selector': 'page-event-date'},{'name': 'EventInfoPage', 'selector': 'page-event-info'},{'name': 'EventItemComponent', 'selector': 'event-item'},{'name': 'EventsPage', 'selector': 'page-events'},{'name': 'HomePage', 'selector': 'page-home'},{'name': 'LoginModal', 'selector': 'page-login-modal'},{'name': 'LoginPage', 'selector': 'page-login'},{'name': 'MapComponent', 'selector': 'map'},{'name': 'MyApp', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MapComponent.html":{"url":"components/MapComponent.html","title":"component - MapComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MapComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/components/map/map.ts\n\n\n    \n        Description\n    \n    \n        A component that allows for visualization of a single location on a map\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                map\n            \n\n\n\n\n            \n                templateUrl\n                map.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                map\n                            \n                            \n                                map_div\n                            \n                            \n                                marker\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                AfterViewInit\n                            \n                            \n                                loadMap\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                location\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    location\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        location\n                    \n                    \n                        Method allowing for parent components to pass in a location\nAlso initializes the map if it had not already been done\n\n                    \n                \n                        \n                            \n                                    Defined in src/components/map/map.ts:34\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            AfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/map/map.ts:52\n                            \n                        \n\n\n                \n                    \n                            Initializes the map after the component is done being initialized\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadMap\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadMap()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/map/map.ts:59\n                            \n                        \n\n\n                \n                    \n                            Sets up the map using the map_div\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            map\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        map:     GoogleMap\n\n                    \n                \n                    \n                        \n                            Type :     GoogleMap\n\n                        \n                    \n                        \n                            \n                                    Defined in src/components/map/map.ts:16\n                            \n                        \n\n                \n                    \n                        A reference to the Google Map in this element\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            map_div\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        map_div:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('map')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/map/map.ts:26\n                            \n                        \n\n                \n                    \n                        Reference to the div that will contain the map\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            marker\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        marker:     Promise\n\n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in src/components/map/map.ts:21\n                            \n                        \n\n                \n                    \n                        The marker which marks the passed in location - as a promise for chained then() calls\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        location\n                    \n                \n\n\n                \n                    \n                        setlocation(location)\n                    \n                \n                            \n                                \n                                    Defined in src/components/map/map.ts:34\n                                \n                            \n                    \n                        \n                                Method allowing for parent components to pass in a location\nAlso initializes the map if it had not already been done\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            location\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, Input, ViewChild, ElementRef } from '@angular/core';\nimport { GoogleMaps, GoogleMap, ILatLng, Marker } from '@ionic-native/google-maps';\n\n/**\n * A component that allows for visualization of a single location on a map\n */\n@Component({\n  selector: 'map',\n  templateUrl: 'map.html'\n})\nexport class MapComponent {\n  \n  /**\n   * A reference to the Google Map in this element\n   */\n  map: GoogleMap;\n\n  /**\n   * The marker which marks the passed in location - as a promise for chained then() calls\n   */\n  marker: Promise;\n\n  /**\n   * Reference to the div that will contain the map\n   */\n  @ViewChild('map') map_div: ElementRef;\n\n  /**\n   * Method allowing for parent components to pass in a location\n   * \n   * Also initializes the map if it had not already been done\n   */\n  @Input()\n  set location(location: ILatLng){\n    if(!this.map) this.loadMap();\n\n    this.map.setCameraTarget(location);\n    \n    if(!this.marker){\n      this.map.setCameraZoom(15);\n      this.marker = this.map.addMarker({\n        position: location\n      });\n    } else {\n      this.marker.then((marker) => { marker.setPosition(location); return marker; });\n    }\n  }\n\n  /**\n   * Initializes the map after the component is done being initialized\n   */\n  AfterViewInit(){\n    this.loadMap();\n  }\n\n  /**\n   * Sets up the map using the map_div\n   */\n  loadMap() {\n    if(!this.map_div) return;\n    this.map = GoogleMaps.create(this.map_div.nativeElement, {\n      camera: {\n        zoom: 15,\n        tilt: 30\n      }\n    });\n    //need to init?\n  }\n}\n\n    \n\n    \n        \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'CalendarComponent', 'selector': 'calendar'},{'name': 'DeviceInfoPage', 'selector': 'page-device-info'},{'name': 'EventDatePage', 'selector': 'page-event-date'},{'name': 'EventInfoPage', 'selector': 'page-event-info'},{'name': 'EventItemComponent', 'selector': 'event-item'},{'name': 'EventsPage', 'selector': 'page-events'},{'name': 'HomePage', 'selector': 'page-home'},{'name': 'LoginModal', 'selector': 'page-login-modal'},{'name': 'LoginPage', 'selector': 'page-login'},{'name': 'MapComponent', 'selector': 'map'},{'name': 'MyApp', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MapComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MyApp.html":{"url":"components/MyApp.html","title":"component - MyApp","body":"\n                   \n\n\n\n\n\n  Components\n  MyApp\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                templateUrl\n                app.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                nav\n                            \n                            \n                                pages\n                            \n                            \n                                    Public\n                                platform\n                            \n                            \n                                rootPage\n                            \n                            \n                                    Public\n                                splashScreen\n                            \n                            \n                                    Public\n                                statusBar\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initializeApp\n                            \n                            \n                                openPage\n                            \n                            \n                                signOut\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(platform: Platform, statusBar: StatusBar, splashScreen: SplashScreen, firebaseAuth: FirebaseAuthProvider)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        statusBar\n                                                  \n                                                        \n                                                                    StatusBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        splashScreen\n                                                  \n                                                        \n                                                                    SplashScreen\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        firebaseAuth\n                                                  \n                                                        \n                                                                    FirebaseAuthProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initializeApp\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitializeApp()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openPage\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenPage(page)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        page\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signOut\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignOut()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:51\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nav\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        nav:     Nav\n\n                    \n                \n                    \n                        \n                            Type :     Nav\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(Nav)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pages\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pages:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            platform\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        platform:     Platform\n\n                    \n                \n                    \n                        \n                            Type :     Platform\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rootPage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        rootPage:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : HomePage\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            splashScreen\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        splashScreen:     SplashScreen\n\n                    \n                \n                    \n                        \n                            Type :     SplashScreen\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            statusBar\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        statusBar:     StatusBar\n\n                    \n                \n                    \n                        \n                            Type :     StatusBar\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChild } from '@angular/core';\nimport { Nav, Platform } from 'ionic-angular';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\n\nimport { HomePage } from '../pages/home/home';\nimport { Environment } from '@ionic-native/google-maps';\nimport { FirebaseAuthProvider } from '../providers/firebase-auth/firebase-auth';\nimport { EventsPage } from '../pages/events/events';\n\n@Component({\n  templateUrl: 'app.html'\n})\nexport class MyApp {\n  @ViewChild(Nav) nav: Nav;\n\n  rootPage: any = HomePage;\n\n  pages: Array;\n\n  constructor(public platform: Platform, public statusBar: StatusBar, public splashScreen: SplashScreen, private firebaseAuth: FirebaseAuthProvider) {\n    this.initializeApp();\n\n    // used for an example of ngFor and navigation\n    this.pages = [\n      { title: 'Home', component: HomePage },\n      { title: 'Events', component: EventsPage }\n    ];\n\n  }\n\n  initializeApp() {\n    this.platform.ready().then(() => {\n      // Okay, so the platform is ready and our plugins are available.\n      // Here you can do any higher level native things you might need.\n      Environment.setEnv({\n        'API_KEY_FOR_BROWSER_RELEASE': 'G_API_KEY',\n        'API_KEY_FOR_BROWSER_DEBUG': 'G_API_KEY'\n      });\n      this.statusBar.styleDefault();\n      this.splashScreen.hide();\n    });\n  }\n\n  openPage(page) {\n    // Reset the content nav to have just this page\n    // we wouldn't want the back button to show in this scenario\n    this.nav.setRoot(page.component);\n  }\n\n  signOut(){\n    this.firebaseAuth.signOut();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      Menu\n    \n  \n\n  \n    \n      \n        {{p.title}}\n      \n      \n          Sign Out\n      \n    \n  \n\n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Menu                          {{p.title}}                      Sign Out            '\n    var COMPONENTS = [{'name': 'CalendarComponent', 'selector': 'calendar'},{'name': 'DeviceInfoPage', 'selector': 'page-device-info'},{'name': 'EventDatePage', 'selector': 'page-event-date'},{'name': 'EventInfoPage', 'selector': 'page-event-info'},{'name': 'EventItemComponent', 'selector': 'event-item'},{'name': 'EventsPage', 'selector': 'page-events'},{'name': 'HomePage', 'selector': 'page-home'},{'name': 'LoginModal', 'selector': 'page-login-modal'},{'name': 'LoginPage', 'selector': 'page-login'},{'name': 'MapComponent', 'selector': 'map'},{'name': 'MyApp', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MyApp'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Organization.html":{"url":"classes/Organization.html","title":"class - Organization","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Organization\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/organization.ts\n        \n\n            \n                Description\n            \n            \n                The model class for an organization\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                home\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            home\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        home:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/organization.ts:14\n                            \n                        \n\n                \n                    \n                        The home of the organization - e.g. URL\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/organization.ts:9\n                            \n                        \n\n                \n                    \n                        The name of the organization\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export default class Organization {\n    \n    /**\n     * The name of the organization\n     */\n    name: string;\t/* Amazon */\n    \n    /**\n     * The home of the organization - e.g. URL\n    */\n    home: string;\t/* amazon.com */\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            \n                component\n            \n            \n                MyApp\n            \n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/components/calendar/calendar.ts\n            \n            \n                component\n            \n            \n                CalendarComponent\n            \n            \n                94 %\n                (18/19)\n            \n        \n        \n            \n                \n                src/components/event-item/event-item.ts\n            \n            \n                component\n            \n            \n                EventItemComponent\n            \n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/components/map/map.ts\n            \n            \n                component\n            \n            \n                MapComponent\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/models/device.ts\n            \n            \n                class\n            \n            \n                Device\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/models/event.ts\n            \n            \n                class\n            \n            \n                Event\n            \n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/models/organization.ts\n            \n            \n                class\n            \n            \n                Organization\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/pages/device-info/device-info.ts\n            \n            \n                component\n            \n            \n                DeviceInfoPage\n            \n            \n                66 %\n                (6/9)\n            \n        \n        \n            \n                \n                src/pages/event-date/event-date.ts\n            \n            \n                component\n            \n            \n                EventDatePage\n            \n            \n                76 %\n                (10/13)\n            \n        \n        \n            \n                \n                src/pages/event-info/event-info.ts\n            \n            \n                component\n            \n            \n                EventInfoPage\n            \n            \n                44 %\n                (4/9)\n            \n        \n        \n            \n                \n                src/pages/events/events.ts\n            \n            \n                component\n            \n            \n                EventsPage\n            \n            \n                78 %\n                (11/14)\n            \n        \n        \n            \n                \n                src/pages/home/home.ts\n            \n            \n                component\n            \n            \n                HomePage\n            \n            \n                30 %\n                (3/10)\n            \n        \n        \n            \n                \n                src/pages/home/home.ts\n            \n            \n                variable\n            \n            \n                startLat\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/pages/home/home.ts\n            \n            \n                variable\n            \n            \n                startLong\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/pages/login-modal/login-modal.ts\n            \n            \n                component\n            \n            \n                LoginModal\n            \n            \n                70 %\n                (7/10)\n            \n        \n        \n            \n                \n                src/pages/login/login.ts\n            \n            \n                component\n            \n            \n                LoginPage\n            \n            \n                44 %\n                (4/9)\n            \n        \n        \n            \n                \n                src/providers/firebase-auth/firebase-auth.ts\n            \n            \n                injectable\n            \n            \n                FirebaseAuthProvider\n            \n            \n                81 %\n                (9/11)\n            \n        \n        \n            \n                \n                src/providers/firebase-config/firebase-config.ts\n            \n            \n                injectable\n            \n            \n                FirebaseConfigProvider\n            \n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/providers/firebase-database/firebase-database.ts\n            \n            \n                injectable\n            \n            \n                FirebaseDatabaseProvider\n            \n            \n                70 %\n                (7/10)\n            \n        \n        \n            \n                \n                src/providers/geofire/geofire.ts\n            \n            \n                injectable\n            \n            \n                GeofireProvider\n            \n            \n                84 %\n                (11/13)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : 5.2.11\n        \n            @angular/common : 5.2.11\n        \n            @angular/compiler : 5.2.11\n        \n            @angular/compiler-cli : 5.2.11\n        \n            @angular/core : 5.2.11\n        \n            @angular/forms : 5.2.11\n        \n            @angular/http : 5.2.11\n        \n            @angular/platform-browser : 5.2.11\n        \n            @angular/platform-browser-dynamic : 5.2.11\n        \n            @ionic-native/core : ^4.15.0\n        \n            @ionic-native/google-maps : ^4.14.0\n        \n            @ionic-native/splash-screen : ~4.15.0\n        \n            @ionic-native/status-bar : ~4.15.0\n        \n            @ionic/storage : 2.2.0\n        \n            cordova-android : 7.0.0\n        \n            cordova-browser : 5.0.4\n        \n            cordova-ios : 4.5.5\n        \n            cordova-plugin-device : ^2.0.2\n        \n            cordova-plugin-googlemaps : ^2.4.6\n        \n            cordova-plugin-ionic-keyboard : ^2.1.3\n        \n            cordova-plugin-ionic-webview : ^2.2.0\n        \n            cordova-plugin-splashscreen : ^5.0.2\n        \n            cordova-plugin-statusbar : ^2.4.2\n        \n            cordova-plugin-whitelist : ^1.3.3\n        \n            firebase : ^5.5.4\n        \n            geofire : ^4.1.2\n        \n            ionic-angular : 3.9.2\n        \n            ionicons : 3.0.0\n        \n            rxjs : 5.5.11\n        \n            sw-toolbox : 3.6.0\n        \n            zone.js : 0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"overview - index","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_ComponentsModule\n\n\n\ncluster_ComponentsModule_declarations\n\n\n\ncluster_ComponentsModule_exports\n\n\n\n\nDeviceInfoPage\n\nDeviceInfoPage\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nDeviceInfoPage->AppModule\n\n\n\n\n\nEventDatePage\n\nEventDatePage\n\nAppModule -->\n\nEventDatePage->AppModule\n\n\n\n\n\nEventInfoPage\n\nEventInfoPage\n\nAppModule -->\n\nEventInfoPage->AppModule\n\n\n\n\n\nEventsPage\n\nEventsPage\n\nAppModule -->\n\nEventsPage->AppModule\n\n\n\n\n\nHomePage\n\nHomePage\n\nAppModule -->\n\nHomePage->AppModule\n\n\n\n\n\nLoginModal\n\nLoginModal\n\nAppModule -->\n\nLoginModal->AppModule\n\n\n\n\n\nLoginPage\n\nLoginPage\n\nAppModule -->\n\nLoginPage->AppModule\n\n\n\n\n\nMyApp\n\nMyApp\n\nAppModule -->\n\nMyApp->AppModule\n\n\n\n\n\nIonicApp \n\nIonicApp \n\nIonicApp  -->\n\nAppModule->IonicApp \n\n\n\n\n\nFirebaseAuthProvider\n\nFirebaseAuthProvider\n\nAppModule -->\n\nFirebaseAuthProvider->AppModule\n\n\n\n\n\nFirebaseConfigProvider\n\nFirebaseConfigProvider\n\nAppModule -->\n\nFirebaseConfigProvider->AppModule\n\n\n\n\n\nFirebaseDatabaseProvider\n\nFirebaseDatabaseProvider\n\nAppModule -->\n\nFirebaseDatabaseProvider->AppModule\n\n\n\n\n\nGeofireProvider\n\nGeofireProvider\n\nAppModule -->\n\nGeofireProvider->AppModule\n\n\n\n\n\nCalendarComponent\n\nCalendarComponent\n\n\n\nComponentsModule\n\nComponentsModule\n\nComponentsModule -->\n\nCalendarComponent->ComponentsModule\n\n\n\n\n\nEventItemComponent\n\nEventItemComponent\n\nComponentsModule -->\n\nEventItemComponent->ComponentsModule\n\n\n\n\n\nMapComponent\n\nMapComponent\n\nComponentsModule -->\n\nMapComponent->ComponentsModule\n\n\n\n\n\nCalendarComponent \n\nCalendarComponent \n\nCalendarComponent  -->\n\nComponentsModule->CalendarComponent \n\n\n\n\n\nEventItemComponent \n\nEventItemComponent \n\nEventItemComponent  -->\n\nComponentsModule->EventItemComponent \n\n\n\n\n\nMapComponent \n\nMapComponent \n\nMapComponent  -->\n\nComponentsModule->MapComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    11 Components\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ComponentsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            GeoItem   (src/.../geofire.ts)\n                        \n                        \n                            Location   (src/.../geofire.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/providers/geofire/geofire.ts\n    \n        \n            \n                \n                    \n                        \n                        GeoItem\n                    \n                \n                \n                    \n                        GeoItem:     [T, Location, number]\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        Location\n                    \n                \n                \n                    \n                        Location:     [number, number]\n\n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            startLat   (src/.../home.ts)\n                        \n                        \n                            startLong   (src/.../home.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/pages/home/home.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            startLat\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        startLat:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 41.7002\n                        \n                    \n\n                \n                    \n                        Starting latitude for the map if location is not found\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            startLong\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        startLong:     \n\n                    \n                \n                    \n                        \n                            Default value : -86.2379\n                        \n                    \n\n                \n                    \n                        Starting longitude for the map if location is not found\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
